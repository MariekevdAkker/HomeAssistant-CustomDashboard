button_card_templates:
  police:
    styles:
      card:
        - font-family: Avenir
  style:
    styles:
      card:
        - border-color: rgba(12, 12, 14, 0.2)
        - border-style: outset
        - border-width: 1px
        - box-shadow: 1px 1px 2px 0px rgba(10, 10, 10,0.2)
  no_style:
    styles:
      card:
        - '--ha-card-border-width': 0px
        - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
        - '--ha-card-background': rgba(0, 0, 0, 0.0)
        - '--ha-card-box-shadow': none
  custom_state:
    show_state: false
    show_label: true
    label: |
      [[[
        if( entity.state == "unavailable")
          return "Indisponible"
        if (entity.attributes.device_class == "opening" && entity.state == "on" )
          return "Ouvert"  
        if (entity.attributes.device_class == "opening" && entity.state == "off" )
          return "Fermé"  
        if (entity.attributes.device_class == "door" && entity.state == "on" )
          return "Ouvert"  
        if (entity.attributes.device_class == "door" && entity.state == "off" )
          return "Fermé"            
        if (entity.attributes.device_class == "motion" && entity.state == "on" )
          return "Détecté"  
        if (entity.attributes.device_class == "motion" && entity.state == "off" )
          return "Rien"   
        if (entity.attributes.device_class == "occupancy" && entity.state == "on" )
          return "Occupé"  
        if (entity.attributes.device_class == "occupancy" && entity.state == "off" )
          return "Absent"           
        if( entity.state == "off")
            return "Désactivé"
        if( entity.state == "on")          
          return  "Activé" 
        if( entity.state == "home")          
          return  "Présent" 
        if( entity.state == "not_home")          
          return  "Absent"         
        if( entity.state == "disarmed")          
          return  "Désarmé" 
        if( entity.state == "armed_away")          
          return  "Absent" 
        if( entity.state == "armed_home")          
          return  "Présent" 
        if( entity.state == "arming")          
          return  "Armement" 
        if( entity.state == "armed_night")          
          return  "Nuit" 
        if( entity.state == "triggered")          
          return  "Déclenché"
        if( entity.state == "pending")          
          return  "Attente"         
        if( entity.state == "locked")          
          return  "Verrouillé" 
        if( entity.state == "locking")          
          return  "Verrouillage"          
        if( entity.state == "unlocked")          
          return  "Déverrouillé"
        if( entity.state == "unlocking")          
          return  "Déerrouillage"          
        if( entity.state == "cleaning")          
          return  "Nettoyage" 
        if( entity.state == "returning")          
          return  "Retour"      
        if( entity.state == "error")          
          return  "Erreur"      
        if( entity.state == "idle")          
          return  "Pause"      
        if( entity.state == "paused")          
          return  "Pause"                
        if( entity.state == "docked")          
          return  "Base"  
        if( entity.state == "playing")          
          return  "En cours"  
        if( entity.state == "standby")          
          return  "Éteint" 
        if( entity.state == "Cellular")          
          return  "Cellulaire"
        if( entity.state == "Stationnaire")          
          return  "Rien"           
        return entity.state ]]]
        
  last_changed:
    label: |
      [[[
        var last_changed = states[entity.entity_id].last_changed;
        
        var now = new Date();
        var date = new Date(last_changed);
        date.toLocaleString();
        
        var diff = (now - date) / 1000;
        var days = Math.floor(diff / 86400);
        diff = diff % 86400;
        var hours = Math.floor(diff / 3600);
        diff = diff % 3600;
        var minutes = Math.floor(diff / 60);
        var seconds = Math.floor(diff % 60);
        
        
        if (days > 0) {
           return days + "j " + hours + "h ";
        }else{
           if (hours > 0) {
              return hours + "h " + "et " + minutes + "min";
           } else {
              if (minutes > 0) {
                 return minutes + "min et " + seconds + "s";
              } else {
                 return seconds + "s";
              }
           }
        }
      ]]]
  info_header:
    tap_action:
      action: more-info
    show_name: false
    show_label: false
    show_state: false
    template:
      - no_style
      - police
    styles:
      card:
        - padding: 0px
      state:
        - color: var(--text-on)
        - font-size: 14px
        - padding: 6px
        - margin-left: '-3px'
      label:
        - color: var(--text-on)
        - font-size: 13px
        - padding: 6px
        - margin-left: '-3px'
      icon:
        - width: 20px
        - color: var(--icon-off)
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 57%
          - top: 0%
          - height: 17px
          - width: 17px
          - font-weight: 500
          - font-size: 11px
          - line-height: 18px
          - background-color: |
              [[[
                if (entity.state == "off" || entity.state == "locked" || entity.state == 0 )
                  return 'transparent';
               return 'rgba(0, 0, 0, 0.1)';
              ]]]
          - color: |
              [[[
                if (entity.state == "off" || entity.state == "locked" || entity.state == 0)
                  return 'rgba(0,191,205,0)';
               return 'var(--text-on)';
              ]]]      
  base:
    show_icon: true
    show_name: true
    show_state: false
    show_label: true
    template:
      - police
    styles:
      grid:
        - grid-template-areas: '"i n" "i s" "i l" '
        - grid-template-rows: min-content min-content min-content
        - grid-template-columns: min-content auto
      img_cell:
        - background-color: var(--img-cell-off)
        - border-radius: 50%
        - place-self: start
        - width: 40px
        - height: 40px
        - border-color: rgba(12, 12, 14, 0.2)
        - border-style: outset
        - border-width: 1px
      icon:
        - width: 50%
        - color: var(--icon-off)
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      name:
        - color: var(--text-off)
        - justify-self: start
        - text-align: left
        - font-weight: 600
        - font-size: 13px
        - margin-left: 8px
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
        - margin-top: 5px
      state:
        - white-space: normal
        - color: var(--text-off)
        - justify-self: start
        - font-weight: null
        - text-align: left
        - font-size: 13px
        - margin-left: 8px
        - margin-bottom: 5px
        - line-height: 110%
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      label:
        - white-space: normal
        - color: var(--text-off)
        - justify-self: start
        - text-align: left
        - font-weight: null
        - font-size: 13px
        - margin-left: 8px
        - margin-bottom: 5px
        - line-height: 110%
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      card:
        - padding: 5px
        - font-size: 100%
        - white-space: normal
      custom_fields:
        bouton:
          - position: absolute
          - top: 73%
          - left: 50%
          - width: calc(90% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        jauge-cercle:
          - top: '-01%'
          - left: 75%
          - width: 25%
          - position: absolute
          - opacity: 95%
          - z-index: 2
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        graph_temp:
          - position: absolute
          - top: 80%
          - left: 50%
          - width: calc(100% + 15px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 33px
          - top: 4%
          - height: 15px
          - width: 15px
          - font-size: 85%
          - line-height: 17px
          - font-weight: null
          - background-color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,191,205,0)';
               return 'rgba(0, 0, 0, 0.4)';
              ]]]
          - color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,191,205,0)';
               return 'var(--text-on)';
              ]]]
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  base_high:
    styles:
      card:
        - height: 106px
  graph_temp:
    custom_fields:
      graph_temp:
        card:
          type: custom:mini-graph-card
          height: 250
          line_width: 4
          lower_bound: 10
          points_per_hour: 1
          hours_to_show: 24
          show:
            fill: false
            icon: false
            name: false
            state: false
            legend: false
            points: false
            labels: false
  sub_button:
    show_name: false
    show_state: false
    show_label: false
    show_icon: true
    template:
      - police
      - style
    styles:
      card:
        - border-radius: 12px
        - height: 30px
        - padding: 1px
        - line-height: 77%
      icon:
        - color: var(--icon-off)
        - width: 15px
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      name:
        - font-size: 9px
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      label:
        - font-size: 11px
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      state:
        - font-size: 11px
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
    double_tap_action:
      action: more-info
    tap_action:
      action: more-info
  room_card:
    template:
      - style
    label: |
      [[[
        if( entity.state == "unavailable")
          return "Indisponible"
        if( entity.state == "off")
          return variables.var_label
        var lum = states[entity.entity_id].attributes.brightness/2.54;
        var roundLum =  Math.round(lum * 1) / 1; 
        return variables.var_label + "  " + roundLum + "%" ]]] 
    styles:
      label:
        - color: |
            [[[           
              if (variables.temp_state < 18.9)
                return 'var(--color-icon-blue)'
              if (variables.temp_state  > 26.9)
                return 'var(--color-red)'                 
              if (variables.temp_state  > 24.9)
                return 'var(--color-orange)'               
              return "var(--text-off)"
            ]]]
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 33px
          - top: 4%
          - height: 15px
          - width: 15px
          - font-size: 85%
          - line-height: 17px
          - font-weight: null
          - background-color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,191,205,0)';
               return 'rgba(0, 0, 0, 0.4)';
              ]]]
          - color: |
              [[[
                if (entity.state == "off")
                  return 'rgba(0,191,205,0)';
               return 'var(--text-on)';
              ]]]
    state:
      - value: 'on'
        styles:
          card:
            - background-color: |-
                [[[ 
                    var color = '255,215,0'; // Default Color
                    if( states[entity.entity_id].attributes.rgb_color != undefined)
                      color = states[entity.entity_id].attributes.rgb_color;               
                    return 'rgb(' + color + ',0.2)';
                ]]]
          img_cell:
            - background-color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',0.4)';
                ]]]
          icon:
            - color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',1)';
                ]]]
  room_card_graph:
    styles:
      custom_fields:
        graph:
          - opacity: 80%
          - position: absolute
          - top: 55%
          - left: 50%
          - width: calc(110% + 15px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
    custom_fields:
      graph:
        card:
          type: custom:mini-graph-card
          entities:
            - entity: '[[[ return variables.temp ]]]'
          height: 50
          line_width: 1
          points_per_hour: 1
          hours_to_show: 24
          show:
            fill: false
            icon: false
            name: false
            state: false
            legend: false
            points: false
            labels: false
          color_thresholds:
            - value: 0
              color: var(--graph-line)
  ball_card:
    entity: '[[[ return variables.entity ]]]'
    icon: '[[[ return variables.icon ]]]'
    template:
      - base
    show_state: true
    show_label: false
    styles:
      img_cell:
        - place-self: center
      card:
        - border-radius: 50px
        - padding: 7px 2px 7px 7px
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  ball_light_card:
    template:
      - ball_card
    show_state: false
    show_label: true
    label: |
      [[[
        if( entity.state == "unavailable")
          return "Indisponible"
        if( entity.state == "off")
          return "Eteint"
        var lum = states[entity.entity_id].attributes.brightness/2.54;
        var roundLum =  Math.round(lum * 1) / 1; 
        return roundLum + "%" ]]] 
  mini_card:
    variables:
      var_name_temp: Temp
      var_name_hum: Hum
      var_name_lum: Lum
      var_name_mouv: Mouv
    show_icon: true
    show_name: false
    show_state: false
    show_label: true
    template:
      - police
      - no_style
    styles:
      img_cell:
        - border-radius: 50%
        - width: 36px
        - height: 36px
        - background-color: var(--img-cell-off)
        - color: var(--text-on)
        - border-color: rgba(12, 12, 14, 0.2)
        - border-style: outset
        - border-width: 1px
      icon:
        - width: 50%
        - color: var(--icon-off)
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      label:
        - font-weight: 600
        - font-size: 12px
        - color: var(--text-on)
        - margin-top: 05px
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
        - white-space: normal
      state:
        - font-weight: 600
        - font-size: 12px
        - color: var(--text-on)
        - margin-top: 05px
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      name:
        - font-weight: 600
        - font-size: 12px
        - color: var(--text-on)
        - margin-top: 02px
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      card:
        - border-radius: 15px
        - height: auto
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 61%
          - top: 3%
          - height: 17px
          - width: 17px
          - font-size: 11px
          - line-height: 18px
          - font-weight: null
          - background-color: |
              [[[
                if (entity.state == "off" || entity.state == "locked" || entity.state == 0 )
                  return 'rgba(0,191,205,0)';
               return 'rgba(0, 0, 0, 0.3)';
              ]]]
          - color: |
              [[[
                if (entity.state == "off" || entity.state == "locked" || entity.state == 0)
                  return 'rgba(0,191,205,0)';
               return 'var(--text-on)';
              ]]]
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  climat_card:
    entity: '[[[ return variables.temp ]]]'
    show_name: false
    show_icon: false
    template:
      - temperature_state
    custom_fields:
      title:
        card:
          type: custom:button-card
          template:
            - title_card
          entity: '[[[ return variables.temp ]]]'
          name: '[[[ return variables.name ]]]'
          show_last_changed: true
          styles:
            name:
              - justify-self: center
              - color: var(--text-off)
            label:
              - justify-self: center
              - color: var(--text-off)
              - font-size: 10px
      sensor:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              template:
                - mini_card
                - temperature_mini_card_state
              show_state: true
              entity: '[[[ return variables.temp ]]]'
            - type: custom:button-card
              template:
                - mini_card
                - humidity_mini_card_state
              show_state: true
              entity: '[[[ return variables.hum ]]]'
      graph_sensor:
        card:
          type: custom:mini-graph-card
          align_header: left
          align_icon: left
          entities:
            - entity: '[[[ return variables.temp ]]]'
              show_state: true
              show_legend: false
              state_adaptive_color: true
              color: var(--color-orange)
            - entity: '[[[ return variables.hum ]]]'
              show_state: true
              show_legend: false
              state_adaptive_color: true
              color: var(--color-blue)
              y_axis: secondary
          height: 200
          font_size: 80
          hour24: true
          hours_to_show: 48
          line_width: 2
          points_per_hour: 1
          smoothing: true
          show:
            state_adaptive_color: true
            extrema: false
            state: false
            icon: false
            name: false
          style: |
            ha-card {
               background: transparent;
               font-family: Avenir;
               color: var(--text-off);
               border-color: transparent;
               box-shadow: none;
             }
      graph_night:
        card:
          type: custom:mini-graph-card
          align_header: left
          align_icon: left
          entities:
            - entity: sensor.night_state
              color: darkgray
              name: Night
              show_legend: false
              show_line: false
              show_points: false
          height: 200
          font_size: 80
          hour24: true
          hours_to_show: 48
          line_width: 2
          points_per_hour: 2
          smoothing: true
          show:
            state_adaptive_color: true
            extrema: false
            state: false
            icon: false
            name: false
          style: |
            ha-card {
               background: transparent;
               font-family: Avenir;
               color: var(--text-off);
               border-color: transparent;
               box-shadow: none;
             }             
    styles:
      card:
        - height: 190px
      custom_fields:
        title:
          - position: absolute
          - width: 100%
          - top: 05px
          - left: 0%
          - opacity: 100%
        sensor:
          - position: absolute
          - width: 100%
          - top: 20%
          - left: 0%
          - opacity: 100%
        graph_sensor:
          - position: absolute
          - width: 100%
          - top: 52%
          - left: 0%
          - opacity: 100%
        graph_night:
          - position: absolute
          - width: 100%
          - top: 52%
          - left: 0%
          - opacity: 100%
  battery_level_card:
    entity: '[[[ return variables.entity ]]]'
    show_icon: false
    template:
      - no_style
      - police
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
    custom_fields:
      barre:
        card:
          type: custom:bar-card
          entities:
            - entity: '[[[ return variables.entity ]]]'
          direction: right
          unit_of_measurement: '%'
          max: 100
          positions:
            name: 'off'
            indicator: 'off'
          height: 25px
          width: 100%
          icon: 'off'
          entity_row: true
          severity:
            - color: var(--color-img-cell-red)
              from: 0
              to: 30
            - color: var(--color-img-cell-gold)
              from: 30.1
              to: 50
            - color: var(--color-img-cell-green)
              from: 50.1
              to: 99.9
            - color: var(--color-medium-blue)
              from: 100
              to: 100
          style: |-
            bar-card-value {
              margin-right: -20px;
              font-size: 14px;
              font-weight: bold;
              color: var(--text-off);
              filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.7))
            } 
    styles:
      card:
        - height: 60px
      name:
        - font-size: 13px
        - padding-bottom: 15px
        - color: var(--text-off)
      custom_fields:
        barre:
          - top: 40%
          - left: '-51%'
          - width: 100%
          - position: absolute
    state:
      - value: 30.1
        operator: <
        styles:
          name:
            - color: var(--color-red)
            - font-weight: 500
          card:
            - animation: blink 1s ease infinite
      - value: 50.1
        operator: <
        styles:
          name:
            - color: var(--color-gold)
  multimedia_card:
    template:
      - style
    aspect_ratio: 1/1
    show_entity_picture: true
    icon: |-
      [[[
        if (entity.state == 'playing' )
          return ""
        if (entity.state != 'playing' )
          return "mdi:speaker"
      ]]]
    label: |-
      [[[
        if (entity.state == 'playing' )
          return "En cours"
        if (entity.state != 'playing' )
          return "Eteint"
      ]]]
    styles:
      entity_picture:
        - width: 100%
      custom_fields:
        notification:
          - border-radius: 50%
          - position: absolute
          - left: 21%
          - top: 03%
          - height: 10%
          - width: 10%
          - font-size: 85%
          - line-height: 137%
          - font-weight: null
        cartes:
          - position: absolute
          - border-radius: 50%
          - top: 44.5%
          - left: 50%
          - width: calc(100% + 03px)
          - transform: translate(-50%, calc(-50% + 10px))
  title_card:
    show_icon: false
    show_name: true
    show_state: false
    show_label: true
    template:
      - police
    styles:
      name:
        - color: var(--title)
        - font-size: 15px
        - font-weight: 500
        - justify-self: start
        - padding-top: 01%
        - margin-left: 2%
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      label:
        - color: var(--text-off)
        - font-size: 15px
        - font-weight: 500
        - justify-self: start
        - padding-top: 01%
        - margin-left: 2%
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      card:
        - height: auto
        - padding: 0%
        - border-radius: 0px
        - line-height: 100%
        - '--ha-card-border-width': 0px
    tap_action:
      action: toggle
    double-tap_action:
      action: more-info
    style:
      .: |
        ha-card {
            --ha-card-background: none !important;
            box-shadow: none !important;
            font-family: Avenir
            border-width: 0px
  badge_card:
    template:
      - police
    show_name: false
    show_label: true
    show_icon: true
    styles:
      grid:
        - grid-template-areas: '"i n l" '
      card:
        - height: 35px
        - width: auto
        - padding: 1px 8px 1px 4px
        - border-radius: 50px
      img_cell:
        - background-color: var(--img-cell-off)
        - border-radius: 50%
        - width: 25px
        - height: 25px
        - place-self: center
      icon:
        - color: var(--icon-off)
        - width: 18px
        - margin-bottom: 1px
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      entity_picture:
        - width: 90%
      label:
        - font-size: 12px
        - font-weight: 600
        - margin-left: 5px
        - padding-top: 0px
        - color: var(--text-off)
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      name:
        - font-size: 12px
        - font-weight: 600
        - margin-left: 1px
        - color: var(--text-off)
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
    double_tap_action:
      action: more-info
  scene_card:
    show_name: true
    show_label: false
    template:
      - police
      - no_style
    styles:
      card:
        - height: 45px
        - border-radius: 10px
        - background-color: '[[[ return variables.color_card ]]]'
      icon:
        - width: 20px
        - color: '[[[ return variables.color_icon ]]]'
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      name:
        - font-size: 11px
        - color: var(--text-off)
        - font-weight: 600
        - padding: 0px
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  light_mini_card_state:
    state:
      - value: 'on'
        styles:
          img_cell:
            - background-color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',0.3)';
                ]]]
          icon:
            - color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',1)';
                ]]]
      - value: 'off'
        color: grey
        styles:
          img_cell:
            - background-color: var(--img-cell-off)
          icon:
            - color: var(--icon-off)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          img_cell:
            - background-color: var(--color-img-cell-red)
          icon:
            - color: var(--color-icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--color-icon-red)
  light_card_state:
    state:
      - value: 'on'
        styles:
          card:
            - background-color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',0.2)';
                ]]]        
          img_cell:
            - background-color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',0.4)';
                ]]]
          icon:
            - color: |-
                [[[ 
                  var color = '255,215,0'; // Default Color

                  if( states[entity.entity_id].attributes.rgb_color != undefined)
                    color = states[entity.entity_id].attributes.rgb_color; 
                  
                  return 'rgb(' + color + ',1)';
                ]]]
      - value: 'off'
        color: grey
        styles:
          img_cell:
            - background-color: var(--img-cell-off)
          icon:
            - color: var(--icon-off)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"   || entity.state ==
          "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--color-card-red)
          img_cell:
            - background-color: var(--color-img-cell-red)
          icon:
            - color: var(--color-icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--color-icon-red)
  person_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "home" || entity.state == "Maison" ||
          entity.state == "Présent"  ]]]
        styles:
          label:
            - color: var(--text-off)
          state:
            - color: var(--text-off)
          card:
            - background-color: |
                [[[ return "var(--color-card-blue)" ]]]            
      - operator: template
        value: '[[[ return  entity.state == "not_home" || entity.state == "off" ]]]'
        styles:
          label:
            - color: var(--color-icon-red)
          state:
            - color: var(--color-icon-red)
      - operator: template
        value: '[[[ return  entity.state != "not_home" ]]]'
        styles:
          card:
            - background-color: var(--color-card-green)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"   || entity.state ==
          "unknown" ]]]
        styles:
          card:
            - border-color: var(--color-card-red)
            - background-color: var(--color-card-red)
          img_cell:
            - background-color: var(--color-img-cell-red)
          icon:
            - color: var(--color-icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--color-icon-red)
  temperature_state:
    state:
      - value: 26.9
        operator: '>'
        icon: mdi:thermometer-chevron-up
        styles:
          icon:
            - color: var(--color-red)
          img_cell:
            - background-color: var(--color-img-cell-red)
          card:
            - background-color: var(--color-card-red)
      - value: 24.9
        operator: '>'
        icon: mdi:thermometer-chevron-up
        styles:
          icon:
            - color: var(--color-icon-yellow)
          img_cell:
            - background-color: var(--color-img-cell-yellow)
          card:
            - background-color: var(--color-card-yellow)
      - value: 18.9
        operator: <
        icon: mdi:thermometer-chevron-down
        styles:
          icon:
            - color: var(--color-icon-blue)
          img_cell:
            - background-color: var(--color-img-cell-blue)
          card:
            - background-color: var(--color-card-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"   || entity.state ==
          "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--color-card-red)
          img_cell:
            - background-color: var(--color-img-cell-red)
          icon:
            - color: var(--color-icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--color-icon-red)
  temperature_mini_card_state:
    state:
      - value: 26.9
        operator: '>'
        icon: mdi:thermometer-chevron-up
        styles:
          state:
            - color: var(--color-red)
          icon:
            - color: var(--color-icon-red)
          img_cell:
            - background-color: var(--color-img-cell-red)
      - value: 24.9
        operator: '>'
        icon: mdi:thermometer-chevron-up
        styles:
          state:
            - color: var(--color-orange)
          icon:
            - color: var(--color-icon-orange)
          img_cell:
            - background-color: var(--color-img-cell-orange)
      - value: 18.9
        operator: <
        icon: mdi:thermometer-chevron-down
        styles:
          state:
            - color: var(--color-blue)
          icon:
            - color: var(--color-icon-blue)
          img_cell:
            - background-color: var(--color-img-cell-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"   || entity.state ==
          "unknown" ]]]
        styles:
          img_cell:
            - background-color: var(--color-img-cell-red)
          icon:
            - color: var(--color-icon-red)
            - animation: blink 0.8s ease infinite
  outside_temperature_state:
    state:
      - value: 28
        operator: '>'
        styles:
          icon:
            - color: var(--color-red)
          img_cell:
            - background-color: var(--color-img-cell-red)
          state:
            - font-weight: bold
      - value: 12
        operator: <
        styles:
          icon:
            - color: var(--color-icon-blue)
          img_cell:
            - background-color: var(--color-img-cell-blue)
          state:
            - font-weight: bold
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"   || entity.state ==
          "unknown" ]]]
        styles:
          img_cell:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--color-card-red)
          icon:
            - color: var(--color-icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--color-icon-red)
  humidity_state:
    state:
      - value: 70
        operator: '>'
        styles:
          icon:
            - color: var(--color-red)
          img_cell:
            - background-color: var(--color-img-cell-red)
          card:
            - background-color: var(--color-card-red)
      - value: 40
        operator: <
        styles:
          icon:
            - color: var(--color-icon-blue)
          img_cell:
            - background-color: var(--color-img-cell-blue)
          card:
            - background-color: var(--color-card-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--color-card-red)
          img_cell:
            - background-color: var(--color-img-cell-red)
          icon:
            - color: var(--color-icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--color-icon-red)
  humidity_mini_card_state:
    state:
      - value: 70
        operator: '>'
        styles:
          state:
            - color: var(--color-red)
          icon:
            - color: var(--color-icon-red)
          img_cell:
            - background-color: var(--color-img-cell-red)
      - value: 40
        operator: <
        styles:
          state:
            - color: var(--color-blue)
          icon:
            - color: var(--color-icon-blue)
          img_cell:
            - background-color: var(--color-img-cell-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          img_cell:
            - background-color: var(--color-img-cell-red)
          icon:
            - color: var(--color-icon-red)
            - animation: blink 0.8s ease infinite
          state:
            - color: var(--color-red)
  brightness_state:
    state:
      - value: 100
        operator: '>'
        styles:
          icon:
            - color: var(--color-red)
          img_cell:
            - background-color: var(--color-img-cell-red)
          card:
            - background-color: var(--color-card-red)
      - value: 30
        operator: <
        icon: mdi:brightness-4
        styles:
          icon:
            - color: var(--color-icon-blue)
          img_cell:
            - background-color: var(--color-img-cell-blue)
          card:
            - background-color: var(--color-card-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--color-card-red)
          img_cell:
            - background-color: var(--color-img-cell-red)
          icon:
            - color: var(--color-icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--color-icon-red)
  sub_button_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state > 0 || entity.state ==
          "home" || entity.state == "heat" || entity.state == "Run" ||
          entity.state == "armed_away" || entity.state == "playing" ||
          entity.state == "veille" || entity.state == "Wi-Fi"  || entity.state
          == "Mouvement" || entity.state == "Marche" || entity.state == "Vélo" 
          || entity.state == "Course" ]]]
        styles:
          icon:
            - color: var(--color-icon-blue)
          card:
            - background-color: var(--color-card-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "unlocking"  || entity.state == "locking"  
          ]]]
        styles:
          icon:
            - color: var(--color-icon-yellow)
          card:
            - background-color: var(--color-card-yellow)
      - operator: template
        value: >-
          [[[ return entity.state == "unlocked"  || entity.state == "Conduite"
          || entity.state == "Cellular"  ]]]
        styles:
          icon:
            - color: var(--color-icon-red)
          card:
            - background-color: var(--color-card-red)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          card:
            - background-color: var(--color-card-red)
          icon:
            - color: var(--color-icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--color-icon-red)
    tap_action:
      action: more-info
    double_tap_action:
      action: more-info
  icon_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state > 0 || entity.state ==
          "home" || entity.state == "heat" || entity.state == "Run" ||
          entity.state == "armed_away" || entity.state == "playing" ||
          entity.state == "veille" || entity.state == "Wi-Fi"  || entity.state
          == "Mouvement" || entity.state == "Marche" || entity.state == "Vélo" 
          || entity.state == "Course" || entity.state == "cleaning" ||
          entity.state == "returning" | entity.state > 0 ]]]
        styles:
          icon:
            - color: var(--color-icon-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "Cellulaire"  || entity.state == "Conduite"
          ]]]
        styles:
          icon:
            - color: var(--color-icon-red)
      - operator: template
        value: >-
          [[[ return entity.state == "idle" || entity.state == "paused" ||
          entity.state == "arming" ]]]
        styles:
          icon:
            - color: var(--color-icon-yellow)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          icon:
            - color: var(--color-icon-red)
            - animation: blink 0.8s ease infinite
  mini_card_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state == "home" ||
          entity.state == "cleaning" || entity.state == "returning"  ||
          entity.state == "playing"  || entity.state == "Wi-Fi" || entity.state
          > 0 || entity.state == "Mouvement" || entity.state == "Marche" ||
          entity.state == "Vélo"  || entity.state == "Course"]]]
        styles:
          img_cell:
            - background-color: var(--color-card-blue)
          icon:
            - color: var(--color-icon-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "Cellular"  || entity.state == "Conduite"
          || entity.state == "not_home" ]]]
        styles:
          img_cell:
            - background-color: var(--color-card-red)
          icon:
            - color: var(--color-icon-red)
      - operator: template
        value: >-
          [[[ return entity.state == "idle" || entity.state == "paused" ||
          entity.state == "arming" ]]]
        styles:
          img_cell:
            - background-color: var(--color-card-yellow)
          icon:
            - color: var(--color-icon-yellow)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          img_cell:
            - background-color: var(--color-card-red)
          icon:
            - color: var(--color-icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--color-icon-red)
  card_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state == "home" ||
          entity.state == "cleaning" || entity.state == "returning"  ||
          entity.state == "playing"  || entity.state == "Wi-Fi" || entity.state
          == "Mouvement" || entity.state == "Marche" || entity.state == "Vélo" 
          || entity.state == "Course"]]]
        styles:
          card:
            - background-color: var(--color-card-blue)
          img_cell:
            - background-color: var(--color-img-cell-blue)
          icon:
            - color: var(--color-icon-blue)
      - operator: template
        value: >-
          [[[ return entity.state == "Cellulaire" || entity.state == 0 ||
          entity.state == "Conduite" ]]]
        styles:
          card:
            - background-color: var(--color-card-red)
          img_cell:
            - background-color: var(--color-img-cell-red)
          icon:
            - color: var(--color-icon-red)
      - operator: template
        value: '[[[ return entity.state > 0  ]]]'
        styles:
          card:
            - background-color: var(--color-card-green)
          img_cell:
            - background-color: var(--color-img-cell-green)
          icon:
            - color: var(--color-icon-green)
      - operator: template
        value: >-
          [[[ return entity.state == "idle" || entity.state == "paused" ||
          entity.state == "veille" ]]]
        styles:
          card:
            - background-color: var(--color-card-yellow)
          img_cell:
            - background-color: var(--color-img-cell-yellow)
          icon:
            - color: var(--color-icon-yellow)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--color-card-red)
          img_cell:
            - background-color: var(--color-img-cell-red)
          icon:
            - color: var(--color-icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--color-icon-red)
  security_card_state:
    state:
      - operator: template
        value: >-
          [[[ entity.state == "arming"  || entity.state == "unlocking" ||
          entity.state == "locking" ]]]
        styles:
          card:
            - background-color: var(--color-card-yellow)
          img_cell:
            - background-color: var(--color-img-cell-yellow)
          icon:
            - color: var(--color-icon-yellow)
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state == "home" ||
          entity.state == "armed_away" || entity.state == "armed_home" || 
          entity.state == "armed_night" || entity.state == "unlocked" ]]]
        styles:
          card:
            - background-color: var(--color-card-red)
          img_cell:
            - background-color: var(--color-img-cell-red)
          icon:
            - color: var(--color-icon-red)
      - operator: template
        value: '[[[ return entity.state == "pending" ]]]'
        styles:
          card:
            - background-color: var(--color-card-orange)
          img_cell:
            - background-color: var(--color-img-cell-orange)
          icon:
            - color: var(--color-icon-orange)
      - operator: template
        value: '[[[ return entity.state == "triggered" ]]]'
        styles:
          card:
            - background-color: var(--color-card-dark-red)
          img_cell:
            - background-color: var(--color-img-cell-dark-red)
          icon:
            - color: var(--color-icon-red)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          card:
            - border-color: rgba(255, 0, 0, 0.5)
            - background-color: var(--color-card-red)
          img_cell:
            - background-color: var(--color-img-cell-red)
          icon:
            - color: var(--color-icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--color-icon-red)
  security_mini_card_state:
    state:
      - operator: template
        value: >-
          [[[ return entity.state == "arming"  || entity.state == "unlocking" ||
          entity.state == "locking" ]]]
        styles:
          img_cell:
            - background-color: var(--color-img-cell-green)
          icon:
            - color: var(--color-icon-green)
      - operator: template
        value: >-
          [[[ return entity.state == "on" || entity.state == "home" ||
          entity.state == "armed_away" || entity.state == "armed_home" || 
          entity.state == "armed_night" || entity.state == "unlocked" ]]]
        styles:
          img_cell:
            - background-color: var(--color-img-cell-red)
          icon:
            - color: var(--color-icon-red)
      - operator: template
        value: '[[[ return entity.state == "triggered" ]]]'
        styles:
          img_cell:
            - background-color: var(--color-img-cell-dark-red)
          icon:
            - color: var(--color-icon-red)
      - operator: template
        value: '[[[ return entity.state == "pending" ]]]'
        styles:
          img_cell:
            - background-color: var(--color-img-cell-orange)
          icon:
            - color: var(--color-icon-orange)
      - operator: template
        value: >-
          [[[ return entity.state == "unavailable"  || entity.state == "jammed"
          || entity.state == "unknown" ]]]
        styles:
          img_cell:
            - background-color: var(--color-img-cell-red)
          icon:
            - color: var(--color-icon-red)
            - animation: blink 0.8s ease infinite
          name:
            - color: var(--color-icon-red)
  person_card:
    show_entity_picture: true
    show_state: false
    template:
      - base
      - base_high
      - style
      - person_state
    styles:
      entity_picture:
        - width: 90%
      label:
        - padding-right: 10px
      custom_fields:
        notification:
          - border-radius: 100%
          - position: absolute
          - left: 30px
          - top: 4%
          - width: 17.5px
          - height: 17.5px
          - line-height: 14px
          - background-color: |
              [[[
                if (entity.state == 'home') 
                  return "var(--color-img-cell-blue)"
                if (entity.state == 'not_home') 
                  return "var(--color-img-cell-red)"
                return "var(--color-img-cell-green)"
              ]]]
    custom_fields:
      notification: |
        [[[
              var f_n_zone = states[entity.entity_id].state;

              // supprime les accents
              var b="áàâäãåçéèêëíïîìñóòôöõúùûüýÁÀÂÄÃÅÇÉÈÊËÍÏÎÌÑÓÒÔÖÕÚÙÛÜÝ",
              c="aaaaaaceeeeiiiinooooouuuuyAAAAAACEEEEIIIINOOOOOUUUUY",
              d="";
              for(var i = 0, j = f_n_zone.length; i < j; i++) {
                var e = f_n_zone.substr(i, 1);
                d += (b.indexOf(e) !== -1) ? c.substr(b.indexOf(e), 1) : e;
              }
              // remplace " - " par "_"
              var id_zone = d.replaceAll(' - ', '_');
              // remplace les espaces restants par "_"
              id_zone = id_zone.replaceAll(' ', '_');
              // transforme le texte en minuscule 
              id_zone = id_zone.toLowerCase();

              if(states["zone." + id_zone] == undefined){
                return `<ha-icon icon="mdi:home-export-outline" style="width: 13px; height: 13px; color: white;"></ha-icon>`;
              }else{
                return `<ha-icon icon="${states["zone." + id_zone].attributes.icon}" style="width: 13px; height: 13px; color: white;"></ha-icon>`;
              }
            ]]]
    tap_action:
      action: navigate
      navigation_path: /lovelace/Personnes
    double_tap_action:
      action: more-info
  person_card_var_activity:
    icon: |
      [[[
        if (variables.var_activity == 'Mouvement')
          return "mdi:human-handsdown"
        if (variables.var_activity == 'Stationnaire')
          return "mdi:human-male"
        if (variables.var_activity == 'Conduite')
          return "mdi:car"
        if (variables.var_activity == 'Marche')
          return "mdi:walk"
        if (variables.var_activity == 'Course')
          return "mdi:run-fast"
        if (variables.var_activity == 'Vélo')
          return "mdi:bike"
        return ""
      ]]]
  person_card_var_device:
    styles:
      card:
        - border: |
            [[[
              if (variables.var_state  == "Charging")
                return " 1px dashed var(--color-icon-yellow) " 
              if (variables.var_state  == "Full")
                return " 1px dashed var(--color-red) "                
              if (variables.var_level  < 30)
                return " 1px solid var(--color-red) "                        
              return ""
            ]]]
    tap_action:
      action: navigate
      navigation_path: /lovelace/batteries
  person_card_aurel:
    entity: person.herve
    template:
      - person_card
    label: |
      [[[return states["sensor.aurel_gps_simple"].state]]]
    styles:
      label:
        - white-space: normal
    custom_fields:
      jauge-cercle:
        card:
          type: custom:hatc-gauge-card
          entity: sensor.iphone_aurel_battery_level
          title:
            name: false
            icon: false
          gauge:
            icon: false
            font-size: 11px
            text-color: severity
            max_value: 100
            friendly_name: false
            unit_of_measurement: false
            severity:
              - color: var(--text-off)
              - color: var(--color-blue)
                from: 99
                to: 51
              - color: var(--color-yellow)
                from: 31
                to: 50
              - color: var(--color-red)
                from: 0
                to: 30
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: device_tracker.iphone_aurel_ha
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
              variables:
                var_state: |
                  [[[ 
                    return states['sensor.iphone_aurel_battery_state'].state 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.iphone_aurel_battery_level'].state 
                  ]]]
              icon: mdi:cellphone
            - type: custom:button-card
              entity: sensor.iphone_aurel_connection_type
              template:
                - sub_button
                - sub_button_state
            - type: custom:button-card
              entity: sensor.aurel_activite
              variables:
                var_activity: |
                  [[[ 
                    return states['sensor.aurel_activite'].state 
                  ]]]
              template:
                - sub_button
                - sub_button_state
                - person_card_var_activity
            - type: custom:button-card
              entity: device_tracker.aurel_mac_ping
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
              variables:
                var_state: |
                  [[[ 
                    return states['sensor.macbook_aurel_internal_battery_state'].state 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.macbook_aurel_internal_battery_level'].state 
                  ]]]
                var_ping: |
                  [[[ 
                    return states['device_tracker.aurel_mac_ping'].state 
                  ]]]
              icon: mdi:laptop
            - type: custom:button-card
              entity: device_tracker.aurel_ipad_ping
              variables:
                var_state: |
                  [[[ 
                    return states['sensor.ipad_aurel_battery_state'].state 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.ipad_aurel_battery_level'].state 
                  ]]]
                var_ping: |
                  [[[ 
                    return states['device_tracker.ipad_aurel_ha'].state 
                  ]]]
              icon: mdi:tablet
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
  person_card_alex:
    entity: person.alex
    label: |
      [[[return states["sensor.alex_gps_simple"].state]]]
    template:
      - person_card
    styles:
      label:
        - white-space: normal
    custom_fields:
      jauge-cercle:
        card:
          type: custom:hatc-gauge-card
          entity: sensor.alex_iphone_battery_level_ha
          title:
            name: false
            icon: false
          gauge:
            icon: false
            font-size: 11px
            text-color: severity
            max_value: 100
            friendly_name: false
            unit_of_measurement: false
            severity:
              - color: var(--text-off)
              - color: var(--color-blue)
                from: 99
                to: 51
              - color: var(--color-yellow)
                from: 31
                to: 50
              - color: var(--color-red)
                from: 0
                to: 30
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: device_tracker.alex_iphone_ha
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
              variables:
                var_state: |
                  [[[ 
                    return states['sensor.alex_iphone_battery_state_ha'].state 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.alex_iphone_battery_level_ha'].state 
                  ]]]
              icon: mdi:cellphone
            - type: custom:button-card
              entity: sensor.alex_iphone_connection_type_2
              template:
                - sub_button
                - sub_button_state
            - type: custom:button-card
              entity: sensor.alex_activite
              variables:
                var_activity: |
                  [[[ 
                    return states['sensor.alex_activite'].state 
                  ]]]
              template:
                - sub_button
                - sub_button_state
                - person_card_var_activity
            - type: custom:button-card
              entity: device_tracker.macbook_alex
              variables:
                var_state: |
                  [[[ 
                    return states['sensor.macbook_alex_internal_battery_state'].state 
                  ]]]
                var_level: |
                  [[[ 
                    return states['sensor.macbook_alex_internal_battery_level'].state 
                  ]]]
                var_ping: |
                  [[[ 
                    return states['device_tracker.macbook_alex'].state 
                  ]]]
              icon: mdi:laptop
              template:
                - sub_button
                - sub_button_state
                - person_card_var_device
            - type: custom:button-card
              entity: device_tracker.liseuse_alex
              icon: |
                [[[
                  if (states['device_tracker.liseuse_alex'].state == "home")
                    return 'mdi:book-open'
                  if (states['device_tracker.liseuse_alex'].state == "not_home")
                    return 'mdi:book-open'
                ]]]
              template:
                - sub_button
                - sub_button_state
  person_card_tom:
    entity: person.tom
    label: |
      [[[return states["sensor.tom_gps"].state]]]
    template:
      - person_card
    custom_fields:
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: sensor.tom_duree
              show_icon: false
              show_state: true
              template:
                - sub_button
                - sub_button_state
              styles:
                state:
                  - white-space: normal
                card:
                  - width: 50px
            - type: custom:button-card
              entity: device_tracker.iphone_tom_box
              variables:
                var_ping: |
                  [[[ 
                    return states['device_tracker.iphone_tom_box'].state 
                  ]]]
              icon: mdi:cellphone
              template:
                - sub_button
                - sub_button_state
            - type: custom:button-card
              entity: device_tracker.macbook_air_de_tom
              icon: mdi:laptop
              template:
                - sub_button
                - sub_button_state
            - type: custom:button-card
              entity: switch.trottinette
              icon: mdi:scooter
              template:
                - sub_button
                - sub_button_state
              styles:
                card:
                  - border: |
                      [[[
                        if (states['switch.trottinette'].state == "on" &&  (states['sensor.trottinette_active_power'].state != 0 && states['sensor.trottinette_rms_current'].state != 0) )
                          return " 1px dashed var(--color-icon-yellow) "    
                        if (states['switch.trottinette'].state == "on" &&  (states['sensor.trottinette_active_power'].state == 0 && states['sensor.trottinette_rms_current'].state == 0) )
                          return " 1px dashed var(--color-icon-red) "                            
                        return ""
                      ]]]                       
  person_card_manon:
    entity: person.manon
    label: |
      [[[return states["sensor.manon_gps"].state]]]
    template:
      - person_card
    custom_fields:
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: sensor.manon_duree
              show_icon: false
              show_state: true
              template:
                - sub_button
                - sub_button_state
              styles:
                state:
                  - white-space: normal
            - type: custom:button-card
              entity: device_tracker.iphone_manon
              variables:
                var_ping: |
                  [[[ 
                    return states['device_tracker.iphone_manon'].state 
                  ]]]
              icon: mdi:cellphone
              template:
                - sub_button
                - sub_button_state
            - type: custom:button-card
              entity: device_tracker.tablette_manon
              icon: mdi:tablet
              template:
                - sub_button
                - sub_button_state
  person_card_leane:
    entity: person.leane
    label: |
      [[[
        if (states['device_tracker.leane_tab_ping'].state == 'home')
          return "Présent"
        return "Absent"
      ]]]
    template:
      - person_card
    custom_fields:
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: sensor.leane_duree
              show_icon: false
              show_state: true
              template:
                - sub_button
                - sub_button_state
              styles:
                state:
                  - white-space: normal
            - type: custom:button-card
              entity: device_tracker.leane_tab_ping
              icon: mdi:tablet
              template:
                - sub_button
                - sub_button_state
  person_card_nina:
    entity: person.nina
    label: |
      [[[
        if (states['device_tracker.tab_nina'].state == 'home')
          return "Présent"
        return "Absent"
      ]]]
    template:
      - person_card
    custom_fields:
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: sensor.nina_duree
              show_icon: false
              show_state: true
              template:
                - sub_button
                - sub_button_state
              styles:
                state:
                  - white-space: normal
            - type: custom:button-card
              entity: device_tracker.tab_nina
              icon: mdi:tablet
              template:
                - sub_button
                - sub_button_state
  dishwasher_card:
    entity: switch.lave_vaisselle_power
    name: Vaisselle
    icon: phu:rooms-dining
    show_label: true
    template:
      - base
      - base_high
      - style
      - card_state
    label: |
      [[[
        if (states['switch.lave_vaisselle_power'].state == "on" && states['switch.lave_vaisselle_program_machinecare'].state == "on")
          return "Entretien"+"<br>"+states['sensor.lave_vaisselle'].state
        if (states['switch.lave_vaisselle_power'].state == "on" && states['switch.lave_vaisselle_program_machinecare'].state == "off")
          return states['sensor.lave_vaisselle'].state
        if (states['switch.lave_vaisselle_power'].state == "off")
          return "Éteint "
        return states['sensor.lave_vaisselle'].state 
      ]]]
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
    custom_fields:
      barre:
        card:
          type: conditional
          conditions:
            - entity: switch.lave_vaisselle_power
              state: 'on'
          card:
            type: custom:bar-card
            entities:
              - entity: sensor.lave_vaisselle_program_progress
                color: rgba(232,233,242,0.5)
            direction: right
            unit_of_measurement: '%'
            max: 100
            positions:
              value: 'off'
              name: 'off'
              indicator: 'off'
            height: 8px
            width: 100%
            icon: 'off'
            entity_row: true
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: switch.lave_vaisselle_power
              icon: mdi:power
              template:
                - sub_button
                - sub_button_state
              tap_action:
                confirmation:
                  text: >-
                    [[[ return `${entity.attributes.friendly_name} : confirmer
                    la bascule ON / OFF ?` ]]]
            - type: custom:button-card
              entity: switch.lave_vaisselle_program_auto2
              icon: mdi:flag-checkered
              template:
                - sub_button
                - sub_button_state
              tap_action:
                confirmation:
                  text: >-
                    [[[ return `${entity.attributes.friendly_name} : confirmer
                    la bascule du programme ?` ]]]
            - type: custom:button-card
              entity: binary_sensor.lave_vaisselle_door
              template:
                - sub_button
                - sub_button_state
              tap_action:
                action: more-info
    styles:
      custom_fields:
        barre:
          - top: 40%
          - left: '-60%'
          - width: 110%
          - position: absolute
  washing_machine_card:
    entity: input_select.lave_linge
    name: Lave-linge
    icon: mdi:tshirt-crew
    template:
      - base
      - base_high
      - style
      - card_state
    label: |
      [[[
        if (states['input_select.lave_linge'].state == "off")
          return "Éteint"
        return "Depuis "+ states['sensor.lave_linge_duree'].state
      ]]]
    custom_fields:
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: input_select.lave_linge
              icon: mdi:play
              template:
                - sub_button
              styles:
                card:
                  - background-color: |
                      [[[
                        if (states['input_select.lave_linge'].state == "on" )
                          return "var(--color-card-blue)";
                        return "";
                      ]]]
                icon:
                  - color: |
                      [[[
                        if (states['input_select.lave_linge'].state == "on" )
                          return "var(--color-icon-blue)";
                        return "var(--icon-off)";
                      ]]]                  
              tap_action:
                action: more-info
            - type: custom:button-card
              entity: input_select.lave_linge
              icon: mdi:pause
              template:
                - sub_button
              styles:
                card:
                  - background-color: |
                      [[[
                        if (states['input_select.lave_linge'].state == "veille" )
                          return "var(--color-card-red)";
                        return "";
                      ]]]
                icon:
                  - color: |
                      [[[
                        if (states['input_select.lave_linge'].state == "veille" )
                          return "var(--color-icon-red)";
                        return "var(--icon-off)";
                      ]]]                  
              tap_action:
                action: more-info
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  printer_card:
    type: custom:button-card
    entity: input_boolean.imprimante
    name: Imprimante
    icon: mdi:printer
    label: |
      [[[
        if (states['sensor.canon_g5000_series'].state == "unavailable")
          return "Éteint"
        if (states['sensor.canon_g5000_series'].state == "printing")
          return "Impression"
        if (states['sensor.canon_g5000_series'].state == "stopped")
          return "Arrêt"
        if (states['sensor.canon_g5000_series'].state == "idle")
          return "Veille"
        return states['sensor.canon_g5000_series'].state
      ]]]
    template:
      - base
      - base_high
      - style
      - card_state
    custom_fields:
      printer_bar_black:
        card:
          type: conditional
          conditions:
            - entity: sensor.canon_g5000_series
              state_not: unavailable
          card:
            type: custom:bar-card
            name: Black
            entities:
              - entity: sensor.canon_g5000_series_black_pgbk
                color: rgb(29, 28, 26)
            entity_row: true
            direction: up
            unit_of_measurement: []
            max: 100
            positions:
              value: inside
              name: 'off'
              indicator: 'off'
            height: 45px
            width: 20%
            icon: 'off'
            style: |-
              bar-card-value {
                margin-left: 35px;
                font-size: 12px;
                font-weight: bold;
                color: var(--text-off);
              }
      printer_bar_cyan:
        card:
          type: conditional
          conditions:
            - entity: sensor.canon_g5000_series
              state_not: unavailable
          card:
            type: custom:bar-card
            name: Cyan
            entities:
              - entity: sensor.canon_g5000_series_cyan
                color: rgb(0,206,209)
            entity_row: true
            direction: up
            unit_of_measurement: []
            max: 100
            positions:
              value: inside
              name: 'off'
              indicator: 'off'
            height: 45px
            width: 20%
            icon: 'off'
            style: |-
              bar-card-value {
                margin-left: 35px;
                font-size: 12px;
                font-weight: bold;
                color: var(--text-off);
                filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.7));
              }
      printer_bar_magenta:
        card:
          type: conditional
          conditions:
            - entity: sensor.canon_g5000_series
              state_not: unavailable
          card:
            type: custom:bar-card
            name: Magenta
            entities:
              - entity: sensor.canon_g5000_series_magenta
                color: rgb(244,154,194)
            entity_row: true
            direction: up
            unit_of_measurement: []
            max: 100
            positions:
              value: inside
              name: 'off'
              indicator: 'off'
            height: 45px
            width: 20%
            icon: 'off'
            style: |-
              bar-card-value {
                margin-left: 35px;
                font-size: 12px;
                font-weight: bold;
                color: var(--text-off);
                filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.7));
              }
      printer_bar_yellow:
        card:
          type: conditional
          conditions:
            - entity: sensor.canon_g5000_series
              state_not: unavailable
          card:
            type: custom:bar-card
            name: Yellow
            entities:
              - entity: sensor.canon_g5000_series_yellow
                color: rgb(253,253,150)
            entity_row: true
            direction: up
            unit_of_measurement: []
            max: 100
            positions:
              value: inside
              name: 'off'
              indicator: 'off'
            height: 45px
            width: 20%
            icon: 'off'
            style: |-
              bar-card-value {
                margin-left: 35px;
                font-size: 12px;
                font-weight: bold;
                color: var(--text-off);
                filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.7))
              }              
    styles:
      custom_fields:
        printer_bar_black:
          - opacity: 100%
          - position: absolute
          - top: 85%
          - left: 6%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--ha-card-border-width': 0px
        printer_bar_cyan:
          - opacity: 100%
          - position: absolute
          - top: 85%
          - left: 28%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--ha-card-border-width': 0px
        printer_bar_magenta:
          - opacity: 100%
          - position: absolute
          - top: 85%
          - left: 50%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--ha-card-border-width': 0px
        printer_bar_yellow:
          - opacity: 100%
          - position: absolute
          - top: 85%
          - left: 72%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--ha-card-border-width': 0px
    tap_action:
      action: more-info
    double_tap_action:
      action: toggle
  tv_card:
    aspect_ratio: 1/1
    template:
      - style
    styles:
      name:
        - z-index: 1
      label:
        - z-index: 1
      icon:
        - z-index: 1
      img_cell:
        - z-index: 1
      entity_picture:
        - border-radius: 100%
      custom_fields:
        barre:
          - top: 65%
          - left: 0%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - position: absolute
          - filter: drop-shadow(0px 2px 1px rgba(0,0,0,0.9))
          - z-index: 2
        programme:
          - color: var(--text-on)
          - top: 35%
          - left: 06%
          - font-weight: 600
          - font-size: 12px
          - font-style: null
          - position: absolute
          - text-transform: capitalize
          - text-align: left
          - max-height: 40px
          - line-height: 13px
          - white-space: normal
          - padding-right: 5px
          - filter: drop-shadow(1px 2px 1px rgba(0,0,0,0.9))
          - z-index: 4
        duree:
          - color: white
          - filter: drop-shadow(1px 2px 1px rgba(0,0,0,0.9))
          - top: 66%
          - left: 20%
          - font-size: 12px
          - position: absolute
          - font-style: italic
          - font-weight: null
          - white-space: normal
          - z-index: 6
        bouton:
          - top: 82%
          - z-index: 8
        image:
          - top: 0%
          - left: 0%
          - width: 100%
          - border-radius: 0%
          - opacity: 60%
          - position: absolute
          - z-index: 0
  tv_sejour_card:
    entity: media_player.tv_salon
    name: TV Salon
    label: |
      [[[
        if ( entity.state  == 'on')
          return states['sensor.tv_salon_source'].state
        if ( entity.state  == 'off')
            return 'Éteint'
        return ''
      ]]]
    icon: |
      [[[
        if( entity.state == "off")
              return "mdi:television"
        if( states['sensor.tv_salon_source'].state == "YouTube")
              return "mdi:youtube"          
        if( states['sensor.tv_salon_source'].state == "Netflix")
              return "phu:netflix"
        if( states['sensor.tv_salon_source'].state == "Plex")
              return "mdi:plex"
        if( states['sensor.tv_salon_source'].state == "Prime Video")
              return "phu:amazon-logo"
        if( states['media_player.tv_salon'].attributes.source == "Apple TV")
              return "mdi:apple"          
        if( states['media_player.tv_salon'].attributes.source == "Disque Dur")
              return "mdi:movie-open"
           
        if( states['media_player.tv_salon'].attributes.source == "Wii")
              return "phu:rooms-mancave"
        if( states['media_player.tv_salon'].attributes.source == "Nintendo Switch")
              return "mdi:nintendo-switch"
        if( states['media_player.tv_salon'].attributes.source == "YouTube (FireTV)")
              return "mdi:youtube"
        if( states['media_player.tv_salon'].attributes.source == "DD Externe")
              return "movie-open"
        return "mdi:television"
      ]]]
    template:
      - base
      - tv_card
      - card_state
    styles:
      name:
        - color: |
            [[[
              if ( entity.state  == 'off' )
                return 'var(--text-off)'        
              if ( entity.state  == 'on' && states['media_player.apple_tv_sejour'].state == 'playing' &&  states['sensor.apple_tv_salon_app_name'].state != 'YouTube' )
                return 'white'
              return 'var(--text-off)'
            ]]]
      label:
        - color: |
            [[[
              if ( entity.state  == 'off' )
                return 'var(--text-off)'        
              if ( entity.state  == 'on' && states['media_player.apple_tv_sejour'].state == 'playing' &&  states['sensor.apple_tv_salon_app_name'].state != 'YouTube' )
                return 'white'
              return 'var(--text-off)'
            ]]] 
      card:
        - background-color: |
            [[[
              if ( entity.state  == 'off' )
                return ''        
              if ( entity.state  == 'on' && states['media_player.apple_tv_sejour'].state == 'playing' &&  states['sensor.apple_tv_salon_app_name'].state != 'YouTube' )
                return 'none'
              return 'var(--color-blue)'
            ]]] 
    custom_fields:
      duree: |
        [[[ return states['sensor.tv_salon_temps_restant'].state ]]]
      programme: |
        [[[ return states['sensor.tv_salon_programme'].state ]]]
      barre:
        card:
          type: conditional
          conditions:
            - entity: media_player.apple_tv_sejour
              state: playing
            - entity: sensor.tv_salon_duree_media
              state_not: unavailable
          card:
            type: custom:bar-card
            entities:
              - entity: sensor.tv_salon_duree_media_pourcentage
                color: rgba(232,233,242,0.3)
            direction: right
            unit_of_measurement: '%'
            max: 100
            positions:
              value: 'off'
              name: 'off'
              indicator: 'off'
            height: 15px
            width: 100%
            icon: 'off'
            entity_row: true
      jauge-cercle:
        card:
          type: conditional
          conditions:
            - entity: media_player.tv_salon
              state: 'on'
          card:
            type: custom:hatc-gauge-card
            entity: sensor.tv_salon_vol
            title:
              name: false
              icon: false
              text-align: center
              text-color: red
              font-size: 28px
            gauge:
              icon: false
              font-size: 11px
              text-color: white
              max_value: 100
              friendly_name: false
              unit_of_measurement: false
              severity:
                - color: var(--text-off)
                - color: rgb(180, 70, 70)
                  from: 50
                  to: 100
      image:
        card:
          square: false
          type: grid
          columns: 1
          cards:
            - type: conditional
              conditions:
                - entity: media_player.apple_tv_sejour
                  state: playing
                - entity: sensor.apple_tv_salon_app_name
                  state_not: YouTube
              card:
                type: custom:button-card
                entity: media_player.apple_tv_sejour
                aspect_ratio: 1/1
                show_icon: false
                show_name: false
                show_entity_picture: true
                styles:
                  card:
                    - border-radius: 0%
                    - padding: 0%
                  entity_picture:
                    - width: |
                        [[[           
                          if( states['media_player.apple_tv_sejour'].attributes.app_id == "com.netflix.Netflix")
                                return "180%"
                          return "100%"
                        ]]]                            
                    - position: center
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              tap_action:
                action: call-service
                service: script.tv_salon_chaine_bas
                service_data: null
              entity: media_player.tv_salon
              icon: mdi:chevron-double-down
              template:
                - sub_button
                - sub_button_state
            - type: custom:button-card
              tap_action:
                action: call-service
                service: script.tv_salon_chaine_haut
                service_data: null
              entity: media_player.tv_salon
              icon: mdi:chevron-double-up
              template:
                - sub_button
                - sub_button_state
            - type: custom:button-card
              tap_action:
                action: call-service
                service: script.tv_salon_volume_bas
                service_data: null
              entity: media_player.tv_salon
              icon: mdi:volume-minus
              template:
                - sub_button
                - sub_button_state
            - type: custom:button-card
              tap_action:
                action: call-service
                service: script.tv_salon_volume_haut
                service_data: null
              entity: media_player.tv_salon
              icon: mdi:volume-plus
              template:
                - sub_button
                - sub_button_state
            - type: custom:button-card
              tap_action:
                action: call-service
                service: script.tv_salon_volume_mute
                service_data: null
              entity: script.tv_salon_volume_mute
              template:
                - sub_button
              icon: mdi:volume-variant-off
              styles:
                card:
                  - background-color: |
                      [[[
                        if (states['media_player.tv_salon'].attributes.is_volume_muted == true && states['media_player.tv_salon'].state =="on")
                          return 'var(--color-card-red)';
                        if (states['media_player.tv_salon'].attributes.is_volume_muted == false && states['media_player.tv_salon'].state =="on")                      
                          return "var(--color-card-blue)"
                        return ""
                      ]]]
                icon:
                  - color: |
                      [[[
                        if (states['media_player.tv_salon'].attributes.is_volume_muted == true && states['media_player.tv_salon'].state =="on")
                          return 'var(--color-icon-red)';
                        if (states['media_player.tv_salon'].attributes.is_volume_muted == false && states['media_player.tv_salon'].state =="on")                      
                          return "var(--color-icon-blue)"
                        return "var(--icon-off)"
                      ]]]
    double_tap_action:
      action: call-service
      service: script.tv_salon_on_off
      service_data: null
    tap_action:
      action: more-info
  tv_parents_card:
    entity: switch.tele_des_parents
    name: TV Parents
    icon: |
      [[[
        if( entity.state == "off")
              return "mdi:television"
        if( states['sensor.tv_parents_source'].state == "YouTube")
              return "mdi:youtube"          
        if( states['sensor.tv_parents_source'].state == "Netflix")
              return "phu:netflix"
        if( states['sensor.tv_parents_source'].state == "Plex")
              return "mdi:plex"
        return "mdi:television"
      ]]]
    label: |
      [[[
        if ( entity.state  == 'on')
          return states['sensor.tv_parents_source'].state
        if ( entity.state  == 'off')
            return 'Éteint'
        return ''
      ]]]
    template:
      - base
      - tv_card
      - card_state
    styles:
      name:
        - color: |
            [[[
              if ( entity.state  == 'off' )
                return 'var(--text-off)'
              if ( entity.state  == 'on' && states['media_player.apple_tv_parents'].state == 'playing' &&  states['sensor.apple_tv_salon_app_name'].state != 'YouTube' )
                return 'white'
              return 'var(--text-off)'
            ]]] 
      label:
        - color: |
            [[[
              if ( entity.state  == 'off' )
                return 'var(--text-off)'
              if ( entity.state  == 'on' && states['media_player.apple_tv_parents'].state == 'playing' &&  states['sensor.apple_tv_salon_app_name'].state != 'YouTube' )
                return 'white'
              return 'var(--text-off)'
            ]]] 
      card:
        - background-color: |
            [[[
              if ( entity.state  == 'off' )
                return ''
              if ( entity.state  == 'on' && states['media_player.apple_tv_parents'].state == 'playing' &&  states['sensor.apple_tv_salon_app_name'].state != 'YouTube' )
                return 'none'
              return 'var(--color-card-blue)'
            ]]] 
        - background: |
            [[[
              if ( entity.state  == 'off' )
                return ''
              if ( entity.state  == 'on' && states['media_player.apple_tv_parents'].state == 'playing' &&  states['sensor.apple_tv_salon_app_name'].state != 'YouTube' )
                return 'none'
              return 'var(--color-card-blue)'
            ]]] 
    custom_fields:
      duree: |
        [[[ return states['sensor.tv_parents_temps_restant'].state]]]
      programme: |
        [[[ return states['sensor.tv_parents_programme'].state ]]]
      barre:
        card:
          type: conditional
          conditions:
            - entity: media_player.apple_tv_parents
              state: playing
            - entity: sensor.tv_parents_duree_media
              state_not: unavailable
          card:
            type: custom:bar-card
            entities:
              - entity: sensor.tv_parents_duree_media_pourcentage
                color: rgba(232,233,242,0.3)
            direction: right
            unit_of_measurement: '%'
            max: 100
            positions:
              value: 'off'
              name: 'off'
              indicator: 'off'
            height: 15px
            width: 100%
            icon: 'off'
            entity_row: true
      jauge-cercle:
        card:
          type: conditional
          conditions:
            - entity: switch.tele_des_parents
              state: 'on'
          card:
            type: custom:hatc-gauge-card
            entity: sensor.tv_parents_vol
            title:
              name: false
              icon: false
              text-align: center
              text-color: white
              font-size: 28px
            gauge:
              icon: false
              font-size: 11px
              text-color: white
              max_value: 100
              friendly_name: false
              unit_of_measurement: false
              severity:
                - color: var(--text-off)
                - color: rgb(180, 70, 70)
                  from: 100
                  to: 100
      image:
        card:
          type: conditional
          conditions:
            - entity: media_player.apple_tv_parents
              state: playing
            - entity: sensor.apple_tv_parents_app_name
              state_not: YouTube
          card:
            type: custom:button-card
            entity: media_player.apple_tv_parents
            aspect_ratio: 1/1
            show_icon: false
            show_name: false
            show_entity_picture: true
            styles:
              card:
                - border-radius: 0%
                - padding: 0%
              entity_picture:
                - width: |
                    [[[           
                      if( states['media_player.apple_tv_parents'].attributes.app_id == "com.netflix.Netflix")
                            return "180%"
                      return "100%"
                    ]]]  
                - position: center
      bouton:
        card:
          type: horizontal-stack
          cards:
            - type: custom:button-card
              entity: switch.tele_des_parents
              icon: mdi:volume-minus
              template:
                - sub_button
                - sub_button_state
              tap_action:
                action: call-service
                service: script.tv_parents_volume_bas
                service_data: null
            - type: custom:button-card
              entity: switch.tele_des_parents
              icon: mdi:volume-plus
              template:
                - sub_button
                - sub_button_state
              tap_action:
                action: call-service
                service: script.tv_parents_volume_haut
                service_data: null
    double_tap_action:
      action: toggle
    tap_action:
      action: more-info
  system_card:
    aspect_ratio: 1/1
    template:
      - style
    styles:
      custom_fields:
        reload:
          - position: absolute
          - top: 3%
          - left: 112%
          - width: calc(60% + 1px)
          - transform: translate(-50%, calc(-50% + 10px))
          - z-index: 1
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
          - opacity: 100%
          - '--ha-card-border-width': 0px
        graph:
          - position: absolute
          - top: 77%
          - left: 50%
          - width: calc(100% + 15px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--ha-card-border-width': 0px
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
        graph_bar:
          - position: absolute
          - top: 88%
          - left: 51%
          - width: calc(100% + 35px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)"
          - '--ha-card-box-shadow': none
          - '--ha-card-border-width': 0px
        info:
          - top: 50%
          - z-index: 2
          - position: absolute
          - left: 50%
          - width: calc(100% + 0px)
          - transform: translate(-50%, calc(-50% + 10px))
          - '--ha-card-border-width': 0px
          - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
          - '--ha-card-background': rgba(0, 0, 0, 0.0)
          - '--ha-card-box-shadow': none
  system_card_info:
    layout: icon_name_state
    show_state: true
    styles:
      card:
        - height: 15px
        - padding: 0px
        - background: transparent
      icon:
        - width: 15px
        - margin-left: '-30px'
        - padding-bottom: 0px
        - color: var(--icon-off)
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
      name:
        - font-size: 12px
        - margin-left: '-35px'
        - justify-self: left
        - color: var(--text-on)
        - letter-spacing: '-0.5px'
        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
  system_card_info_temp_state:
    state:
      - value: 19
        operator: <
        styles:
          icon:
            - color: var(--color-blue)
      - value: 27
        operator: '>'
        styles:
          icon:
            - color: var(--color-red)
      - value: 25
        operator: '>'
        styles:
          icon:
            - color: var(--color-orange)
  system_card_info_state:
    state:
      - value: 80
        operator: '>'
        styles:
          icon:
            - color: var(--color-red)
      - value: 70
        operator: '>'
        styles:
          icon:
            - color: var(--color-orange)
  system_card_plant_state:
    state:
      - value: 2
        operator: <
        styles:
          icon:
            - color: var(--color-red)
      - value: 9
        operator: <
        styles:
          icon:
            - color: var(--color-orange)
title: Chez On
views:
  - theme: Backend-selected
    icon: mdi:home
    visible:
      - user: 76afcf1927a948b19530bcbf1074ac59
      - user: 2f0040afe95a4514ade3c049a0b5d479
      - user: d8316597eafd4333b737464a5b4c62d0
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 350
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - title_card
                styles:
                  card:
                    - margin-top: 3px
                  name:
                    - justify-self: middle
                name: |
                  [[[ return states['sensor.bonjour'].state ]]]
              - type: custom:button-card
                tap_action:
                  action: navigate
                  navigation_path: /lovelace/Calendrier
                entity: weather.maison
                show_entity_picture: false
                show_icon: false
                show_name: false
                show_state: false
                show_label: false
                template:
                  - police
                  - no_style
                styles:
                  grid:
                    - grid-template-areas: |
                        "info3"
                        "info4"
                    - grid-template-columns: 1fr
                    - grid-template-rows: min-content 1fr
                  card:
                    - padding-top: 01%
                    - border-radius: 24px
                    - height: 75px
                    - background: transparent
                  custom_fields:
                    info1:
                      - position: absolute
                      - top: 9px
                      - left: 20px
                      - font-size: 14px
                      - font-weight: null
                      - font-style: null
                      - text-align: left
                      - color: var(--text-on)
                      - white-space: normal
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                    info2:
                      - position: absolute
                      - top: 30px
                      - left: 20px
                      - font-size: 28px
                      - font-weight: bold
                      - font-style: null
                      - text-align: left
                      - color: var(--text-on)
                      - white-space: normal
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                    info3:
                      - padding-right: 18px
                      - padding-top: 3px
                      - text-align: right
                      - font-size: 14px
                      - color: transparent
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                    info4:
                      - padding-right: 18px
                      - padding-top: 15px
                      - font-size: 26px
                      - font-weight: bold
                      - text-align: right
                      - color: var(--text-on)
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                    entity_picture:
                      - position: absolute
                      - width: 24%
                      - top: 30px
                      - left: 58%
                      - opacity: 100%
                      - '--ha-card-border-width': 0px
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)
                      - '--ha-card-box-shadow': none
                    temp:
                      - position: absolute
                      - top: 7%
                      - left: 61%
                      - width: calc(100% + 0px)
                      - '--ha-card-border-width': 0px
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)
                      - '--ha-card-box-shadow': none
                    air:
                      - position: absolute
                      - top: 7%
                      - left: 78%
                      - width: calc(100% + 0px)
                      - '--ha-card-border-width': 0px
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)
                      - '--ha-card-box-shadow': none
                    graph:
                      - top: 30%
                      - opacity: 40%
                      - position: absolute
                      - align-self: middle
                      - white-space: normal
                      - width: calc(100% + 05px)
                      - '--ha-card-border-width': 0px
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)
                      - '--ha-card-box-shadow': none
                custom_fields:
                  info1: >
                    [[[return states['sensor.date_jour'].state + "
                    "+states['sensor.date_numero'].state + " " +
                    states['sensor.date_mois_court'].state +"." ]]]    
                  info2: |
                    [[[return states['sensor.time'].state]]]    
                  info3: |
                    [[[return states['sensor.weather_conditions'].state  ]]]  
                  info4: >
                    [[[return states['sensor.weather_temperature'].state + "°"
                    ]]]
                  temp:
                    card:
                      type: custom:button-card
                      entity: sensor.temp_maison
                      icon: mdi:home-thermometer-outline
                      label: |
                        [[[ 
                           if (states['sensor.temp_maison'].state == "unavailable")
                             return "HS"
                            return states['sensor.temp_maison'].state+"°" 
                        ]]]        
                      template:
                        - info_header
                      layout: icon_label
                      show_label: true
                      styles:
                        card:
                          - width: auto
                        icon:
                          - width: 17px
                      state:
                        - value: 26.9
                          operator: '>'
                          styles:
                            icon:
                              - color: var(--color-icon-red)
                        - value: 24.9
                          operator: '>'
                          styles:
                            icon:
                              - color: var(--color-icon-orange)
                        - value: 18.9
                          operator: <
                          styles:
                            icon:
                              - color: var(--color-icon-blue)
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Temp
                  air:
                    card:
                      type: custom:button-card
                      entity: sensor.moniteur_qualite_air
                      icon: mdi:blur
                      label: |
                        [[[ 
                           if (states['sensor.moniteur_qualite_air'].state == "unavailable")
                             return "HS"
                            return states['sensor.qualite_air_pourcentage'].state+"%" 
                        ]]]
                      template:
                        - info_header
                      layout: icon_label
                      show_label: true
                      styles:
                        card:
                          - width: auto
                        icon:
                          - width: 17px
                          - color: |
                              [[[
                                if (states['sensor.qualite_air_pourcentage'].state >= 96.1 && states['sensor.qualite_air_pourcentage'].state <= 98.7)
                                  return "var(--color-icon-blue)" 
                                if (states['sensor.qualite_air_pourcentage'].state >= 88.1 && states['sensor.qualite_air_pourcentage'].state <= 96)
                                  return "var(--color-icon-orange)" 
                                if (states['sensor.qualite_air_pourcentage'].state >= 60.1 && states['sensor.qualite_air_pourcentage'].state <= 88)
                                  return "var(--color-icon-orange)" 
                                if (states['sensor.qualite_air_pourcentage'].state >= 0 && states['sensor.qualite_air_pourcentage'].state <= 60)
                                  return "var(--color-icon-red)" 
                                return "var(--icon-off)" 
                              ]]]  
                      state:
                        - value: unavailable
                          styles:
                            icon:
                              - color: var(--color-icon-red)
                              - animation: blink 0.8s ease infinite
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/air
                  graph:
                    card:
                      type: custom:mini-graph-card
                      entities:
                        - entity: sensor.temp_maison
                          color: var(--graph-line)
                      tap_action:
                        action: navigate
                        navigation_path: /lovelace/Calendrier
                      hours_to_show: 24
                      hour24: true
                      animate: true
                      update_interval: 30
                      aggregate_func: avg
                      line_width: 1
                      height: 40
                      group: true
                      show:
                        labels: false
                        fill: false
                        state: false
                        name: false
                        icon: false
                  entity_picture:
                    card:
                      type: custom:button-card
                      show_entity_picture: true
                      entity_picture: |
                        [[[
                          if ((states['weather.maison'].state == 'sunny') && (states['sun.sun'].state == 'above_horizon'))
                            return "/local/weather/icones animes/clear-day.svg"
                          if ((states['weather.maison'].state == 'sunny') || (states['weather.maison'].state == 'clear-night') && (states['sun.sun'].state == 'below_horizon'))
                            return "/local/weather/icones animes/clear-night.svg"  

                          if ((states['weather.maison'].state == 'lightning-rainy') && (states['sun.sun'].state == 'above_horizon'))
                            return "/local/weather/icones animes/thunderstorms-day-rain.svg"
                          if ((states['weather.maison'].state == 'lightning-rainy') || (states['weather.maison'].state == 'clear-night') && (states['sun.sun'].state == 'below_horizon'))
                            return "/local/weather/icones animes/thunderstorms-night-rain.svg"

                          if ((states['weather.maison'].state == 'fog') && (states['sun.sun'].state == 'above_horizon'))
                            return "/local/weather/icones animes/fog-day.svg"             
                          if ((states['weather.maison'].state == 'fog') && (states['sun.sun'].state == 'below_horizon'))
                            return "/local/weather/icones animes/fog-night.svg"

                          if ((states['weather.maison'].state == 'partlycloudy') && (states['sun.sun'].state == 'above_horizon'))
                            return "/local/weather/icones animes/partly-cloudy-day.svg"                    
                          if ((states['weather.maison'].state == 'partlycloudy') && (states['sun.sun'].state == 'below_horizon'))
                            return "/local/weather/icones animes/partly-cloudy-night.svg"  

                          if ((states['weather.maison'].state == 'rainy') && (states['sun.sun'].state == 'above_horizon'))
                            return "/local/weather/icones animes/partly-cloudy-day-rain.svg"                      
                          if ((states['weather.maison'].state == 'rainy') && (states['sun.sun'].state == 'below_horizon'))
                            return "/local/weather/icones animes/partly-cloudy-night-rain.svg" 

                          if ((states['weather.maison'].state == 'lightning') && (states['sun.sun'].state == 'above_horizon'))
                            return "/local/weather/icones animes/thunderstorms-day.svg"                      
                          if ((states['weather.maison'].state == 'lightning') && (states['sun.sun'].state == 'below_horizon'))
                            return "/local/weather/icones animes/thunderstorms-night.svg" 

                          if (states['weather.maison'].state == 'clear-night')
                            return "/local/weather/icones animes/clear-night.svg";

                          if (states['weather.maison'].state == 'sleet')
                            return "/local/weather/icones animes/sleet.svg";  

                          if (states['weather.maison'].state == 'pouring')
                            return "/local/weather/icones animes/umbrella.svg"; 

                          if (states['weather.maison'].state == 'snowy-rainy')
                            return "/local/weather/icones animes/sleet.svg";  

                          if (states['weather.maison'].state == 'snow')
                            return "/local/weather/icones animes/snow.svg"; 

                          if (states['weather.maison'].state == 'snowy')
                            return "/local/weather/icones animes/snow.svg"; 

                          if (states['weather.maison'].state == 'cloudy')
                            return "/local/weather/icones animes/cloudy.svg"; 

                          if (states['weather.maison'].state == 'wind')
                            return "/local/weather/icones animes/wind.svg"; 

                          if (states['weather.maison'].state == 'hail')
                            return "/local/weather/icones animes/hail.svg"; 
                        ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 5px 0px 5px 0px;
                    border-radius: 40px !important;
                    margin: 3px 10px 0px 10px ;
                    background: var(--ha-card-background);
                    border-color: rgba(12, 12, 14, 0.2);
                    border-style: outset;
                    border-width: 1px;
                    box-shadow: 1px 1px 2px 0px rgba(10, 10, 10,0.4);

                  }
                cards:
                  - type: custom:button-card
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Alarmes
                    entity: alarm_control_panel.alarme
                    double_tap_action:
                      action: more-info
                    show_label: false
                    template:
                      - mini_card
                      - security_mini_card_state
                      - custom_state
                    icon: |
                      [[[
                        if (entity.state == "disarmed" )
                          return "mdi:shield-off";
                        if (entity.state == "armed_away" )
                          return "mdi:shield-lock";
                        if (entity.state == "armed_home" )
                          return "mdi:shield-home";
                        if (entity.state == "armed_night" )
                          return "mdi:shield-moon";
                        if (entity.state == "arming" )
                          return "mdi:shield-half-full";
                        if (entity.state == "triggered" )
                          return "mdi:shield-alert";
                        return "mdi:shield-off";
                      ]]]
                    custom_fields:
                      notification: >
                        [[[ return
                        Math.floor(states['sensor.compteur_home'].state ) ]]]  
                  - type: custom:button-card
                    double_tap_action:
                      action: navigate
                      navigation_path: /lovelace/Alarmes
                    tap_action:
                      action: more-info
                    entity: alarm_control_panel.aarlo_sonnette
                    show_label: false
                    template:
                      - mini_card
                      - security_mini_card_state
                      - custom_state
                    name: Sonnette
                    icon: phu:arlo-video-doorbell
                  - type: custom:button-card
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Lumières
                    double_tap_action:
                      action: more-info
                    entity: light.tout
                    template:
                      - mini_card
                      - light_mini_card_state
                    show_name: false
                    show_label: false
                    custom_fields:
                      notification: >
                        [[[ return
                        Math.floor(states['sensor.compteur_lumiere'].state )
                        ]]]          
                  - type: custom:button-card
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/porte_mouv_serrure
                    double_tap_action:
                      action: more-info
                    entity: binary_sensor.portes
                    show_label: false
                    template:
                      - mini_card
                      - security_mini_card_state
                      - custom_state
                    icon: |
                      [[[
                        if (states['binary_sensor.portes'].state == 'on')
                          return "mdi:door-open";
                        return "mdi:door-closed";
                      ]]]  
                    custom_fields:
                      notification: >
                        [[[ return
                        Math.floor(states['sensor.compteur_portes'].state )
                        ]]]            
                  - type: custom:button-card
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/porte_mouv_serrure
                    double_tap_action:
                      action: more-info
                    entity: group.serrures
                    show_label: false
                    template:
                      - mini_card
                      - security_mini_card_state
                      - custom_state
                    icon: |
                      [[[ 
                        if (states['group.serrures'].state == 'unlocked')
                          return "mdi:lock-open"
                        return "mdi:lock"
                      ]]]  
                    styles:
                      icon:
                        - animation: |
                            [[[
                              if (states['lock.serrure_entree'].state == 'jammed' || states['lock.garage'].state == 'jammed')
                                return 'blink 0.8s ease infinite'  
                            ]]]              
                    custom_fields:
                      notification: >
                        [[[ return
                        Math.floor(states['sensor.compteur_serrures'].state )
                        ]]]               
                  - type: custom:button-card
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/porte_mouv_serrure
                    double_tap_action:
                      action: more-info
                    entity: binary_sensor.mouvements
                    show_label: false
                    template:
                      - mini_card
                      - security_mini_card_state
                      - custom_state
                    name: Présences
                    icon: |
                      [[[ 
                        if (states['binary_sensor.mouvements'].state == 'on')
                          return "mdi:run-fast"
                        return "mdi:human-male"
                      ]]]  
                            
                    custom_fields:
                      notification: >
                        [[[ return
                        Math.floor(states['sensor.compteur_mouvement'].state )
                        ]]]  
              - type: conditional
                conditions:
                  - entity: alarm_control_panel.alarme
                    state_not: disarmed
                card:
                  type: custom:vertical-stack-in-card
                  cards:
                    - square: false
                      columns: 2
                      type: grid
                      cards:
                        - type: picture-glance
                          aspect_ratio: 60%
                          camera_image: camera.aarlo_sonnette
                          camera_view: auto
                          entities: []
                          style: |
                            ha-card { 
                              margin: 0px 3px;
                              overflow: hidden !important;
                              border-radius: 15px !important;
                            }
                            ha-card > div.box {
                              display: none;
                            }
                        - type: picture-glance
                          aspect_ratio: 60%
                          camera_image: camera.camera_entree
                          camera_view: auto
                          entities: []
                          style: |
                            ha-card { 
                              margin: 0px 3px;
                              overflow: hidden !important;
                              border-radius: 15px !important;
                            }
                            ha-card > div.box {
                              display: none;
                            }
                        - type: picture-glance
                          camera_image: camera.camera_sejour
                          camera_view: live
                          entities: []
                          style: |
                            ha-card { 
                              margin: 0px 3px;
                              overflow: hidden !important;
                              border-radius: 15px !important;
                            }
                            ha-card > div.box {
                              display: none;
                            }
                        - type: picture-glance
                          camera_image: camera.camera_g2hpro
                          camera_view: live
                          entities: []
                          style: |
                            ha-card { 
                              margin: 0px 3px;
                              overflow: hidden !important;
                              border-radius: 15px !important;
                            }
                            ha-card > div.box {
                              display: none;
                            }
                  style: |
                    ha-card {
                      background: none;
                      margin: -10px 30px 0px 30px;
                      overflow: hidden !important;
                      border-radius: 24px !important;
                    }
              - type: conditional
                conditions:
                  - entity: alarm_control_panel.aarlo_sonnette
                    state: armed_away
                  - entity: alarm_control_panel.alarme
                    state: disarmed
                card:
                  type: custom:vertical-stack-in-card
                  cards:
                    - entity: camera.aarlo_sonnette
                      title: Sonnette
                      hide:
                        - date
                      global: small
                      image_click: play
                      image_view: arlo-stream
                      show:
                        - image_date
                      top_date: true
                      top_status: false
                      top_title: false
                      type: custom:aarlo-glance
                  style: |
                    ha-card {
                      margin: -10px 30px 0px 30px;
                      overflow: hidden !important;
                      border-radius: 24px !important;
                    }
              - type: custom:button-card
                style: |
                  ha-card { 
                    margin-top: 15px;
                  }
                tap_action:
                  action: navigate
                  navigation_path: /lovelace/Calendrier
                show_entity_picture: false
                show_icon: false
                show_name: false
                show_state: false
                show_label: false
                template:
                  - police
                  - style
                styles:
                  grid:
                    - grid-template-areas: |
                        "devices"
                        "titre_programme"
                        "alerte"            
                        "anniv"
                        "calendrier"
                        "poubelle"
                        "titre_avertissement_rpi"
                        "avertissement_rpi" 
                        "titre_avertissement_serrures_bloquees"
                        "serrures_bloquees"
                        "titre_avertissement_erreur_aspi"
                        "erreur_aspi"              
                        "titre_avertissement"
                        "device_hs" 
                        "titre_batterie_faible"
                        "batterie_faible"
                        "titre_activite"        
                        "serrure"
                        "electricite"
                        "courrier"
                        "mouvement"
                        "porte"
                        "lumiere"
                        "rappel"
                        "appareils"
                        "aspi_mode_vacances"
                        "appareils_charges"
                        "appareils_connectes"
                        "modes"
                        "titre_enfants"
                        "reveils_et_cours_off"
                        "reveils_et_cours_on"        
                        "titre_savoir"
                        "savoir"            
                        "titre_maj"
                        "maj"
                        "boutons"
                    - grid-template-columns: 1fr
                    - grid-template-rows: >-
                        min-content min-content min-content min-content 
                        min-content  min-content  min-content  min-content 
                        min-content  min-content  min-content  min-content  
                        min-content  min-content  min-content min-content 
                        min-content  min-content  min-content  min-content 
                        min-content 1fr
                    - gap: 0%
                    - overflow: hidden
                  card:
                    - '-webkit-tap-highlight-color': rgba(0,0,0,0)
                    - padding: 3px 8px 02px 8px
                    - line-height: 147%
                    - font-size: 14px
                    - border-radius: 25px
                  custom_fields:
                    devices:
                      - padding: 02px 0px 0px 0px
                      - width: calc(100% + 0px)
                      - '--ha-card-border-width': 0px
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)
                      - '--ha-card-box-shadow': none
                    boutons:
                      - padding: 20px 0px 03px 0px
                      - width: calc(100% + 0px)
                      - '--ha-card-border-width': 0px
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)
                      - '--ha-card-box-shadow': none
                    titre_programme:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - padding: 20px 0px 01px 0px
                      - font-weight: bold
                      - font-style: null
                      - justifiy-self: start
                      - text-align: left
                      - color: var(--title)
                      - white-space: normal
                    alerte:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - color: |
                          [[[
                            if (states['sensor.49_weather_alert'].state == 'Jaune')
                              return 'var(--color-gold)'
                            if (states['sensor.49_weather_alert'].state == 'Orange')
                              return 'var(--color-orange)'
                            if (states['sensor.49_weather_alert'].state == 'Rouge')
                              return 'var(--color-red)'
                            return ''
                          ]]]
                      - border-left: |
                          [[[
                            if (states['sensor.49_weather_alert'].state == "Vert")
                              return '';
                            return '2px var(--color-blue) solid';
                          ]]]
                      - padding: 0px 0px 0px 0px
                      - padding-left: 8px
                      - justifiy-self: start
                      - text-align: left
                      - white-space: normal
                    anniv:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: |
                          [[[
                            if (states['sensor.anniversaire'].state == 'Aucun')
                              return '';
                            return '2px var(--color-blue) solid';
                          ]]]
                      - padding: 0px 0px 0px 0px
                      - padding-left: 8px
                      - justifiy-self: start
                      - text-align: left
                      - color: lightgrey
                      - white-space: normal
                    calendrier:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - padding: 0px 0px 0px 0px
                      - padding-left: 8px
                      - color: |
                          [[[
                            if (states['sensor.calendar_famille'].state == 'Aucun évènement')
                              return 'var(--text-off)';
                            return 'var(--text-on)';
                          ]]]
                      - justifiy-self: start
                      - text-align: left
                      - white-space: normal
                    poubelle:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - padding: 0px 0px 0px 0px
                      - padding-left: 8px
                      - color: |
                          [[[
                            if (states['sensor.calendar_poubelles'].state == 'Aucun rappel')
                              return 'var(--text-off)';
                            return 'var(--text-on)';
                          ]]]
                      - justifiy-self: start
                      - text-align: left
                      - white-space: normal
                    titre_avertissement_rpi:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - padding: |
                          [[[
                            if (states['sensor.averissement_rpi'].state == '')
                              return "0px 0px 0px 0px" ;
                            return "10px 0px 01px 0px" ;
                          ]]]       
                      - font-weight: bold
                      - justifiy-self: start
                      - text-align: left
                      - color: var(--color-dark-red)
                      - white-space: normal
                    avertissement_rpi:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-dark-red) solid
                      - padding: |
                          [[[
                            if (states['sensor.averissement_rpi'].state == '')
                              return "0px 0px 0px 0px" ;
                            return "0px 0px 0px 08px" ;
                          ]]]
                      - justifiy-self: start
                      - color: var(--color-red)
                      - white-space: normal
                      - text-align: left
                    titre_avertissement_serrures_bloquees:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - font-weight: bold
                      - justifiy-self: start
                      - text-align: left
                      - color: var(--color-dark-red)
                      - white-space: normal
                    serrures_bloquees:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-dark-red) solid
                      - padding-left: 8px
                      - justifiy-self: start
                      - color: var(--color-red)
                      - white-space: normal
                      - text-align: left
                    titre_avertissement_erreur_aspi:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - padding: |
                          [[[
                            if (states['sensor.erreur_aspi'].state == '')
                              return "0px 0px 0px 0px" ;
                            return "10px 0px 01px 0px" ;
                          ]]]       
                      - font-weight: bold
                      - justifiy-self: start
                      - text-align: left
                      - color: var(--color-dark-red)
                      - white-space: normal
                    erreur_aspi:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-dark-red) solid
                      - padding: |
                          [[[
                            if (states['sensor.erreur_aspi'].state == '')
                              return "0px 0px 0px 0px" ;
                            return "0px 0px 0px 08px" ;
                          ]]]
                      - justifiy-self: start
                      - color: var(--color-red)
                      - white-space: normal
                      - text-align: left
                    titre_avertissement:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - padding: |
                          [[[
                            if (states['sensor.systeme_avertissement'].state == '')
                              return "0px 0px 0px 0px" ;
                            return "10px 0px 01px 0px" ;
                          ]]]       
                      - font-weight: bold
                      - justifiy-self: start
                      - text-align: left
                      - color: var(--color-dark-red)
                      - white-space: normal
                    device_hs:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-dark-red) solid
                      - padding: |
                          [[[
                            if (states['sensor.systeme_avertissement'].state == '')
                              return "0px 0px 0px 0px" ;
                            return "0px 0px 0px 08px" ;
                          ]]]
                      - justifiy-self: start
                      - color: var(--color-red)
                      - white-space: normal
                      - text-align: left
                    titre_batterie_faible:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - padding: |
                          [[[
                            if (states['sensor.batterie_faible'].state == '')
                              return "0px 0px 0px 0px" ;
                            return "10px 0px 01px 0px" ;
                          ]]]          
                      - font-weight: bold
                      - justifiy-self: start
                      - text-align: left
                      - color: var(--color-dark-red)
                      - white-space: normal
                    batterie_faible:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-dark-red) solid
                      - padding-left: 8px
                      - justifiy-self: start
                      - color: var(--color-red)
                      - white-space: normal
                      - text-align: left
                    titre_enfants:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - padding: |
                          [[[
                            if (states['input_boolean.nilemato'].state == "off" && states['input_boolean.reveils'].state == "off" )
                              return "0px 0px 0px 0px" ;
                            return "10px 0px 01px 0px" ;
                          ]]]  
                      - font-weight: bold
                      - justifiy-self: start
                      - text-align: left
                      - color: var(--title)
                      - white-space: normal
                    reveils_et_cours_off:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - white-space: normal
                      - text-align: left
                      - padding: 0px 0px 0px 08px
                      - justifiy-self: start
                      - color: lightgrey
                    reveils_et_cours_on:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - padding: 0px 0px 0px 0px
                      - left: 200px
                      - width: calc(100% + 0px)
                      - '--ha-card-border-width': 0px
                      - '--paper-card-background-color': rgba(0, 0, 0, 0.0)
                      - '--ha-card-background': rgba(0, 0, 0, 0.0)
                      - '--ha-card-box-shadow': none
                    titre_activite:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - padding: 10px 0px 01px 0px
                      - font-weight: bold
                      - justifiy-self: start
                      - text-align: left
                      - color: var(--title)
                      - white-space: normal
                    electricite:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - white-space: normal
                      - text-align: left
                      - padding: 0px 0px 0px 08px
                      - justifiy-self: start
                      - color: lightgrey
                    serrure:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - white-space: normal
                      - text-align: left
                      - padding: 0px 0px 0px 08px
                      - justifiy-self: start
                      - color: lightgrey
                    aspi_mode_vacances:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - white-space: normal
                      - text-align: left
                      - padding: 0px 0px 0px 08px
                      - justifiy-self: start
                      - color: lightgrey
                    appareils:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - white-space: normal
                      - text-align: left
                      - padding: 0px 0px 0px 08px
                      - justifiy-self: start
                      - color: lightgrey
                    courrier:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - white-space: normal
                      - text-align: left
                      - padding: 0px 0px 0px 08px
                      - justifiy-self: start
                      - color: lightgrey
                    lumiere:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - padding: 0px 0px 0px 08px
                      - justifiy-self: start
                      - color: |
                          [[[
                            if (states['light.tout'].state == 'off')
                              return 'var(--text-off)';
                            return 'var(--text-on)';
                          ]]]
                      - white-space: normal
                      - text-align: left
                    mouvement:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - padding: 0px 0px 0px 08px
                      - justifiy-self: start
                      - text-align: left
                      - color: |
                          [[[
                            if (states['binary_sensor.mouvements'].state == 'off')
                              return 'var(--text-off)';
                            return 'var(--text-on)';
                          ]]]
                      - white-space: normal
                    porte:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - padding: 0px 0px 0px 08px
                      - justifiy-self: start
                      - text-align: left
                      - color: |
                          [[[
                            if (states['binary_sensor.portes'].state == 'off')
                              return 'var(--text-off)';
                            return 'var(--text-on)';
                          ]]]
                      - white-space: normal
                    rappel:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - padding: 0px 0px 0px 08px
                      - justifiy-self: start
                      - text-align: left
                      - white-space: normal
                      - color: |
                          [[[
                            if (states['binary_sensor.portes'].state == 'off')
                              return 'var(--text-off)';
                            return 'var(--text-on)';
                          ]]]
                    modes:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - padding: 0px 0px 0px 08px
                      - justifiy-self: start
                      - text-align: left
                      - color: lightgrey
                      - white-space: normal
                    appareils_connectes:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - padding: 0px 0px 0px 08px
                      - justifiy-self: start
                      - text-align: left
                      - color: lightgrey
                      - white-space: normal
                    appareils_charges:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - padding: 0px 0px 0px 08px
                      - justifiy-self: start
                      - text-align: left
                      - color: lightgrey
                      - white-space: normal
                    titre_maj:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - padding: |
                          [[[
                            if (states['sensor.maj'].state == 'Aucune mise à jour' || states['input_boolean.header_show_maj'].state == 'off')
                              return "0px" ;
                            return "10px 0px 01px 0px" 
                          ]]]
                      - font-weight: bold
                      - font-style: null
                      - justifiy-self: start
                      - text-align: left
                      - color: var(--title)
                      - white-space: normal
                    maj:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - padding: 0px 0px 0px 08px
                      - justifiy-self: start
                      - text-align: left
                      - color: |
                          [[[
                            if (states['sensor.maj'].state == 'Aucune mise à jour')
                              return "var(--text-off)" ;
                            return "var(--text-on)" 
                          ]]]
                      - white-space: normal
                    titre_savoir:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - padding: |
                          [[[
                            if (states['input_boolean.header_show_info'].state == 'off')
                              return "0px" ;
                            return "10px 0px 01px 0px" 
                          ]]]
                      - font-weight: bold
                      - font-style: null
                      - justifiy-self: start
                      - text-align: left
                      - color: var(--title)
                      - white-space: normal
                    savoir:
                      - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                      - border-left: 2px var(--color-blue) solid
                      - padding: 0px 0px 0px 08px
                      - justifiy-self: start
                      - text-align: left
                      - color: lightgrey
                      - white-space: normal
                      - font-style: italic
                      - font-size: 13px
                      - line-height: 120%
                custom_fields:
                  alerte: |
                    [[[
                      if (states['sensor.weather_alerte'].state == "Aucune" ) 
                        return ""
                      return states['sensor.weather_alerte_couleur_v2'].state+ "  "+states['sensor.weather_alerte'].state
                    ]]]
                  titre_programme: |
                    [[[return "Aujourd'hui " ]]]
                  anniv: |
                    [[[
                      if (states['sensor.anniversaire'].state == 'Aucun')
                        return "" 
                      return "🎉 " + states['sensor.anniversaire'].state
                    ]]]
                  calendrier: |
                    [[[ return  states['sensor.calendar_famille'].state
                    ]]]
                  poubelle: |
                    [[[ return  states['sensor.calendar_poubelles'].state
                    ]]]
                  titre_avertissement_rpi: |
                    [[[
                      if (states['sensor.averissement_rpi'].state == '')
                        return "" 
                      return "RPI" ;
                    ]]]
                  avertissement_rpi: |
                    [[[
                      if (states['sensor.averissement_rpi'].state == '')
                        return "" 
                      return states['sensor.averissement_rpi'].state ;
                    ]]]    
                  titre_avertissement_serrures_bloquees: |
                    [[[
                      if (states['sensor.serrures_bloquees'].state == '')
                        return "" 
                      return "RPI" ;
                    ]]]
                  serrures_bloquees: |
                    [[[
                      if (states['sensor.serrures_bloquees'].state == '')
                        return "" 
                      return states['sensor.serrures_bloquees'].state ;
                    ]]]   
                  titre_avertissement_erreur_aspi: |
                    [[[
                      if (states['sensor.erreur_aspi'].state == '')
                        return "" 
                      return "Aspi erreur " ;
                    ]]]
                  erreur_aspi: |
                    [[[
                      if (states['sensor.erreur_aspi'].state == '')
                        return "" 
                      return states['sensor.erreur_aspi'].state ;
                    ]]]        
                  titre_avertissement: |
                    [[[
                      if (states['sensor.systeme_avertissement'].state == '')
                        return "" 
                      return "Indisponible " ;
                    ]]]
                  device_hs: |
                    [[[
                      if (states['sensor.systeme_avertissement'].state == '')
                        return "" 
                      return states['sensor.systeme_avertissement'].state ;
                    ]]]
                  titre_batterie_faible: |
                    [[[
                      if (states['sensor.batterie_faible'].state == '')
                        return "" 
                      return "Batterie faible" ;
                    ]]]
                  batterie_faible: |
                    [[[
                      if (states['sensor.batterie_faible'].state == '')
                        return "" 
                      return states['sensor.batterie_faible'].state ;
                    ]]]
                  titre_enfants: |
                    [[[ 
                      if (states['input_boolean.nilemato'].state == "off" && states['input_boolean.reveils'].state == "off")
                        return ""
                      if (states['input_boolean.nilemato'].state == "off" && states['input_boolean.reveils'].state == "on")
                        return "Enfants absents"
                      return "Réveils et cours"
                    ]]]
                  reveils_et_cours_off: |
                    [[[ 
                      if (states['input_boolean.nilemato'].state == "on" && states['sensor.verif_reveils_cours'].state == "off")
                        return "Aucun réveil ni cours"
                      if (states['input_boolean.nilemato'].state == "off" && states['input_boolean.reveils'].state == "on")
                        return "<b>Attention, des réveils sont programmés</b>"
                      return ""
                    ]]]  
                  reveils_et_cours_on:
                    card:
                      type: conditional
                      conditions:
                        - entity: sensor.verif_reveils_cours
                          state: 'on'
                        - entity: input_boolean.nilemato
                          state: 'on'
                      card:
                        type: markdown
                        content: |2-
                           <table>
                           <tr>
                            {%- set time = states.sensor.time.state -%}

                            {%- set reveil_tom = not is_state('sensor.tom_reveil', 'Grasse mat !') -%}
                            {%- set tom_debut_cours = states.sensor.debut_des_cours_de_tom_aujourd_hui.state -%}
                            {%- set tom_aujourdhui = not is_state('sensor.debut_des_cours_de_tom_aujourd_hui', 'Pas cours') -%}    
                            {%- set tom_demain = not is_state('sensor.debut_des_cours_de_tom_demain', 'Pas cours') -%}             
                            {%- set fin_tom = states.sensor.fin_des_cours_de_tom_aujourd_hui.state -%}
                            {%- set tom_modif_aujourdhui = states.sensor.pronote_NAME_tom_timetable_today.attributes.canceled_lessons_counter  -%}
                            {%- set tom_modif_demain = states.sensor.pronote_NAME_tom_timetable_tomorrow.attributes.canceled_lessons_counter  -%}

                            {%- set reveil_manon = not is_state('sensor.manon_reveil', 'Grasse mat !') -%}
                            {%- set manon_debut_cours = states.sensor.debut_des_cours_de_manon_aujourd_hui.state -%}
                            {%- set manon_aujourdhui = not is_state('sensor.debut_des_cours_de_manon_aujourd_hui', 'Pas cours') -%}    
                            {%- set manon_demain = not is_state('sensor.debut_des_cours_de_manon_demain', 'Pas cours') -%} 
                            {%- set fin_manon = states.sensor.fin_des_cours_de_manon_aujourd_hui.state -%}
                            {%- set manon_modif_aujourdhui = states.sensor.pronote_NAME_manon_timetable_today.attributes.canceled_lessons_counter  -%}
                            {%- set manon_modif_demain = states.sensor.pronote_NAME_manon_timetable_tomorrow.attributes.canceled_lessons_counter  -%}

                            {%- set reveil_leane = not is_state('sensor.leane_reveil', 'Grasse mat !') -%}
                            {%- set leane_debut_cours = states.sensor.debut_des_cours_de_leane_aujourd_hui.state -%}
                            {%- set leane_aujourdhui = not is_state('sensor.debut_des_cours_de_leane_aujourd_hui', 'Pas cours') -%}    
                            {%- set leane_demain = not is_state('sensor.debut_des_cours_de_leane_demain', 'Pas cours') -%}
                            {%- set fin_leane = states.sensor.fin_des_cours_de_leane_aujourd_hui.state -%}
                            {%- set leane_modif_aujourdhui = states.sensor.pronote_NAME_l_ane_timetable_today.attributes.canceled_lessons_counter  -%}
                            {%- set leane_modif_demain = states.sensor.pronote_NAME_l_ane_timetable_tomorrow.attributes.canceled_lessons_counter  -%}            

                            {%- set reveil_nina = not is_state('sensor.nina_reveil', 'Grasse mat !') -%}
                            
                            
                            <td><b>Tom</td>

                            <td><b>{%- if reveil_tom == True -%}<font color = #00bfff>{%- else -%}<font color = "grey">{%- endif -%}<ha-icon icon="mdi:clock"></ha-icon></td>    
                            <td>{%- if reveil_tom == True -%}{{ states.sensor.tom_reveil_court.state }}{%- else -%}<font color = grey>Aucun{%- endif -%}</td>
                            <td><b>{%- if tom_aujourdhui == True and time < fin_tom -%}<font color = "#00bfff">{%- else -%}<font color = "grey">{%- endif -%}<ha-icon icon="mdi:pen"></ha-icon></td>
                            <td>{%- if tom_aujourdhui == True -%}
                                  {%- if time < fin_tom -%}
                                  {{ states.sensor.date_debut_des_cours_de_tom_aujourd_hui.state }} - {{ states.sensor.fin_des_cours_de_tom_aujourd_hui.state }}
                                  {%- else -%}
                                    {%- if tom_demain == True -%}
                                    <font color = darkgrey>{{ states.sensor.date_debut_des_cours_de_tom_demain.state }} - {{ states.sensor.fin_des_cours_de_tom_demain.state }} 
                                    {%- elif tom_demain == False -%}
                                    <font color = grey>Pas cours
                                    {%- endif -%}</font>            
                                  {%- endif -%}
                                {%- elif tom_aujourdhui == False -%}               
                                  {%- if tom_demain == True -%}
                                  <font color = darkgrey>{{ states.sensor.date_debut_des_cours_de_tom_demain.state }} - {{ states.sensor.fin_des_cours_de_tom_demain.state }} 
                                  {%- elif tom_demain == False -%}
                                  <font color = grey>Pas cours
                                  {%- endif -%}
                                {%- endif -%}</td>
                                
                            <tr>
                            
                            <td><b>Manon</td>           
                            <td><b>{%- if reveil_manon == True -%}<font color = "#00bfff">{%- else -%}<font color = "grey">{%- endif -%}<ha-icon icon="mdi:clock"></ha-icon></td>    
                            <td>{%- if reveil_manon == True -%}{{ states.sensor.manon_reveil_court.state }}{%- else -%}<font color = grey>Aucun{%- endif -%}</td>  
                            <td><b>{%- if manon_aujourdhui == True and time < fin_manon -%}<font color = "#00bfff">{%- else -%}<font color = "grey">{%- endif -%}<ha-icon icon="mdi:pen"></ha-icon></td>  
                            <td>{%- if manon_aujourdhui == True -%}
                                  {%- if time < fin_manon -%}
                                  {{ states.sensor.date_debut_des_cours_de_manon_aujourd_hui.state }} - {{ states.sensor.fin_des_cours_de_manon_aujourd_hui.state }}
                                  {%- else -%}
                                    {%- if manon_demain == True -%}
                                    <font color = darkgrey>{{ states.sensor.date_debut_des_cours_de_manon_demain.state }} - {{ states.sensor.fin_des_cours_de_manon_demain.state }} 
                                    {%- elif manon_demain == False -%}
                                    <font color = grey>Pas cours
                                    {%- endif -%}</font>            
                                  {%- endif -%}
                                {%- elif manon_aujourdhui == False -%}               
                                  {%- if manon_demain == True -%}
                                  <font color = darkgrey>{{ states.sensor.date_debut_des_cours_de_manon_demain.state }} - {{ states.sensor.fin_des_cours_de_manon_demain.state }} 
                                  {%- elif manon_demain == False -%}
                                  <font color = grey>Pas cours
                                  {%- endif -%}
                                {%- endif -%}</td>
                                

                            <tr>
                            <td><b>Léane</td>      
                            <td><b>{%- if reveil_leane == True -%}<font color = "#00bfff">{%- else -%}<font color = "grey">{%- endif -%}<ha-icon icon="mdi:clock"></ha-icon></td>    
                            <td>{%- if reveil_leane == True -%}{{ states.sensor.leane_reveil_court.state }}{%- else -%}<font color = grey>Aucun{%- endif -%}</td>
                            <td><b>{%- if leane_aujourdhui == True and time < fin_leane -%}<font color = "#00bfff">{%- else -%}<font color = "grey">{%- endif -%}<ha-icon icon="mdi:pen"></ha-icon></td>
                            <td>{%- if leane_aujourdhui == True -%}
                                  {%- if time < fin_leane -%}
                                  {{ states.sensor.date_debut_des_cours_de_leane_aujourd_hui.state }} - {{ states.sensor.fin_des_cours_de_leane_aujourd_hui.state }}
                                  {%- else -%}
                                    {%- if leane_demain == True -%}
                                    <font color = darkgrey>{{ states.sensor.date_debut_des_cours_de_leane_demain.state }} - {{ states.sensor.fin_des_cours_de_leane_demain.state }} 
                                    {%- elif leane_demain == False -%}
                                    <font color = grey>Pas cours
                                    {%- endif -%}</font>            
                                  {%- endif -%}
                                {%- elif leane_aujourdhui == False -%}               
                                  {%- if leane_demain == True -%}
                                  <font color = darkgrey>{{ states.sensor.date_debut_des_cours_de_leane_demain.state }} - {{ states.sensor.fin_des_cours_de_leane_demain.state }} 
                                  {%- elif leane_demain == False -%}
                                  <font color = grey>Pas cours
                                  {%- endif -%}
                                {%- endif -%}</td>
                                
                            <tr>
                            
                            <td><b>Nina</td>
                            <td><b>{%- if reveil_nina == True -%}<font color = "#00bfff">{%- else -%}<font color = "grey">{%- endif -%}<ha-icon icon="mdi:clock"></ha-icon></td>            
                            <td>{%- if reveil_nina == True -%}{{ states.sensor.nina_reveil_court.state }}{%- else -%}<font color = grey>Aucun{%- endif -%}</td> 
                            
                        card_mod:
                          style:
                            .: |
                              ha-card ha-markdown {
                                padding: 0px;
                                --mdc-icon-size: 13px;
                              }
                              ha-card ha-markdown.no-header {
                                padding: 0px;
                              }
                            ha-markdown$: |
                              table{
                                border-collapse: collapse;
                                font-weight:normal;
                                font-size: 13px;
                                font-family: Avenir;
                                color: var(--text-on);
                                letter-spacing: 0px;
                                width: auto;
                                outline: 0px solid #393c3d;
                                margin-top: 0px;
                              } td {
                                  padding: 0px 0px 0px 8px;
                                  text-align: left;  
                              }
                              tr {
                                  border-bottom: none;
                                  line-height: 19px;      
                              }
                              span {
                                  padding: 5px;
                              }
                              tr:nth-child(n+1) > td:nth-child(1) {
                                text-align: left;
                                padding: 0px 0px 0px 10px;
                              }
                  titre_activite: |
                    [[[ return "Infos" 
                    ]]]
                  electricite: |
                    [[[
                      if (states['sensor.electricite_conso_veille'].state == "-1.0" )
                        return ""
                      if (states['sensor.electricite_conso_veille'].state == "unavailable" )
                        return ""        
                      return `<ha-icon
                        icon="mdi:flash"
                        style="width: 14px; color: var(--color-icon-blue); margin-right: 2px;">
                        </ha-icon><span> ${states['sensor.electricite_cout_jour_avec_abo'].state} € (${states["sensor.electricite_conso_kwh_arrondie"].state} kWh)</span>`
                    ]]]    
                  serrure: |
                    [[[
                      if (states['group.serrures'].state == 'locked' || states['input_boolean.header_show_serrures'].state == 'off')
                        return ""
                      return `<ha-icon
                        icon="mdi:lock-open"
                        style="width: 14px; color: var(--color-icon-orange);  margin-right: 2px;">
                        </ha-icon><span> ${states['sensor.serrure_ouverte'].state}</span>`
                      if (states['lock.garage'].state == 'jammed' || states['input_boolean.header_show_serrures'].state == 'off')
                        return ""
                      return `<ha-icon
                        icon="mdi:lock-alert"
                        style="width: 14px; color: var(--color-icon-red); margin-right: 2px;">
                        </ha-icon><span> ${states['sensor.serrure_bloquee'].state}</span>`
                    ]]]
                  aspi_mode_vacances: |
                    [[[
                      if (states['input_boolean.vacances'].state == 'off')
                        return ""
                      return `<ha-icon
                        icon="phu:roborock"
                        style="width: 14px; color: var(--color-icon-blue);  margin-right: 2px;">
                        </ha-icon><span>Prochain nettoyage : ${states['sensor.aspi_mode_vacances'].state}</span>`
                    ]]]
                  appareils: |
                    [[[
                      if (states['group.appareils'].state == 'off' || states['input_boolean.header_show_appareils'].state == 'off')
                        return ""
                      return `<ha-icon
                        icon="mdi:connection"
                        style="width: 14px; color: var(--color-icon-blue);  margin-right: 2px;"> 
                        </ha-icon><span> ${states['sensor.appareils'].state}</span>`
                    ]]]
                  courrier: |
                    [[[
                      if (states['input_boolean.header_show_courrier'].state == 'off' )
                        return ""
                      if (states['input_boolean.header_show_courrier'].state == 'on' && states['input_boolean.courrier_releve'].state == 'off' && states['input_boolean.boite_aux_lettres_ouverte'].state == 'off')
                        return ""
                      if (states['input_boolean.header_show_courrier'].state == 'on' && states['input_boolean.courrier_releve'].state == 'on')
                        return `<ha-icon
                          icon="mdi:email"
                          style="width: 14px; color: var(--color-icon-blue);  margin-right: 2px;">
                          </ha-icon><span>Courrier relevé à ${states['sensor.courrier_releve'].state}</span>`
                      if (states['input_boolean.header_show_courrier'].state == 'on' && states['input_boolean.boite_aux_lettres_ouverte'].state == 'on')
                        return `<ha-icon
                          icon="mdi:email"
                          style="width: 14px; color: var(--color-icon-blue);  margin-right: 2px;">
                          </ha-icon><span>Boîte aux lettres ouverte à ${states['sensor.boite_aux_lettres_ouvertee'].state}</span>`
                    ]]]
                  lumiere: |
                    [[[
                      if (states['sensor.lumiere_etat'].state == 'Aucune' || states['input_boolean.header_show_lumiere'].state == 'off')
                        return ""
                      return `<ha-icon
                        icon="phu:bulb-group-filament-candle"
                        style="width: 14px; color: var(--color-icon-blue); margin-right: 2px;">
                        </ha-icon><span> ${states['sensor.lumiere_etat'].state}</span>`
                    ]]]
                  mouvement: |
                    [[[
                      if (states['sensor.mouv_on'].state == 'Aucun' || states['input_boolean.header_show_mouvement'].state == 'off')
                        return ""
                      return `<ha-icon
                        icon="mdi:run"
                        style="width: 14px; color: var(--color-blue);  margin-right: 2px;">
                        </ha-icon><span> ${states['sensor.mouv_on'].state}</span>`
                    ]]]
                  porte: |
                    [[[
                      if (states['sensor.porte_on'].state == 'Aucune'|| states['input_boolean.header_show_porte'].state == 'off')
                        return ""
                      return `<ha-icon
                        icon="mdi:door-open"
                        style="width: 14px; color: var(--color-icon-blue);  margin-right: 2px;">
                        </ha-icon><span> ${states['sensor.porte_on'].state}</span>`
                    ]]]
                  rappel: |
                    [[[
                      
                      if (states['sensor.rappel'].state == "")
                        return ""
                      if (states['sensor.rappel'].state == "unavailable")
                        return ""            
                      return `<ha-icon
                        icon="mdi:reminder"
                        style="width: 14px; color: var(--color-icon-blue);  margin-right: 2px;">
                        </ha-icon><span> ${states['sensor.rappel'].state}</span>`
                    ]]]
                  appareils_charges: |
                    [[[
                      if (states['sensor.appareils_charges'].state == '' || states['input_boolean.header_show_appareils_charges'].state == 'off')
                        return ""
                      return `<ha-icon
                        icon="mdi:battery-charging-100"
                        style="width: 14px; color: var(--color-icon-blue);  margin-right: 2px;">
                        </ha-icon><span> ${states['sensor.appareils_charges'].state}</span>`
                    ]]]
                  appareils_connectes: |
                    [[[
                      if (states['sensor.appareils_connectes'].state == 'Aucun' || states['input_boolean.header_show_connecte'].state == 'off')
                        return ""
                      return `<ha-icon
                        icon="mdi:laptop"
                        style="width: 14px; color: var(--color-icon-blue);  margin-right: 2px;">
                        </ha-icon><span> ${states['sensor.appareils_connectes'].state}</span>` 
                    ]]]
                  modes: |
                    [[[
                      if (states['sensor.modes'].state == 'Aucun'|| states['input_boolean.header_show_mode'].state == 'off')
                        return ""
                      return `<ha-icon
                        icon="mdi:order-bool-descending-variant"
                        style="width: 14px; color: var(--color-icon-blue);  margin-right: 2px; ">
                        </ha-icon><span> ${states['sensor.modes'].state}</span>`
                    ]]]
                  titre_maj: |
                    [[[ 
                      if (states['sensor.maj'].state == 'Aucune mise à jour' || states['input_boolean.header_show_maj'].state == 'off')
                        return "" 
                      return "Mise à jour"
                    ]]]
                  maj: |
                    [[[ 
                      if (states['sensor.maj'].state == 'Aucune mise à jour' || states['input_boolean.header_show_maj'].state == 'off')
                        return "" 
                      return states['sensor.maj'].state  
                    ]]]
                  titre_savoir: |
                    [[[ 
                      if (states['input_boolean.header_show_info'].state == 'off')
                        return "" 
                      return "Savoir Inutile"
                    ]]]
                  savoir: |
                    [[[ 
                      if (states['input_boolean.header_show_info'].state == 'off')
                        return "" 
                      return states['sensor.web_scrape'].state  
                    ]]]             
                  devices:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: group.aspis
                          icon: phu:roborock
                          show_label: false
                          template:
                            - info_header
                            - icon_state
                          styles:
                            icon:
                              - animation: |
                                  [[[
                                    if (states['vacuum.wall_e'].state == "cleaning" || states['vacuum.r2d2'].state == "cleaning")
                                      return 'rotating 4s ease infinite'
                                  ]]]
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Aspis
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_aspi'].state )
                              ]]]                    
                        - type: custom:button-card
                          entity: input_boolean.musique
                          icon: mdi:speaker
                          show_label: false
                          template:
                            - info_header
                            - icon_state
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Musique
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_musique'].state
                              ) ]]]                    
                        - type: custom:button-card
                          entity: group.tv
                          show_name: false
                          show_label: false
                          show_state: false
                          template:
                            - info_header
                            - icon_state
                          tap_action:
                            action: more-info
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_tv'].state )
                              ]]]                    
                        - type: custom:button-card
                          entity: group.machines
                          icon: mdi:dishwasher
                          show_name: false
                          show_label: false
                          show_state: false
                          template:
                            - info_header
                            - icon_state
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Appareils
                          custom_fields:
                            notification: >
                              [[[ return
                              Math.floor(states['sensor.compteur_machines'].state
                              ) ]]]          
                        - type: conditional
                          conditions:
                            - entity: input_boolean.imprimante
                              state: 'on'
                          card:
                            type: custom:button-card
                            entity: input_boolean.imprimante
                            icon: null
                            show_name: false
                            show_label: false
                            show_state: false
                            template:
                              - info_header
                              - icon_state
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/Appareils
                        - type: conditional
                          conditions:
                            - entity: switch.radiateur
                              state: 'on'
                          card:
                            type: custom:button-card
                            entity: switch.radiateur
                            icon: null
                            show_name: false
                            show_label: false
                            show_state: false
                            template:
                              - info_header
                              - icon_state
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/Appareils
                        - type: conditional
                          conditions:
                            - entity: group.moustiques
                              state: 'on'
                          card:
                            type: custom:button-card
                            entity: group.moustiques
                            icon: mdi:spray
                            show_name: false
                            show_label: false
                            show_state: false
                            template:
                              - info_header
                              - icon_state
                            tap_action:
                              action: navigate
                              navigation_path: /lovelace/Appareils
                            custom_fields:
                              notification: >
                                [[[ return
                                Math.floor(states['sensor.compteur_moustique'].state
                                ) ]]]  
                        - type: conditional
                          conditions:
                            - entity: switch.trottinette
                              state: 'on'
                          card:
                            type: custom:button-card
                            entity: switch.trottinette
                            icon: mdi:scooter-electric
                            show_label: false
                            template:
                              - info_header
                            styles:
                              icon:
                                - color: |
                                    [[[
                                      if (states["switch.trottinette"].state == "on" && states["sensor.trottinette_active_power"].state == "0") return 'var(--color-icon-red)'
                                      if (states["switch.trottinette"].state == "on" && states["sensor.trottinette_active_power"].state > "0") return 'var(--color-icon-blue)'                        
                                      else return ''
                                    ]]]                      
                  boutons:
                    card:
                      type: horizontal-stack
                      cards:
                        - type: custom:button-card
                          entity: switch.adguard_protection
                          icon: mdi:shield-check-outline
                          show_label: false
                          template:
                            - sub_button
                            - sub_button_state
                        - type: custom:button-card
                          entity: >-
                            binary_sensor.home_assistant_versions_update_available
                          icon: mdi:home-assistant
                          show_label: false
                          template:
                            - sub_button
                            - sub_button_state
                          styles:
                            icon:
                              - color: |
                                  [[[
                                    if (states['binary_sensor.home_assistant_versions_update_available'].state == "on" || states['update.home_assistant_supervisor_update'].state == "on" || states['update.home_assistant_operating_system_update'].state == "on")
                                      return 'var(--color-icon-blue)'
                                    return 'var(--icon-off)'
                                  ]]]                      
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/systeme
                          double_tap_action:
                            action: call-service
                            service: input_boolean.toggle
                            service_data:
                              entity_id: input_boolean.header_show_maj
                        - type: custom:button-card
                          entity: sensor.hacs
                          icon: mdi:package-variant
                          show_label: false
                          template:
                            - sub_button
                            - sub_button_state
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/systeme
                          double_tap_action:
                            action: call-service
                            service: input_boolean.toggle
                            service_data:
                              entity_id: input_boolean.header_show_maj
                        - type: custom:button-card
                          icon: mdi:qrcode
                          show_label: false
                          template:
                            - sub_button
                          label: wifi
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/invités
                        - type: custom:button-card
                          entity: group.annonces
                          icon: mdi:message-processing-outline
                          show_label: false
                          template:
                            - sub_button
                            - sub_button_state
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/Annonces
                        - type: custom:button-card
                          entity: group.mode
                          show_label: false
                          template:
                            - sub_button
                            - sub_button_state
                          label: |
                            [[[ return states['sensor.compteur_modes'].state ]]]
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/reglages
                        - type: custom:button-card
                          icon: mdi:cog-outline
                          show_label: false
                          template:
                            - sub_button
                          label: Réglage
                          tap_action:
                            action: navigate
                            navigation_path: /lovelace/reglages
              - type: horizontal-stack
                cards:
                  - type: conditional
                    conditions:
                      - entity: sensor.le_bureau_next_timer
                        state_not: unavailable
                      - entity: sensor.le_bureau_next_timer
                        state_not: unknown
                    card:
                      type: custom:button-card
                      entity: sensor.minuteur_bureau
                      name: Bureau
                      icon: mdi:timer-sand
                      show_state: true
                      show_label: false
                      show_last_update: false
                      template:
                        - ball_card
                  - type: conditional
                    conditions:
                      - entity: sensor.la_cuisine_next_timer
                        state_not: unavailable
                      - entity: sensor.la_cuisine_next_timer
                        state_not: unknown
                    card:
                      type: custom:button-card
                      entity: sensor.minuteur_cuisine
                      name: Cuisine
                      icon: mdi:timer-sand
                      show_state: true
                      show_label: false
                      show_last_update: false
                      template:
                        - ball_card
                  - type: conditional
                    conditions:
                      - entity: sensor.le_salon_next_timer
                        state_not: unavailable
                      - entity: sensor.le_salon_next_timer
                        state_not: unknown
                    card:
                      type: custom:button-card
                      entity: sensor.minuteur_salon
                      name: Salon
                      icon: mdi:timer-sand
                      show_state: true
                      show_label: false
                      show_last_update: false
                      template:
                        - ball_card
                  - type: conditional
                    conditions:
                      - entity: sensor.aurel_s_fire_tv_cube_next_timer
                        state_not: unavailable
                      - entity: sensor.aurel_s_fire_tv_cube_next_timer
                        state_not: unknown
                    card:
                      type: custom:button-card
                      entity: sensor.minuteur_fire_tv
                      name: Fire TV
                      icon: mdi:timer-sand
                      show_state: true
                      show_label: false
                      show_last_update: false
                      template:
                        - ball_card
                  - type: conditional
                    conditions:
                      - entity: sensor.la_salle_de_bain_next_timer
                        state_not: unavailable
                      - entity: sensor.la_salle_de_bain_next_timer
                        state_not: unknown
                    card:
                      type: custom:button-card
                      entity: sensor.minuteur_sdb
                      name: SDB
                      icon: mdi:timer-sand
                      show_state: true
                      show_label: false
                      show_last_update: false
                      template:
                        - ball_card
                  - type: conditional
                    conditions:
                      - entity: sensor.papa_next_timer
                        state_not: unavailable
                      - entity: sensor.papa_next_timer
                        state_not: unknown
                    card:
                      type: custom:button-card
                      entity: sensor.minuteur_aurel
                      name: Aurel
                      icon: mdi:timer-sand
                      show_state: true
                      show_label: false
                      show_last_update: false
                      template:
                        - ball_card
                  - type: conditional
                    conditions:
                      - entity: sensor.maman_next_timer
                        state_not: unavailable
                      - entity: sensor.maman_next_timer
                        state_not: unknown
                    card:
                      type: custom:button-card
                      entity: sensor.minuteur_alex
                      name: Alex
                      icon: mdi:timer-sand
                      show_state: true
                      show_label: false
                      show_last_update: false
                      template:
                        - ball_card
                  - type: conditional
                    conditions:
                      - entity: sensor.tom_next_timer
                        state_not: unavailable
                      - entity: sensor.tom_next_timer
                        state_not: unknown
                    card:
                      type: custom:button-card
                      entity: sensor.minuteur_tom
                      name: Tom
                      icon: mdi:timer-sand
                      show_state: true
                      show_label: false
                      show_last_update: false
                      template:
                        - ball_card
                  - type: conditional
                    conditions:
                      - entity: sensor.nina_next_timer
                        state_not: unavailable
                      - entity: sensor.nina_next_timer
                        state_not: unknown
                    card:
                      type: custom:button-card
                      entity: sensor.minuteur_nina
                      name: Nina
                      icon: mdi:timer-sand
                      show_state: true
                      show_label: false
                      show_last_update: false
                      template:
                        - ball_card
                  - type: conditional
                    conditions:
                      - entity: sensor.leane_next_timer
                        state_not: unavailable
                      - entity: sensor.leane_next_timer
                        state_not: unknown
                    card:
                      type: custom:button-card
                      entity: sensor.minuteur_leane
                      name: Léane
                      icon: mdi:timer-sand
                      show_state: true
                      show_label: false
                      show_last_update: false
                      template:
                        - ball_card
                  - type: conditional
                    conditions:
                      - entity: sensor.manon_next_timer
                        state_not: unavailable
                      - entity: sensor.manon_next_timer
                        state_not: unknown
                    card:
                      type: custom:button-card
                      entity: sensor.minuteur_manon
                      name: Manon
                      icon: mdi:timer-sand
                      show_state: true
                      show_label: false
                      show_last_update: false
                      template:
                        - ball_card
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: vertical-stack
            cards:
              - cards:
                  - type: custom:button-card
                    template:
                      - title_card
                    name: |
                      [[[ return "Rez-de-chaussée" ]]]
                  - type: grid
                    cards:
                      - type: custom:button-card
                        entity: light.sejour
                        variables:
                          var_label: |
                            [[[ 
                              if (states['sensor.temp_sejour'].state == 'unavailable')
                                return "?"
                              if (states['light.sejour'].state == 'on')
                                return states['sensor.temp_sejour_arrondie'].state +"° / "       
                              return states['sensor.temp_sejour_arrondie'].state +"°"
                            ]]]
                          temp: sensor.temp_sejour
                          temp_state: |
                            [[[ return states['sensor.temp_sejour'].state]]]
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_graph
                        name: Séjour
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_sejour'].state )
                            ]]]
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: media_player.tv_salon
                                  icon: mdi:television-play
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: media_player.sejour
                                  icon: mdi:speaker
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: binary_sensor.mouvements_sejour
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: binary_sensor.presence_sejour_fp2
                                  template:
                                    - sub_button
                                    - sub_button_state
                                  icon: |
                                    [[[ 
                                      if (states['sensor.compteur_presence_sejour'].state == 1 && states['binary_sensor.presence_bureau_fp2'].state == "on")
                                        return "mdi:desk"
                                      if (states['sensor.compteur_presence_sejour'].state == 1 && states['binary_sensor.presence_salon_fp2'].state == "on")
                                        return "mdi:television"
                                      if (states['sensor.compteur_presence_sejour'].state == 1 && states['binary_sensor.presence_canape_fp2'].state == "on")
                                        return "mdi:sofa"
                                      if (states['sensor.compteur_presence_sejour'].state == 1 && states['binary_sensor.presence_sam_fp2'].state == "on")
                                        return "mdi:silverware"                
                                      return ""
                                    ]]]
                                - type: custom:button-card
                                  entity: binary_sensor.porte_salle_a_manger
                                  template:
                                    - sub_button
                                    - sub_button_state
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Séjour
                      - type: custom:button-card
                        entity: light.entree_et_couloir
                        variables:
                          var_label: |
                            [[[ 
                              if (states['sensor.temp_couloir_rdc'].state == 'unavailable')
                                return " ?"
                              if (states['light.entree_et_couloir'].state == 'on')
                                return states['sensor.temp_couloir_arrondie'].state +"° / "         
                              return states['sensor.temp_couloir_arrondie'].state+"°"
                            ]]]
                          temp: sensor.temp_couloir_rdc
                          temp_state: >
                            [[[ return
                            states['sensor.temp_couloir_rdc'].state]]]  
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_graph
                        name: Entrée
                        icon: |
                          [[[
                              if (states['sensor.compteur_entree'].state == 1 && states['light.aqara_hub_54e1'].state == 'on' )
                              return 'mdi:alarm-light';
                              if (states['sensor.compteur_entree'].state == 1 && states['light.veranda'].state == 'on' )
                              return 'mdi:outdoor-lamp';
                            return 'phu:rooms-hallway';
                          ]]]
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_entree'].state )
                            ]]]
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: camera.camera_entree
                                  icon: mdi:cctv
                                  template:
                                    - sub_button
                                  styles:
                                    icon:
                                      - color: var(--icon-off)
                                - type: custom:button-card
                                  entity: lock.serrure_entree
                                  template:
                                    - sub_button
                                    - sub_button_state
                                  tap_action:
                                    action: more-info
                                  double_tap_action:
                                    action: call-service
                                    service: script.entree_serrure_toggle
                                    service_data: null
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_couloir
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: binary_sensor.porte_entree
                                  template:
                                    - sub_button
                                    - sub_button_state
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Entrée
                      - type: custom:button-card
                        label: |
                          [[[ 
                            if (states['sensor.temp_cuisine'].state == 'unavailable')
                              return " ?"
                            return states['sensor.temp_cuisine_arrondie'].state+"°"
                          ]]]
                        variables:
                          temp: sensor.temp_cuisine
                          temp_state: |
                            [[[ return states['sensor.temp_cuisine'].state]]]  
                        template:
                          - base
                          - base_high
                          - room_card_graph
                          - room_card
                        icon: phu:rooms-kitchen
                        name: Cuisine
                        tap_action:
                          action: more-info
                        custom_fields:
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: media_player.la_cuisine
                                  icon: mdi:speaker
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: switch.lave_vaisselle_power
                                  icon: phu:rooms-dining
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: binary_sensor.porte_cuisine
                                  template:
                                    - sub_button
                                    - sub_button_state
                      - type: custom:button-card
                        variables:
                          var_label: |
                            [[[
                              if (entity.state == "on")
                                return ''
                              return 'Éteint '
                            ]]]
                          temp: |
                            [[[ 
                              return "null"
                            ]]]
                          temp.state: |
                            [[[ return "null"]]]
                        entity: light.lavabo
                        template:
                          - base
                          - base_high
                          - room_card
                        name: Lavabo
                        icon: phu:rooms-toilet
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_wc'].state ) ]]]
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_salle_d_eau
                                  template:
                                    - sub_button
                                    - sub_button_state
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Lavabo
                      - type: custom:button-card
                        entity: light.parents
                        variables:
                          var_label: |
                            [[[ 
                              if (states['sensor.temp_parents'].state == 'unavailable')
                                return " ?"
                              if (states['light.parents'].state == 'on')
                                return states['sensor.temp_parents_arrondie'].state +"° / "         
                              return states['sensor.temp_parents_arrondie'].state+"°"
                            ]]]
                          temp: sensor.temp_parents
                          temp_state: |
                            [[[ return states['sensor.temp_parents'].state]]]  
                        name: Parents
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_graph
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_parents'].state )
                            ]]]
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: switch.moustique_parents
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: media_player.chambre_des_parents
                                  icon: mdi:speaker
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: switch.tele_des_parents
                                  icon: mdi:television
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: binary_sensor.porte_chambre_parents
                                  template:
                                    - sub_button
                                    - sub_button_state
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Parents
                      - type: custom:button-card
                        entity: light.cagibi
                        variables:
                          var_label: |
                            [[[ 
                              if (states['sensor.sonde_garage_temperature'].state == 'unavailable')
                                return " ?"
                              if (states['light.cagibi'].state == 'on')
                                return states['sensor.sonde_garage_temperature'].state +"° / "         
                              return states['sensor.sonde_garage_temperature'].state+"°"
                            ]]]
                          temp: sensor.sonde_garage_temperature
                          temp_state: >
                            [[[ return
                            states['sensor.sonde_garage_temperature'].state]]]  
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_graph
                        name: Garage
                        icon: mdi:car
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Garage
                        custom_fields:
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: lock.garage
                                  template:
                                    - sub_button
                                    - sub_button_state
                                  tap_action:
                                    action: more-info
                                  double_tap_action:
                                    action: call-service
                                    service: script.garage_serrure_toggle
                                    service_data: null
                                - type: custom:button-card
                                  entity: group.portes_garage
                                  template:
                                    - sub_button
                                    - sub_button_state
                                  icon: |
                                    [[[ 
                                      if (states['binary_sensor.porte_cagibi'].state == 'on' && states['binary_sensor.porte_garage'].state == 'on')
                                        return "mdi:door-open"
                                      if (states['binary_sensor.porte_cagibi'].state == 'on' && states['binary_sensor.porte_garage'].state == 'off')
                                        return "mdi:door-open"
                                      if (states['binary_sensor.porte_cagibi'].state == 'off' && states['binary_sensor.porte_garage'].state == 'on')
                                        return "mdi:garage-open"
                                      return "mdi:door-closed"
                                    ]]]
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_garage
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: media_player.le_garage
                                  icon: mdi:speaker
                                  template:
                                    - sub_button
                                    - sub_button_state
                    columns: 2
                    square: false
                  - type: custom:button-card
                    template:
                      - title_card
                    name: |
                      [[[ return "Etage" ]]]
                  - type: grid
                    cards:
                      - type: custom:button-card
                        entity: light.tom
                        name: Tom
                        variables:
                          var_label: |
                            [[[ 
                              if (states['sensor.temp_tom'].state == 'unavailable')
                                return " ?"
                              if (states['light.tom'].state == 'on')
                                return states['sensor.temp_tom_arrondie'].state +"° / "         
                              return states['sensor.temp_tom_arrondie'].state+"°"
                            ]]]
                          temp: sensor.temp_tom
                          temp_state: |
                            [[[ return states['sensor.temp_tom'].state]]]  
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_graph
                        icon: |
                          [[[
                            if (states['sensor.compteur_tom'].state == 1 && states['light.lampe_de_bureau_tom'].state == 'on' )
                              return 'mdi:desk-lamp';
                            return 'mdi:bat';
                          ]]] 
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_tom'].state ) ]]]
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: switch.moustique_tom
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: media_player.tom
                                  icon: mdi:speaker
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_tom
                                  template:
                                    - sub_button
                                    - sub_button_state
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Tom
                      - type: custom:button-card
                        entity: light.manon_et_leane
                        name: Manon Lélé
                        icon: mdi:death-star-variant
                        variables:
                          var_label: |
                            [[[ 
                              if (states['sensor.temp_manon'].state == 'unavailable')
                                return " ?"
                              if (states['light.manon_et_leane'].state == 'on')
                                return states['sensor.temp_manon_arrondie'].state +"° / "         
                              return states['sensor.temp_manon_arrondie'].state+"°"
                            ]]]
                          temp: sensor.temp_manon
                          temp_state: |
                            [[[ return states['sensor.temp_manon'].state]]]
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_graph
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_manon'].state )
                            ]]]
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: switch.moustique_manon
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: media_player.chambre_de_manon_et_leane
                                  icon: mdi:speaker
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_manon
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_leane
                                  template:
                                    - sub_button
                                    - sub_button_state
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Manon Léane
                      - type: custom:button-card
                        entity: light.nina
                        name: Nina
                        icon: |
                          [[[
                            if (states['sensor.compteur_nina'].state == 1 && states['light.lampe_de_bureau_nina'].state == 'on' )
                              return 'mdi:desk-lamp';
                            return 'mdi:owl';
                          ]]]
                        variables:
                          var_label: |
                            [[[ 
                              if (states['sensor.temp_nina'].state == 'unavailable')
                                return " ?"
                              if (states['light.nina'].state == 'on')
                                return states['sensor.temp_nina_arrondie'].state +"° / "         
                              return states['sensor.temp_nina_arrondie'].state+"°"
                            ]]]
                          temp: sensor.temp_nina
                          temp_state: |
                            [[[ return states['sensor.temp_nina'].state]]]
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_graph
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_nina'].state )
                            ]]]
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: switch.moustique_nina
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: media_player.nina
                                  icon: mdi:speaker
                                  template:
                                    - sub_button
                                    - sub_button_state
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_nina
                                  template:
                                    - sub_button
                                    - sub_button_state
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Nina
                      - type: custom:button-card
                        entity: switch.radiateur
                        name: S. de bain
                        icon: phu:rooms-bathroom
                        label: |
                          [[[
                              if (states['sensor.temp_salle_de_bain'].state == 'unavailable')
                                return " ?"
                              return states['sensor.temp_salle_de_bain'].state+"°"
                          ]]]
                        variables:
                          temp: sensor.temp_salle_de_bain
                          temp_state: >
                            [[[ return
                            states['sensor.temp_salle_de_bain'].state]]]
                        template:
                          - base
                          - base_high
                          - room_card
                          - room_card_graph
                        custom_fields:
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: media_player.la_salle_de_bain
                                  icon: mdi:speaker
                                  template:
                                    - sub_button
                                    - sub_button_state
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/SDB
                      - type: custom:button-card
                        entity: light.escalier
                        name: Escalier
                        icon: mdi:stairs
                        variables:
                          var_label: |
                            [[[
                              if (entity.state == "on")
                                return ""
                              return 'Éteint '
                            ]]]
                          temp: |
                            [[[ 
                              return "null"
                            ]]]
                        template:
                          - base
                          - base_high
                          - room_card
                        custom_fields:
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_escalier
                                  template:
                                    - sub_button
                                    - sub_button_state
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Escalier
                      - type: custom:button-card
                        entity: light.palier
                        name: Palier
                        icon: phu:rooms-attic
                        variables:
                          var_label: |
                            [[[
                              if (entity.state == "on")
                                return ""
                              return 'Éteint '
                            ]]]
                          temp: |
                            [[[ 
                              return "null"
                            ]]]
                        template:
                          - base
                          - base_high
                          - room_card
                        custom_fields:
                          bouton:
                            card:
                              type: horizontal-stack
                              cards:
                                - type: custom:button-card
                                  entity: binary_sensor.mouv_palier
                                  template:
                                    - sub_button
                                    - sub_button_state
                        double_tap_action:
                          action: toggle
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Escalier
                    columns: 2
                    square: false
                type: vertical-stack
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - cards:
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Multimédia" ]]]
              - type: grid
                cards:
                  - type: custom:button-card
                    template:
                      - tv_sejour_card
                  - type: custom:button-card
                    template:
                      - tv_parents_card
                columns: 2
                square: false
              - type: grid
                cards:
                  - type: custom:button-card
                    entity: input_boolean.musique
                    name: RDC
                    icon: mdi:speaker
                    template:
                      - base
                      - multimedia_card
                    custom_fields:
                      cartes:
                        card:
                          type: custom:swipe-card
                          parameters:
                            fadeEffect:
                              crossFade: true
                            autoplay:
                              delay: 3000
                            speed: 2000
                          cards:
                            - type: conditional
                              conditions:
                                - entity: media_player.partout
                                  state: playing
                              card:
                                type: custom:mini-media-player
                                entity: media_player.partout
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: false
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                            - type: conditional
                              conditions:
                                - entity: media_player.sejour
                                  state: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: false
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.sejour
                            - type: conditional
                              conditions:
                                - entity: media_player.la_cuisine
                                  state: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: false
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.la_cuisine
                            - type: conditional
                              conditions:
                                - entity: media_player.le_garage
                                  state: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: false
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.le_garage
                            - type: conditional
                              conditions:
                                - entity: media_player.chambre_des_parents
                                  state: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: false
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.chambre_des_parents
                            - type: conditional
                              conditions:
                                - entity: media_player.en_bas
                                  state: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: false
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.en_bas
                          columns: 2
                  - type: custom:button-card
                    entity: input_boolean.musique
                    name: Etage
                    icon: mdi:speaker
                    template:
                      - base
                      - multimedia_card
                    styles:
                      custom_fields:
                        notification:
                          - background-color: |
                              [[[
                                if (states['sensor.compteur_musique_etage'].state == 0)
                                  return 'rgba(0,191,205,0)';
                               return 'rgba(0,0,0,0.4)';
                              ]]]
                          - color: |
                              [[[
                                if (states['sensor.compteur_musique_etage'].state == 0)
                                  return 'transparent';
                               return 'var(--text-on)';
                              ]]]
                      notification: >
                        [[[ return
                        Math.floor(states['sensor.compteur_musique_etage'].state
                        ) ]]]
                    custom_fields:
                      cartes:
                        card:
                          type: custom:swipe-card
                          parameters:
                            fadeEffect:
                              crossFade: true
                            autoplay:
                              delay: 3000
                            speed: 2000
                          cards:
                            - type: conditional
                              conditions:
                                - entity: media_player.la_salle_de_bain
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                                - entity: media_player.etage
                                  state_not: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: false
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.la_salle_de_bain
                            - type: conditional
                              conditions:
                                - entity: media_player.leane
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                                - entity: media_player.etage
                                  state_not: playing
                                - entity: media_player.chambre_de_manon_et_leane
                                  state_not: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: false
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.leane
                            - type: conditional
                              conditions:
                                - entity: media_player.tom
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                                - entity: media_player.etage
                                  state_not: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: false
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.tom
                            - type: conditional
                              conditions:
                                - entity: media_player.nina
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                                - entity: media_player.etage
                                  state_not: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: false
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.nina
                            - type: conditional
                              conditions:
                                - entity: media_player.manon
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                                - entity: media_player.etage
                                  state_not: playing
                                - entity: media_player.chambre_de_manon_et_leane
                                  state_not: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: false
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.manon
                            - type: conditional
                              conditions:
                                - entity: media_player.etage
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: false
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.etage
                            - type: conditional
                              conditions:
                                - entity: media_player.chambre_de_manon_et_leane
                                  state: playing
                                - entity: media_player.partout
                                  state_not: playing
                              card:
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: false
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
                                type: custom:mini-media-player
                                entity: media_player.chambre_de_manon_et_leane
                          columns: 2
                columns: 2
                square: false
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils" ]]]
              - type: grid
                cards:
                  - type: custom:button-card
                    entity: vacuum.wall_e
                    icon: phu:roborock
                    show_state: false
                    show_label: true
                    template:
                      - base
                      - base_high
                      - style
                      - card_state
                    name: Wall-E
                    label: |
                      [[[ return states['sensor.walle_state'].state   ]]]
                    styles:
                      icon:
                        - animation: |
                            [[[
                              if (entity.state == 'cleaning')
                              return 'rotating 4s ease infinite'
                            ]]]
                    custom_fields:
                      jauge-cercle:
                        card:
                          type: custom:hatc-gauge-card
                          entity: sensor.walle_batterie
                          title:
                            name: false
                            icon: false
                            text-align: center
                            text-color: red
                            font-size: 28px
                          gauge:
                            icon: false
                            font-size: 11px
                            text-color: severity
                            max_value: 100
                            friendly_name: false
                            unit_of_measurement: false
                            severity:
                              - color: var(--text-off)
                              - color: rgb(180, 70, 70)
                                from: 0
                                to: 40
                      bouton:
                        card:
                          type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              entity: script.aspi_walle_demarrage
                              template:
                                - sub_button
                                - style
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.walle_state'].state == "Nettoyage")
                                          return 'var(--color-icon-blue)';
                                        return "var(--icon-off)"
                                      ]]]
                                card:
                                  - background-color: |
                                      [[[
                                        if (states['sensor.walle_state'].state == "Nettoyage")
                                          return 'var(--color-card-blue)';
                                        return ""
                                      ]]] 
                            - type: custom:button-card
                              entity: script.aspi_pause
                              template:
                                - sub_button
                                - style
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.walle_state'].state == "Pause")
                                          return 'var(--color-icon-red)';
                                        return "var(--icon-off)"
                                      ]]]
                                card:
                                  - background-color: |
                                      [[[
                                        if (states['sensor.walle_state'].state == "Pause")
                                          return 'var(--color-card-red)';
                                        return ""
                                      ]]]                   
                            - type: custom:button-card
                              entity: script.sortir_l_aspi
                              template:
                                - sub_button
                                - style
                            - type: custom:button-card
                              entity: vacuum.wall_e
                              icon: mdi:map-marker
                              template:
                                - sub_button
                                - style
                              tap_action:
                                action: call-service
                                service: vacuum.locate
                                service_data:
                                  entity_id: vacuum.wall_e
                            - type: custom:button-card
                              entity: script.aspi_retour_base
                              template:
                                - sub_button
                                - style
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.walle_state'].state == "Base")
                                          return 'var(--color-icon-blue)';
                                        return "var(--icon-off)"
                                      ]]]
                                card:
                                  - background-color: |
                                      [[[
                                        if (states['sensor.walle_state'].state == "Base")
                                          return 'var(--color-card-blue)';
                                        return ""
                                      ]]]                  
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Aspis
                  - type: custom:button-card
                    entity: vacuum.r2d2
                    icon: phu:roborock
                    show_state: false
                    show_label: true
                    template:
                      - base
                      - base_high
                      - card_state
                      - style
                    name: R2D2
                    label: |
                      [[[ return states['sensor.r2d2_state'].state  ]]]
                    styles:
                      icon:
                        - animation: |
                            [[[
                              if (entity.state == 'cleaning')
                              return 'rotating 4s ease infinite'
                            ]]]
                    custom_fields:
                      jauge-cercle:
                        card:
                          type: custom:hatc-gauge-card
                          entity: sensor.r2d2_batterie
                          title:
                            name: false
                            icon: false
                            text-align: center
                            text-color: red
                            font-size: 28px
                          gauge:
                            icon: false
                            font-size: 11px
                            text-color: severity
                            max_value: 100
                            friendly_name: false
                            unit_of_measurement: false
                            severity:
                              - color: var(--text-off)
                              - color: rgb(180, 70, 70)
                                from: 0
                                to: 40
                      bouton:
                        card:
                          type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              entity: script.aspi_r2d2_demarrage
                              template:
                                - sub_button
                                - style
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.r2d2_state'].state == "Nettoyage")
                                          return 'var(--color-icon-blue)';
                                        if (states['sensor.r2d2_state'].state == "Retour")
                                          return "var(--color-icon-blue)"
                                        return "var(--icon-off)"
                                      ]]]
                                card:
                                  - background-color: |
                                      [[[
                                        if (states['sensor.r2d2_state'].state == "Nettoyage")
                                          return 'var(--color-img-cell-blue)';
                                        return ""
                                      ]]]                  
                            - type: custom:button-card
                              entity: script.aspi_pause
                              template:
                                - sub_button
                                - style
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.r2d2_state'].state == "Pause")
                                          return 'var(--color-icon-red)';
                                        return "var(--icon-off)"
                                      ]]]
                                card:
                                  - background-color: |
                                      [[[
                                        if (states['sensor.r2d2_state'].state == "Pause")
                                          return 'var(--color-img-cell-red)';
                                        return ""
                                      ]]]                    
                            - type: custom:button-card
                              entity: vacuum.r2d2
                              icon: mdi:map-marker
                              template:
                                - sub_button
                                - style
                              tap_action:
                                action: call-service
                                service: vacuum.locate
                                service_data:
                                  entity_id: vacuum.r2d2
                            - type: custom:button-card
                              entity: script.aspi_retour_base
                              template:
                                - sub_button
                                - style
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.r2d2_state'].state == "Base")
                                          return 'var(--color-icon-blue)';
                                        return "var(--icon-off)"
                                      ]]] 
                                card:
                                  - background-color: |
                                      [[[
                                        if (states['sensor.r2d2_state'].state == "Base")
                                          return 'var(--color-card-blue)';
                                        return ""
                                      ]]] 
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Aspis
                  - type: custom:button-card
                    template:
                      - dishwasher_card
                  - type: custom:button-card
                    template:
                      - washing_machine_card
                  - type: custom:button-card
                    entity: input_boolean.boite_aux_lettres_ouverte
                    name: Courrier
                    icon: mdi:email
                    label: |
                      [[[
                        if( states['input_boolean.boite_aux_lettres_ouverte'].state == "on" && states['input_boolean.courrier_releve'].state == "on")
                          return "Relevé à "+states['sensor.courrier_releve'].state
                        if( states['input_boolean.boite_aux_lettres_ouverte'].state == "off" && states['input_boolean.courrier_releve'].state == "on")
                          return "Relevé à "+states['sensor.courrier_releve'].state
                        if( states['input_boolean.boite_aux_lettres_ouverte'].state == "on" && states['input_boolean.courrier_releve'].state == "off")
                          return "Ouvert à "+states['sensor.boite_aux_lettres_ouvertee'].state
                        return "Non relevé"
                      ]]]
                    template:
                      - base
                      - base_high
                      - style
                      - card_state
                    custom_fields:
                      bouton:
                        card:
                          type: horizontal-stack
                          cards:
                            - type: custom:button-card
                              entity: input_boolean.courrier_releve
                              template:
                                - sub_button
                                - sub_button_state
                              icon: |
                                [[[
                                  if( states['input_boolean.courrier_releve'].state == "on")
                                    return "mdi:check"
                                  return "mdi:toggle-switch-off"
                                ]]]
                              styles:
                                icon:
                                  - width: 20px
                              tap_action:
                                action: toggle
                            - type: custom:button-card
                              template:
                                - sub_button
                              icon: mdi:door-closed
                              tap_action:
                                action: more-info
                  - type: custom:button-card
                    template:
                      - printer_card
                columns: 2
                square: false
            type: vertical-stack
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - cards:
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Personnes" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    template:
                      - person_card_aurel
                  - type: custom:button-card
                    template:
                      - person_card_alex
                  - type: custom:button-card
                    template:
                      - person_card_tom
                  - type: custom:button-card
                    template:
                      - person_card_manon
                  - type: custom:button-card
                    template:
                      - person_card_leane
                  - type: custom:button-card
                    template:
                      - person_card_nina
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Relevés" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: sensor.maj
                    name: Système
                    icon: mdi:raspberry-pi
                    template:
                      - base
                      - system_card
                    label: |
                      [[[
                        if (states["sensor.maj"].state == "Aucune mise à jour") 
                          return 'A jour'
                        return 'Mettre à jour'
                      ]]]
                    styles:
                      img_cell:
                        - background-color: |
                            [[[
                              if (states["sensor.maj"].state == "Aucune mise à jour") 
                                return 'var(--img-cell-off)'
                              return 'var(--color-img-cell-blue)'
                            ]]]
                      icon:
                        - color: |
                            [[[
                              if (states["sensor.maj"].state == "Aucune mise à jour") 
                                return 'var(--icon-off)'
                              return 'var(--color-icon-blue)'
                            ]]]
                      card:
                        - background-color: |
                            [[[
                              if (states["sensor.maj"].state == "Aucune mise à jour") 
                                return ''
                              return 'var(--color-card-blue)'
                            ]]]        
                    custom_fields:
                      info:
                        card:
                          type: grid
                          square: false
                          columns: 1
                          cards:
                            - type: custom:button-card
                              entity: sensor.cpu_temperature
                              name: Temp
                              template:
                                - system_card_info
                                - system_card_info_state
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states["sensor.cpu_temperature"].state < 70) 
                                          return 'var(--icon-off)'
                                        return 'var(--color-icon-red)'
                                      ]]]
                            - type: custom:button-card
                              entity: sensor.memory_use_percent
                              name: Ram
                              template:
                                - system_card_info
                                - system_card_info_state
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states["sensor.memory_use_percent"].state < 70) 
                                          return 'var(--icon-off)'
                                        return 'var(--color-icon-red)'
                                      ]]]
                            - type: custom:button-card
                              entity: sensor.processor_use_percent
                              name: Cpu
                              template:
                                - system_card_info
                                - system_card_info_state
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states["sensor.processor_use_percent"].state < 70) 
                                          return 'var(--icon-off)'
                                        return 'var(--color-icon-red)'
                                      ]]]              
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(200,200,200,0.5)
                              entity: sensor.cpu_temperature
                          height: 100
                          line_width: 4
                          lower_bound: 20
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                      reload:
                        card:
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: script.redemarrer_le_pont_tenda_nova
                              show_name: false
                              styles:
                                icon:
                                  - color: var(--icon-off)
                                  - width: 70%
                                card:
                                  - background: transparent
                                  - 'border-color:': transparent
                              tap_action:
                                confirmation:
                                  text: '[[[ return `Redémarrer le pont ? ` ]]]'
                                action: call-service
                                service: script.redemarrer_le_pont_tenda_nova
                                service_data: null
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/systeme
                  - type: custom:button-card
                    entity: sensor.myenedis_09xxxxxxxxx5420
                    name: Électricité
                    icon: mdi:flash
                    template:
                      - base
                      - system_card
                    show_state: false
                    label: |
                      [[[
                        if (states["sensor.electricite_conso_veille"].state == "-1.0" ) 
                          return 'En attente'
                        if (states["sensor.electricite_conso_veille"].state == "unavailable" ) 
                          return 'En attente'
                        return states["sensor.electricite_conso_kwh_arrondie"].state +" kWh"
                      ]]]
                    styles:
                      img_cell:
                        - background-color: |
                            [[[
                              if (states["sensor.electricite_conso_veille"].state == "-1.0") return 'var(--img-cell-off)'
                              if (states["sensor.electricite_cout_jour_avec_abo"].state < 3) return 'var(--color-img-cell-blue)';
                              if (states["sensor.electricite_cout_jour_avec_abo"].state >= 3 && states["sensor.electricite_cout_jour_avec_abo"].state < 4) return 'var(--color-img-cell-red)';
                              else return 'var(--color-img-cell-red)';
                            ]]]
                      icon:
                        - color: |
                            [[[
                              if (states["sensor.electricite_conso_veille"].state == "-1.0") return 'var(--icon-off)'
                              if (states["sensor.electricite_cout_jour_avec_abo"].state < 3) return 'var(--color-icon-blue)';
                              if (states["sensor.electricite_cout_jour_avec_abo"].state >= 3 && states["sensor.electricite_cout_jour_avec_abo"].state < 4) return 'var(--color-icon-red)';
                              else return 'var(--color-icon-red)';
                            ]]]
                      card:
                        - background-color: |
                            [[[
                              if (states["sensor.electricite_conso_veille"].state == "-1.0") return ''
                              if (states["sensor.electricite_cout_jour_avec_abo"].state < 3) return 'var(--color-card-blue)';
                              if (states["sensor.electricite_cout_jour_avec_abo"].state >= 3 && states["sensor.electricite_cout_jour_avec_abo"].state < 4) return 'var(--color-card-red)';
                              else return 'var(--color-icon-red)';
                            ]]]        
                    state:
                      - value: unavailable
                        styles:
                          label:
                            - color: red
                          state:
                            - color: red
                    custom_fields:
                      info:
                        card:
                          type: grid
                          square: false
                          columns: 1
                          cards:
                            - type: custom:button-card
                              entity: sensor.electricite_cout_semaine_avec_abo
                              name: Semaine
                              units: €
                              template:
                                - system_card_info
                              icon: mdi:view-week
                            - type: custom:button-card
                              entity: sensor.electricite_cout_mois_avec_abo
                              name: Mois
                              units: €
                              template:
                                - system_card_info
                              icon: mdi:calendar-month
                            - type: custom:button-card
                              entity: sensor.electricite_cout_annee_avec_abo
                              name: Année
                              units: €
                              template:
                                - system_card_info
                              icon: mdi:calendar
                      reload:
                        card:
                          type: grid
                          cards:
                            - type: custom:button-card
                              entity: script.rechargement_integration_myenedis
                              icon: mdi:reload-alert
                              show_name: false
                              styles:
                                icon:
                                  - color: var(--icon-off)
                                  - width: 70%
                                card:
                                  - background: transparent
                                  - 'border-color:': transparent
                      graph_bar:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - entity: sensor.myenedis_09xxxxxxxxx5420
                              color: rgba(0,191,255,0.4)
                          group_by: date
                          height: 100
                          hours_to_show: 240
                          points_per_hour: 1
                          min_bound_range: 10
                          font_size: 40
                          align_state: center
                          show:
                            graph: bar
                            fill: false
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: true
                            labels: false
                          style:
                            .: |
                              ha-card {
                                  font-family: Avenir
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Energie
                  - type: custom:button-card
                    entity: sensor.temp_maison
                    name: Climat
                    icon: mdi:home-thermometer
                    template:
                      - base
                      - system_card
                      - temperature_state
                    label: |
                      [[[
                        return states["sensor.temp_maison"].state+" °C"
                      ]]]
                    custom_fields:
                      info:
                        card:
                          type: grid
                          square: false
                          columns: 1
                          cards:
                            - type: custom:button-card
                              entity: sensor.temp_sejour_arrondie
                              name: Séjour
                              icon: mdi:sofa
                              template:
                                - system_card_info
                                - system_card_info_temp_state
                            - type: custom:button-card
                              entity: sensor.temp_moyenne_etage
                              icon: mdi:bed
                              name: Etage
                              template:
                                - system_card_info
                                - system_card_info_temp_state
                            - type: custom:button-card
                              entity: sensor.qualite_air_pourcentage
                              icon: mdi:blur
                              name: Air
                              template:
                                - system_card_info
                              styles:
                                icon:
                                  - color: |
                                      [[[
                                        if (states['sensor.qualite_air_pourcentage'].state >= 96.1 && states['sensor.qualite_air_pourcentage'].state <= 98.7)
                                          return "var(--color-icon-blue)" 
                                        if (states['sensor.qualite_air_pourcentage'].state >= 88.1 && states['sensor.qualite_air_pourcentage'].state <= 96)
                                          return "var(--color-icon-orange)" 
                                        if (states['sensor.qualite_air_pourcentage'].state >= 60.1 && states['sensor.qualite_air_pourcentage'].state <= 88)
                                          return "var(--color-icon-orange)" 
                                        if (states['sensor.qualite_air_pourcentage'].state >= 0 && states['sensor.qualite_air_pourcentage'].state <= 60)
                                          return "var(--color-icon-red)" 
                                        return "" 
                                      ]]]           
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(249,167,62, 0.5)
                              entity: sensor.temp_moyenne_rdc
                          height: 100
                          line_width: 4
                          lower_bound: 20
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Temp
                  - type: custom:button-card
                    entity: sensor.plante_citro_temp
                    name: Plantes
                    icon: mdi:flower-tulip
                    template:
                      - base
                      - system_card
                    label: |
                      [[[
                        if (states['sensor.plante_citro_humidite'].state < 2 || states['sensor.plante_hum_pied_elephant'].state < 2 || states['sensor.plante_hum_dracaena'].state < 2)  
                          return "Besoin d'eau !"
                        return "RAS"
                      ]]]
                    styles:
                      img_cell:
                        - background-color: |
                            [[[
                              if (states['sensor.plante_citro_humidite'].state < 2 || states['sensor.plante_hum_pied_elephant'].state < 2 || states['sensor.plante_hum_dracaena'].state < 2) return 'var(--color-img-cell-red)'
                              else return 'var(--img-cell-off)';
                            ]]]
                      card:
                        - background-color: |
                            [[[
                              if (states['sensor.plante_citro_humidite'].state < 2 || states['sensor.plante_hum_pied_elephant'].state < 2 || states['sensor.plante_hum_dracaena'].state < 2) return 'var(--color-card-red)'
                              else return '';
                            ]]]        
                      icon:
                        - color: |
                            [[[
                              if (states['sensor.plante_citro_humidite'].state < 2 || states['sensor.plante_hum_pied_elephant'].state < 2 || states['sensor.plante_hum_dracaena'].state < 2) return 'var(--color-icon-red)'
                              else return 'var(--icon-off)';
                            ]]]
                        - animation: |
                            [[[
                              if (states['sensor.plante_citro_humidite'].state < 1 || states['sensor.plante_hum_pied_elephant'].state < 1 || states['sensor.plante_hum_dracaena'].state < 1) return 'blink 1s ease infinite'
                              else return 'var(--icon-off)';
                            ]]]
                    custom_fields:
                      info:
                        card:
                          type: grid
                          square: false
                          columns: 1
                          cards:
                            - type: custom:button-card
                              entity: sensor.plante_hum_dracaena
                              units: '%'
                              name: Dracaena
                              icon: mdi:water
                              template:
                                - system_card_info
                                - system_card_plant_state
                            - type: custom:button-card
                              entity: sensor.plante_hum_pied_elephant
                              name: Eleph
                              units: '%'
                              icon: mdi:water
                              template:
                                - system_card_info
                                - system_card_plant_state
                            - type: custom:button-card
                              entity: sensor.plante_citro_humidite
                              name: Citronnier
                              icon: mdi:water
                              units: '%'
                              template:
                                - system_card_info
                                - system_card_plant_state
                      graph:
                        card:
                          type: custom:mini-graph-card
                          entities:
                            - color: rgba(30,144,255,0.8)
                              entity: sensor.plante_citro_humidite
                          height: 100
                          line_width: 4
                          lower_bound: 20
                          points_per_hour: 1
                          hours_to_show: 24
                          show:
                            fill: fade
                            icon: false
                            name: false
                            state: false
                            legend: false
                            points: false
                            labels: false
                    tap_action:
                      action: navigate
                      navigation_path: /lovelace/Plantes
            type: vertical-stack
        layout:
          width: 280
  - title: Pronote
    path: pronote
    icon: mdi:account-school
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    badges: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            entities:
              - type: custom:button-card
                template:
                  - title_card
                name: >
                  [[[ return "Tom -
                  "+states['sensor.pronote_NAME_tom'].attributes.class_name ]]]
                styles:
                  name:
                    - justify-self: null
                    - font-size: 19px
                    - font-weight: 600
                  label:
                    - justify-self: null
                    - font-size: 14px
                    - color: var(--text-off)
                  custom_fields:
                    entity_picture:
                      - position: absolute
                      - width: 35%
                label: >
                  [[[ return "Aujourd'hui : " +
                  states['sensor.journee_de_cours_de_tom_aujourd_hui'].state+
                  "<br>" + "Demain : " +
                  states['sensor.journee_de_cours_de_tom_demain'].state]]]
                custom_fields:
                  entity_picture:
                    card:
                      type: custom:button-card
                      entity: person.tom
                      template:
                        - no_style
                      show_name: false
                      show_state: false
                      show_entity_picture: true
                      styles:
                        entity_picture:
                          - border-radius: 50%
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                    border-radius: 20px !important;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 0px 5px 0px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_tom_timetable_period
                            state_not: unavailable
                        card:
                          type: markdown
                          content: >-
                            <div>Emploi du temps</div> {% set months =
                            ["Janvier","Février", "Mars", "Avril", "Mai",
                            "Juin", "Juillet", "Août", "Septembre", "Octobre",
                            "Novembre", "Décembre"] %}

                            {% set days = ["Lundi", "Mardi", "Mercredi",
                            "Jeudi", "Vendredi", "Samedi", "Dimanche"] %}

                            {% set weeknum = now().strftime("%W") %} 


                            <table>
                              {% set items = state_attr('sensor.pronote_NAME_tom_timetable_period','lessons') %}
                              <tbody>
                                {%- for i in range(0, items | count, 1) -%}
                                  {% if (items[i].start_at - now().today()).days > 4 %}
                                    {% continue %}
                                  {% endif %}

                                  {%- if i == 0 -%}
                                    <tr><td colspan="5"><b>{{ days[items[i].start_at.strftime('%w')| int - 1] }} {{ items[i].start_at.strftime("%d") }}</b></td></tr>
                                  {%- endif -%}

                                  {%- if items[i].start_at.strftime("%F") > items[i-1].start_at.strftime("%F") -%} 
                                    <tr><td colspan="5"><b>{{ days[items[i].start_at.strftime('%w')| int - 1] }} {{ items[i].start_at.strftime("%d") }}</b></td></tr>
                                  {%- endif -%}

                                  <tr>
                                  {%- if items[i].canceled != True -%}
                                      <td>{{ items[i].start_time }}<br />{{ items[i].end_time }}</td>
                                      <td>
                                        {%- if as_timestamp(items[i].end_at) | timestamp_local < as_timestamp(now()) | timestamp_local -%}
                                          <del>
                                        {%- endif -%}
                                        {%- if as_timestamp(items[i].start_at) | timestamp_local <= as_timestamp(now()) | timestamp_local and as_timestamp(items[i].end_at) | timestamp_local >= as_timestamp(now()) | timestamp_local -%}
                                          <mark></mark>
                                        {%- else -%}
                                          <span></span>
                                        {%- endif -%}
                                        {%- if as_timestamp(items[i].end_at) | timestamp_local < as_timestamp(now()) | timestamp_local -%}
                                          </del>
                                        {%- endif -%}
                                      </td>
                                      <td>{{ items[i].lesson }}<br /> <span>{{ items[i].classroom }}</td>
                                  {%- else -%}
                                    <td><del>{{ items[i].start_time }}<br />{{ items[i].end_time }}</del></td>
                                    <td><del><mark></mark></del></td>
                                    <td><del>{{ items[i].lesson }} <span>{{ items[i].status }}</span></del></td>
                                  {%- endif -%}
                                  </tr>
                               {% endfor %}
                             </tbody>
                            </table>
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px
                                }
                                ha-card ha-markdown.no-header {
                                  padding:05px
                                }
                              ha-markdown$: |
                                ha-markdown-element {
                                  display: inline-block;
                                  height: 300px;
                                  overflow-y: scroll;
                                  width: 100%;
                                }
                                @media only screen and (min-height: 600px) {
                                  ha-markdown-element {
                                    height: 400px;
                                  }
                                }
                                div {
                                  background-color: var(--card-background-color);
                                  border-radius: 30px;   
                                  padding: 10px;
                                  text-align: center;
                                  color: var(--title);
                                  font-weight:600;
                                  font-size: 15px;
                                  font-family: Avenir; 
                                }
                                table{
                                  border-spacing: 0px;
                                  font-size: 0.9em;
                                  font-family: Roboto;
                                  width: 100%;
                                  outline: 0px solid #393c3d;
                                  margin-top:5px;
                                }
                                caption {
                                  text-align: center;
                                  font-weight: bold;
                                  font-size: 1.2em;
                                }
                                td:first-of-type {
                                  width:;
                                }
                                td:nth-of-type(2)>span {
                                  display: block;
                                  background-color: lightgrey;
                                  border-radius: 40% / 10%;
                                  width: 0.5em;
                                  height: 3em;
                                  padding: 0px;
                                }
                                td:nth-of-type(2)>del>mark {
                                  display: block;
                                  background-color: #EC4B34;
                                  border-radius: 40% / 10%;
                                  width: 0.5em;
                                  height: 3em;
                                  padding: 0px;
                                }
                                td:nth-of-type(2)>del>span {
                                  display: none;
                                }
                                td:nth-of-type(2)>mark {
                                  display: block;
                                  background-color: #009767;
                                  border-radius: 40% / 10%;
                                  width: 0.5em;
                                  height: 3em;
                                  padding: 0px;
                                }
                                td:last-of-type {
                                  width: 90%;
                                }
                                td:last-of-type span {
                                  display: inline-block;
                                  padding: 0%;
                                  width: 97%;
                                  text-align: right;
                                }
                                td {
                                  padding: 5px 10px 5px 10px;
                                  margin-bottom: 3px;
                                  text-align: left;
                                  border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                  border-bottom: 0px solid #1c2020;
                                }
                                tr:nth-of-type(even) {
                                  background-color: rgb(54, 54, 54, 0.3);
                                }
                                tr:last-of-type {
                                  border-bottom: transparent;          }*
                                mark {
                                  background: #009767;
                                  color: #222627;
                                  border-radius: 5px;
                                  padding: 5px;
                                }
                                span {
                                  padding: 5px;
                                }
                                tr:nth-child(n+2) > td:nth-child(2) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_tom_evaluations
                            state_not: unavailable
                        card:
                          type: markdown
                          content: >-
                            <div>Evaluations</div> {% set items =
                            state_attr('sensor.pronote_NAME_tom_evaluations','evaluations')%}
                            <table width='100%'>
                              <tbody>
                              {% for i in range(0, items | count, 1) %}
                              <tr><td width='20%'>{{ items[i].date.strftime("%d-%m") }}</td><td width='60%'>{{ items[i].subject }}</td><td width='30%'>
                              {% set acquisitions = items[i].acquisitions %}
                              {% for j in range(0,acquisitions|count,1) %}
                              {% if acquisitions[j].level == 'Très bonne maîtrise' %}💚
                              {% elif acquisitions[j].level == 'Maîtrise satisfaisante' %}🟢
                              {% elif acquisitions[j].level == "Presque maîtrisé" %}🟡
                              {% elif acquisitions[j].level == "Début de maîtrise" %}🟡
                              {% elif acquisitions[j].level == 'Maîtrise fragile'  %}🟠
                              {% elif acquisitions[j].level == 'Maîtrise insuffisante'  %}🔴    
                              {% elif acquisitions[j].level == 'Absent'  %}❌
                              {% else %}?
                              {% endif %}{% endfor %}</td></tr>
                              {% endfor %}
                            </tbody> </table>
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px;
                                }
                                ha-card ha-markdown.no-header {
                                  padding: 05px;
                                }
                              ha-markdown$: |
                                div {
                                    background-color: var(--card-background-color);
                                    border-radius: 30px;   
                                    padding: 10px;
                                    text-align: center;
                                    color: var(--title);
                                    font-weight:600;
                                    font-size: 15px;
                                    font-family: Avenir;
                                }
                                table{
                                  border-collapse: collapse;
                                  font-weight:normal;
                                  font-size:1em;
                                  font-family: Roboto;
                                  width: auto;
                                  outline: 0px solid #393c3d;
                                  margin-top: 10px;
                                } caption {
                                    text-align: center;
                                    font-weight: bold;
                                    font-size: 1.2em;
                                } td {
                                    padding: 0px 5px 0px 5px;
                                    text-align: left;
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                    border-bottom: 0px solid #1c2020;
                                    line-height: 4px;
                                }
                                tr:nth-of-type(even) {
                                    background-color: rgb(54, 54, 54, 0.3);
                                }
                                tr:last-of-type {
                                    border-bottom: transparent;
                                }
                                mark {
                                    background: var(--color-blue);
                                    color: ##000000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    background: rgb(180, 70, 70);
                                    color: #00000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    padding: 5px;
                                }
                                tr:nth-child(n+2) > td:nth-child(2) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_tom_grades
                            state_not: unavailable
                        card:
                          type: markdown
                          content: |2-
                             <div>Notes
                             </div><table>
                              {% set items = state_attr('sensor.pronote_NAME_tom_grades','grades')%}
                              <tr>
                              <td><h4>Date<h3></td>
                              <td><h4>Cours</td>
                              <td><h4>Note</td>
                              <td><h4>Class</td>
                              <td><h4>Max</td>
                              <td><h4>Min</td>

                              </tr>
                              {% for i in range(0, items | count, 1) %}
                              <tr>    
                              <td>{{ items[i].date }}</td>
                              <td>{% if items[i].subject == "ANGLAIS LV1 > ANGLAIS LV1" %}ANGLAIS
                              {% elif items[i].subject == "NUMERIQUE SC.INFORM." %}NUM. SC.INFO
                              {% elif items[i].subject == "SC. ECONO.& SOCIALES" %}SC. ECO.& SOCIO.
                              {% elif items[i].subject == "MATHEMATIQUES" %}MATHS
                              {% elif items[i].subject == "HISTOIRE-GEOGRAPHIE" %}HIST-GEO
                              {% elif items[i].subject == "SCIENCES VIE & TERRE" %}SVT
                              {% elif items[i].subject == "ED.PHYSIQUE & SPORT." %}EPS
                              {% else %}{{ items[i].subject }}
                              {% endif %}</td>
                              <td>{% if items[i].grade == "Absent" %}❌{% else %}{{ items[i].grade_out_of }}{% endif %}</td>
                              <td>{{ items[i].class_average }}</td>
                              <td>{{ items[i].max }}</td>
                              <td>{{ items[i].min }}</td>
                             </tr>
                            {% endfor %}
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px
                                }
                                ha-card ha-markdown.no-header {
                                  padding: 05px
                                }
                              ha-markdown$: |
                                h1 {
                                    font-weight: normal;
                                    font-size: 24px;
                                }
                                div {
                                    background-color: var(--card-background-color);
                                    border-radius: 30px;   
                                    padding: 10px;
                                    text-align: center;
                                    color: var(--title);
                                    font-weight:600;
                                    font-size: 15px;
                                    font-family: Avenir;

                                }
                                table{
                                  border-collapse: collapse;
                                  font-weight:normal;
                                  font-size:1.em;
                                  font-family: Roboto;
                                  letter-spacing: -1px;
                                  width: auto;
                                  outline: 0px solid #393c3d;
                                  margin-top: 10px;
                                } caption {
                                    text-align: center;
                                    font-weight: bold;
                                    font-size: 1.2em;
                                } td {
                                    padding: 0px 5px 0px 5px;
                                    text-align: center;
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                    border-bottom: 0px solid #1c2020;
                                    line-height: 25px;
                                }
                                tr:nth-of-type(even) {
                                    background-color: rgb(54, 54, 54, 0.5);
                                }
                                tr:last-of-type {
                                    border-bottom: transparent;
                                }
                                mark {
                                    background: var(--color-blue);
                                    color: #222627;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    background: rgb(180, 70, 70);
                                    color: #00000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    padding: 5px;
                                }
                                tr:nth-child(n+2) > td:nth-child(2) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_tom_averages
                            state_not: unavailable
                        card:
                          type: markdown
                          content: |2-
                              <div>Moyennes</div><table>
                                {% set items = state_attr('sensor.pronote_NAME_tom_averages','averages')%}
                              <tr>
                              <td><h4>Matière<h3></td>
                              <td><h4>Moyenne élève</td>
                              <td><h4>Moyenne classe</td>
                              <td><h4>Min</td>
                              <td><h4>Max</td>
                              </tr>
                              {% for i in range(0, items | count, 1) %}
                              <tr>    

                              <td>{% if items[i].subject == "ANGLAIS LV1 > ANGLAIS LV1" %}ANGLAIS
                              {% elif items[i].subject == "NUMERIQUE SC.INFORM." %}NUM. SC.INFO
                              {% elif items[i].subject == "SC. ECONO.& SOCIALES" %}SC. ECO.& SOCIO.
                              {% elif items[i].subject == "MATHEMATIQUES" %}MATHS
                              {% elif items[i].subject == "HISTOIRE-GEOGRAPHIE" %}HIST-GEO
                              {% elif items[i].subject == "SCIENCES VIE & TERRE" %}SVT
                              {% elif items[i].subject == "ED.PHYSIQUE & SPORT." %}EPS
                              {% else %}{{ items[i].subject }}{% endif %}</td>
                              <td>{{ items[i].average }} / {{ items[i].out_of }}</td>
                              <td>{{ items[i].class }}</td>
                              <td>{{ items[i].min }}</td>
                              <td>{{ items[i].max }}</td>
                             </tr>
                            {% endfor %}
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px
                                }
                                ha-card ha-markdown.no-header {
                                  padding: 05px
                                }
                              ha-markdown$: |
                                h1 {
                                    font-weight: normal;
                                    font-size: 24px;
                                }
                                div {
                                    background-color: var(--card-background-color);
                                    border-radius: 30px;  
                                    padding: 10px;
                                    text-align: center;
                                    color: var(--title);
                                    font-weight:600;
                                    font-size: 15px;
                                    font-family: Avenir;

                                }
                                table{
                                  border-collapse: collapse;
                                  font-weight:normal;
                                  font-size:1.em;
                                  font-family: Roboto;
                                  letter-spacing: -1px;
                                  width: auto;
                                  outline: 0px solid #393c3d;
                                  margin-top: 10px;
                                } caption {
                                    text-align: center;
                                    font-weight: bold;
                                    font-size: 1.2em;
                                } td {
                                    padding: 0px 4px 0px 4px;
                                    text-align: center;
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                    border-bottom: 0px solid #1c2020;
                                    line-height: 25px;
                                }
                                tr:nth-of-type(even) {
                                    background-color: rgb(54, 54, 54, 0.5);
                                }
                                tr:last-of-type {
                                    border-bottom: transparent;
                                }
                                mark {
                                    background: var(--color-blue);
                                    color: ##000000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    background: rgb(180, 70, 70);
                                    color: #00000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    padding: 5px;
                                }
                                tr:nth-child(n+1) > td:nth-child(1) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_tom_homework
                            state_not: unavailable
                        card:
                          type: markdown
                          content: |-
                            <div>Devoirs</div>
                            <table>
                                <tbody>
                                    {% set items = state_attr('sensor.pronote_NAME_tom_homework','homework') %}
                                    {%-for i in range(0, items | count, 1) -%}
                                    <tr>
                                        <td>
                                        {%- if items[i].done == true -%}
                                            <mark>
                                            {{items[i].date.strftime("%d/%m")}}
                                            </mark>
                                        {%- else -%}
                                            <span>
                                            {{items[i].date.strftime("%d/%m")}}
                                            </span>
                                        {% endif %}</td>              
                                        <td>{{items[i].subject}}</td>
                                        <td>{{items[i].description}}</td>
                                    </tr>
                                    {% endfor %}
                              </tbody>
                            </table>
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px;
                                }
                                ha-card ha-markdown.no-header {
                                  padding: 05px;
                                }
                              ha-markdown$: |
                                ha-markdown-element {
                                  display: inline-block;
                                  height: 300px;
                                  overflow-y: scroll;
                                  width: 100%;
                                }
                                @media only screen and (min-height: 600px) {
                                  ha-markdown-element {
                                    height: 400px;
                                  }
                                }
                                div {
                                    background-color: var(--card-background-color);
                                    border-radius: 30px;  
                                    padding: 10px;
                                    text-align: center;
                                    color: var(--title);
                                    font-weight:600;
                                    font-size: 15px;
                                    font-family: Avenir;

                                }
                                table{
                                  border-collapse: collapse;
                                  font-weight:normal;
                                  font-size:1em;
                                  font-family: Roboto;
                                  width: auto;
                                  outline: 0px solid #393c3d;
                                  margin-top: 10px;
                                } caption {
                                    text-align: center;
                                    font-weight: bold;
                                    font-size: 1.2em;
                                } td {
                                    padding: 5px 5px 5px 5px;
                                    text-align: left;
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr:nth-of-type(even) {
                                    background-color: rgb(54, 54, 54, 0.5);
                                }
                                tr:last-of-type {
                                    border-bottom: transparent;
                                }
                                mark {
                                    background: var(--color-blue);
                                    color: ##000000;
                                    border-radius: 15px;
                                    padding: 5px;
                                }
                                span {
                                    background: rgb(180, 70, 70);
                                    color: #00000;
                                    border-radius: 15px;
                                    padding: 5px;
                                }
                                span {
                                    padding: 5px;
                                }
                                tr:nth-child(n+2) > td:nth-child(2) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_tom_absences
                            state_not: unavailable
                        card:
                          type: markdown
                          content: >-
                            <div>Absences</div><table>  {% set items =
                            state_attr('sensor.pronote_NAME_tom_absences','absences')
                            %} {% for i in range(0, items | count, 1) %} <tr>
                            {%- if items[i].justified == True -%} <td> <mark> {{
                            items[i].from.strftime("%d-%m") }}</mark></td> {%
                            else %} <td> <span>{{
                            items[i].from.strftime("%d-%m") }}</span></td>  {%-
                            endif -%}  <td>{{ items[i].hours }}</td> <td>{{
                            items[i].reason }}</td> {% endfor %}
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px;
                                }
                                ha-card ha-markdown.no-header {
                                  padding: 05px;
                                }
                              ha-markdown$: |
                                div {
                                    background-color: var(--card-background-color);
                                    border-radius: 30px;   
                                    padding: 10px;
                                    text-align: center;
                                    color: var(--title);
                                    font-weight:600;
                                    font-size: 15px;
                                    font-family: Avenir;

                                }
                                table{
                                  border-collapse: collapse;
                                  font-family: Roboto;
                                  width: 100%;
                                  outline: 0px solid #393c3d;
                                  margin-top:5px;
                                } caption {
                                    text-align: center;
                                    font-weight: bold;
                                    font-size: 1.2em;
                                } td {
                                    padding: 5px 10px 5px 10px;
                                    text-align: left;
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr:nth-of-type(even) {
                                    background-color: rgb(54, 54, 54, 0.3);
                                }
                                tr:last-of-type {
                                    border-bottom: transparent;          }*
                                mark {
                                    background: var(--color-blue);
                                    color: ##000000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    background: rgb(180, 70, 70);
                                    color: #00000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    padding: 5px;
                                }
                                tr:nth-child(n+2) > td:nth-child(2) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: custom:button-card
                        entity: sensor.derniere_mise_a_jour_de_pronote_tom
                        template:
                          - title_card
                        show_state: true
                        name: MàJ
                        layout: name_state
                        styles:
                          name:
                            - justify-self: null
                            - font-size: 12px
                            - color: var(--text-off)
                          state:
                            - justify-self: null
                            - font-size: 12px
                            - color: var(--text-on)
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            entities:
              - type: custom:button-card
                template:
                  - title_card
                name: >
                  [[[ return "Manon -
                  "+states['sensor.pronote_NAME_manon'].attributes.class_name
                  ]]]
                styles:
                  name:
                    - justify-self: null
                    - font-size: 19px
                    - font-weight: 600
                  label:
                    - justify-self: null
                    - font-size: 14px
                    - color: var(--text-off)
                  custom_fields:
                    entity_picture:
                      - position: absolute
                      - width: 35%
                label: >
                  [[[ return "Aujourd'hui : " +
                  states['sensor.journee_de_cours_de_manon_aujourd_hui'].state+
                  "<br>" + "Demain : " +
                  states['sensor.journee_de_cours_de_manon_demain'].state]]]
                custom_fields:
                  entity_picture:
                    card:
                      type: custom:button-card
                      entity: person.manon
                      template:
                        - no_style
                      show_name: false
                      show_state: false
                      show_entity_picture: true
                      styles:
                        entity_picture:
                          - border-radius: 50%
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                    border-radius: 20px !important;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_manon_timetable_period
                            state_not: unavailable
                        card:
                          type: markdown
                          content: >-
                            <div>Emploi du temps</div> {% set months =
                            ["Janvier","Février", "Mars", "Avril", "Mai",
                            "Juin", "Juillet", "Août", "Septembre", "Octobre",
                            "Novembre", "Décembre"] %}

                            {% set days = ["Lundi", "Mardi", "Mercredi",
                            "Jeudi", "Vendredi", "Samedi", "Dimanche"] %}

                            {% set weeknum = now().strftime("%W") %} 


                            <table>
                              {% set items = state_attr('sensor.pronote_NAME_manon_timetable_period','lessons') %}
                              <tbody>
                                {%- for i in range(0, items | count, 1) -%}
                                  {% if (items[i].start_at - now().today()).days > 4 %}
                                    {% continue %}
                                  {% endif %}

                                  {%- if i == 0 -%}
                                    <tr><td colspan="5"><b>{{ days[items[i].start_at.strftime('%w')| int - 1] }} {{ items[i].start_at.strftime("%d") }}</b></td></tr>
                                  {%- endif -%}

                                  {%- if items[i].start_at.strftime("%F") > items[i-1].start_at.strftime("%F") -%} 
                                    <tr><td colspan="5"><b>{{ days[items[i].start_at.strftime('%w')| int - 1] }} {{ items[i].start_at.strftime("%d") }}</b></td></tr>
                                  {%- endif -%}

                                  <tr>
                                  {%- if items[i].canceled != True -%}
                                      <td>{{ items[i].start_time }}<br />{{ items[i].end_time }}</td>
                                      <td>
                                        {%- if as_timestamp(items[i].end_at) | timestamp_local < as_timestamp(now()) | timestamp_local -%}
                                          <del>
                                        {%- endif -%}
                                        {%- if as_timestamp(items[i].start_at) | timestamp_local <= as_timestamp(now()) | timestamp_local and as_timestamp(items[i].end_at) | timestamp_local >= as_timestamp(now()) | timestamp_local -%}
                                          <mark></mark>
                                        {%- else -%}
                                          <span></span>
                                        {%- endif -%}
                                        {%- if as_timestamp(items[i].end_at) | timestamp_local < as_timestamp(now()) | timestamp_local -%}
                                          </del>
                                        {%- endif -%}
                                      </td>
                                      <td>{{ items[i].lesson }}<br /> <span>{{ items[i].classroom }}</td>
                                  {%- else -%}
                                    <td><del>{{ items[i].start_time }}<br />{{ items[i].end_time }}</del></td>
                                    <td><del><mark></mark></del></td>
                                    <td><del>{{ items[i].lesson }} <span>{{ items[i].status }}</span></del></td>
                                  {%- endif -%}
                                  </tr>
                               {% endfor %}
                             </tbody>
                            </table>
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px
                                }
                                ha-card ha-markdown.no-header {
                                  padding:05px
                                }
                              ha-markdown$: |
                                ha-markdown-element {
                                  display: inline-block;
                                  height: 300px;
                                  overflow-y: scroll;
                                  width: 100%;
                                }
                                @media only screen and (min-height: 600px) {
                                  ha-markdown-element {
                                    height: 400px;
                                  }
                                }
                                div {
                                  background-color: var(--card-background-color);
                                  border-radius: 30px;   
                                  padding: 10px;
                                  text-align: center;
                                  color: var(--title);
                                  font-weight:600;
                                  font-size: 15px;
                                  font-family: Avenir; 
                                }
                                table{
                                  border-spacing: 0px;
                                  font-size: 0.9em;
                                  font-family: Roboto;
                                  width: 100%;
                                  outline: 0px solid #393c3d;
                                  margin-top:5px;
                                }
                                caption {
                                  text-align: center;
                                  font-weight: bold;
                                  font-size: 1.2em;
                                }
                                td:first-of-type {
                                  width:;
                                }
                                td:nth-of-type(2)>span {
                                  display: block;
                                  background-color: lightgrey;
                                  border-radius: 40% / 10%;
                                  width: 0.5em;
                                  height: 3em;
                                  padding: 0px;
                                }
                                td:nth-of-type(2)>del>mark {
                                  display: block;
                                  background-color: #EC4B34;
                                  border-radius: 40% / 10%;
                                  width: 0.5em;
                                  height: 3em;
                                  padding: 0px;
                                }
                                td:nth-of-type(2)>del>span {
                                  display: none;
                                }
                                td:nth-of-type(2)>mark {
                                  display: block;
                                  background-color: #009767;
                                  border-radius: 40% / 10%;
                                  width: 0.5em;
                                  height: 3em;
                                  padding: 0px;
                                }
                                td:last-of-type {
                                  width: 90%;
                                }
                                td:last-of-type span {
                                  display: inline-block;
                                  padding: 0%;
                                  width: 97%;
                                  text-align: right;
                                }
                                td {
                                  padding: 5px 10px 5px 10px;
                                  margin-bottom: 3px;
                                  text-align: left;
                                  border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                  border-bottom: 0px solid #1c2020;
                                }
                                tr:nth-of-type(even) {
                                  background-color: rgb(54, 54, 54, 0.3);
                                }
                                tr:last-of-type {
                                  border-bottom: transparent;          }*
                                mark {
                                  background: #009767;
                                  color: #222627;
                                  border-radius: 5px;
                                  padding: 5px;
                                }
                                span {
                                  padding: 5px;
                                }
                                tr:nth-child(n+2) > td:nth-child(2) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_manon_evaluations
                            state_not: unavailable
                        card:
                          type: markdown
                          content: >-
                            <div>Evaluations</div> {% set items =
                            state_attr('sensor.pronote_NAME_manon_evaluations','evaluations')%}
                            <table width='100%'>
                              <tbody>
                              {% for i in range(0, items | count, 1) %}
                              <tr><td width='15%'>{{ items[i].date.strftime("%d-%m") }}</td><td width='40%'>{{ items[i].subject }}</td><td width='30%'>
                              {% set acquisitions = items[i].acquisitions %}
                              {% for j in range(0,acquisitions|count,1) %}{% if acquisitions[j].level == 'Très bonne maîtrise' %}💚{% elif acquisitions[j].level == 'Maîtrise satisfaisante' %}🟢{% elif acquisitions[j].level == "Presque maîtrisé" %}🟡{% elif acquisitions[j].level == "Début de maîtrise" %}🟡{% elif acquisitions[j].level == 'Maîtrise fragile'  %}🟠{% elif acquisitions[j].level == 'Maîtrise insuffisante'  %}🔴{% elif acquisitions[j].level == 'Absent'  %}❌{% else %}?{% endif %}{% endfor %}</td></tr>
                              {% endfor %}
                            </tbody> </table>
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px
                                }
                                ha-card ha-markdown.no-header {
                                  padding: 05px
                                }
                              ha-markdown$: |
                                h1 {
                                    font-weight: normal;
                                    font-size: 24px;
                                }
                                div {
                                    background-color: var(--card-background-color);
                                    border-radius: 30px;   
                                    padding: 10px;
                                    text-align: center;
                                    color: var(--title);
                                    font-weight:600;
                                    font-size: 15px;
                                    font-family: Avenir;
                                }
                                table{
                                  border-collapse: collapse;
                                  font-weight:normal;
                                  font-size:1em;
                                  font-family: Roboto;
                                  width: auto;
                                  outline: 0px solid #393c3d;
                                  margin-top: 10px;
                                } caption {
                                    text-align: center;
                                    font-weight: bold;
                                    font-size: 1.2em;
                                } td {
                                    padding: 0px 5px 0px 5px;
                                    text-align: left;
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                    border-bottom: 0px solid #1c2020;
                                    line-height: 4px;
                                }
                                tr:nth-of-type(even) {
                                    background-color: rgb(54, 54, 54, 0.3);
                                }
                                tr:last-of-type {
                                    border-bottom: transparent;
                                }
                                mark {
                                    background: #009767;
                                    color: #222627;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    background: rgb(180, 70, 70);
                                    color: #00000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    padding: 5px;
                                }
                                tr:nth-child(n+2) > td:nth-child(2) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_manon_grades
                            state_not: unavailable
                        card:
                          type: markdown
                          content: |2-
                                <div>Notes</div><table> 
                                {% set items = state_attr('sensor.pronote_NAME_manon_grades','grades')%}
                              <tr>
                              <td><h4>Date<h3></td>
                              <td><h4>Cours</td>
                              <td><h4>Note</td>
                              <td><h4>Class</td>
                              <td><h4>Max</td>
                              <td><h4>Min</td>
                              </tr>
                              {% for i in range(0, items | count, 1) %}
                              <tr>    
                              <td>{{ items[i].date }}</td>
                              <td>{{ items[i].subject }}</td>
                              <td>{% if items[i].grade == "Absent" %}❌{% else %}{{ items[i].grade_out_of }}{% endif %}</td>
                              <td>{{ items[i].class_average }}</td>
                              <td>{{ items[i].max }}</td>
                              <td>{{ items[i].min }}</td>
                             </tr>
                            {% endfor %}
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px
                                }
                                ha-card ha-markdown.no-header {
                                  padding: 05px
                                }
                              ha-markdown$: |
                                h1 {
                                    font-weight: normal;
                                    font-size: 24px;
                                }
                                div {
                                    background-color: var(--card-background-color);
                                    border-radius: 30px;   
                                    padding: 10px;
                                    text-align: center;
                                    color: var(--title);
                                    font-weight:600;
                                    font-size: 15px;
                                    font-family: Avenir;

                                }
                                table{
                                  border-collapse: collapse;
                                  font-weight:normal;
                                  font-size:1.em;
                                  font-family: Roboto;
                                  letter-spacing: -1px;
                                  width: auto;
                                  outline: 0px solid #393c3d;
                                  margin-top: 10px;
                                } caption {
                                    text-align: center;
                                    font-weight: bold;
                                    font-size: 1.2em;
                                } td {
                                    padding: 0px 5px 0px 5px;
                                    text-align: center;
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                    border-bottom: 0px solid #1c2020;
                                    line-height: 25px;
                                }
                                tr:nth-of-type(even) {
                                    background-color: rgb(54, 54, 54, 0.5);
                                }
                                tr:last-of-type {
                                    border-bottom: transparent;
                                }
                                mark {
                                    background: var(--color-blue);
                                    color: #222627;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    background: rgb(180, 70, 70);
                                    color: #00000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    padding: 5px;
                                }
                                tr:nth-child(n+2) > td:nth-child(2) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_manon_averages
                            state_not: unavailable
                        card:
                          type: markdown
                          content: |2-
                              <div>Moyennes</div><table>
                                {% set items = state_attr('sensor.pronote_NAME_manon_averages','averages')%}
                              <tr>
                              <td><h4>Matière<h3></td>
                              <td><h4>Moyenne élève</td>
                              <td><h4>Moyenne classe</td>
                              <td><h4>Min</td>
                              <td><h4>Max</td>
                              </tr>
                              {% for i in range(0, items | count, 1) %}
                              <tr>    

                              <td>{{ items[i].subject }}</td>
                              <td>{{ items[i].average }} / {{ items[i].out_of }}</td>
                              <td>{{ items[i].class }}</td>
                              <td>{{ items[i].min }}</td>
                              <td>{{ items[i].max }}</td>
                             </tr>
                            {% endfor %}
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px
                                }
                                ha-card ha-markdown.no-header {
                                  padding: 05px
                                }
                              ha-markdown$: |
                                h1 {
                                    font-weight: normal;
                                    font-size: 24px;
                                }
                                div {
                                    background-color: var(--card-background-color);
                                    border-radius: 30px;  
                                    padding: 10px;
                                    text-align: center;
                                    color: var(--title);
                                    font-weight:600;
                                    font-size: 15px;
                                    font-family: Avenir;

                                }
                                table{
                                  border-collapse: collapse;
                                  font-weight:normal;
                                  font-size:1.em;
                                  font-family: Roboto;
                                  letter-spacing: -1px;
                                  width: auto;
                                  outline: 0px solid #393c3d;
                                  margin-top: 10px;
                                } caption {
                                    text-align: center;
                                    font-weight: bold;
                                    font-size: 1.2em;
                                } td {
                                    padding: 0px 4px 0px 4px;
                                    text-align: center;
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                    border-bottom: 0px solid #1c2020;
                                    line-height: 25px;
                                }
                                tr:nth-of-type(even) {
                                    background-color: rgb(54, 54, 54, 0.5);
                                }
                                tr:last-of-type {
                                    border-bottom: transparent;
                                }
                                mark {
                                    background: var(--color-blue);
                                    color: ##000000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    background: rgb(180, 70, 70);
                                    color: #00000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    padding: 5px;
                                }
                                tr:nth-child(n+1) > td:nth-child(1) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_manon_homework
                            state_not: unavailable
                        card:
                          type: markdown
                          content: >-


                            <div>{{states.sensor.devoirs_manon_next_day.state}}</div>

                            <table>
                                <tbody>
                                    {% set items = state_attr('sensor.pronote_NAME_manon_homework','homework') %}
                                    {%-for i in range(0, items | count, 1) -%}
                                    <tr>
                                        <td>
                                        {%- if items[i].done == true -%}
                                            <mark>
                                            {{items[i].date.strftime("%d/%m")}}
                                            </mark>
                                        {%- else -%}
                                            <span>
                                            {{items[i].date.strftime("%d/%m")}}
                                            </span>
                                        {% endif %}</td>              
                                        <td>{{items[i].subject}}</td>
                                        <td>{{items[i].description}}</td>
                                    </tr>
                                    {% endfor %}
                              </tbody>
                            </table>
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px
                                }
                                ha-card ha-markdown.no-header {
                                  padding: 05px
                                }
                              ha-markdown$: |
                                ha-markdown-element {
                                  display: inline-block;
                                  height: 300px;
                                  overflow-y: scroll;
                                  width: 100%;
                                }
                                @media only screen and (min-height: 600px) {
                                  ha-markdown-element {
                                    height: 400px;
                                  }
                                }
                                div {
                                    background-color: var(--card-background-color);
                                    border-radius: 30px;  
                                    padding: 10px;
                                    text-align: center;
                                    color: var(--title);
                                    font-weight:600;
                                    font-size: 15px;
                                    font-family: Avenir;

                                }
                                table{
                                  border-collapse: collapse;
                                  font-weight:normal;
                                  font-size:1em;
                                  font-family: Roboto;
                                  width: auto;
                                  outline: 0px solid #393c3d;
                                  margin-top: 10px;
                                } caption {
                                    text-align: center;
                                    font-weight: bold;
                                    font-size: 1.2em;
                                } td {
                                    padding: 5px 5px 5px 5px;
                                    text-align: left;
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr:nth-of-type(even) {
                                    background-color: rgb(54, 54, 54, 0.5);
                                }
                                tr:last-of-type {
                                    border-bottom: transparent;
                                }
                                mark {
                                    background: var(--color-blue);
                                    color: ##000000;
                                    border-radius: 15px;
                                    padding: 5px;
                                }
                                span {
                                    background: rgb(180, 70, 70);
                                    color: ##000000;
                                    border-radius: 15px;
                                    padding: 5px;
                                }
                                span {
                                    padding: 5px;
                                }
                                tr:nth-child(n+2) > td:nth-child(2) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_manon_absences
                            state_not: unavailable
                        card:
                          type: markdown
                          content: >-
                            <div>Absences</div><table>  {% set items =
                            state_attr('sensor.pronote_NAME_manon_absences','absences')
                            %} {% for i in range(0, items | count, 1) %} <tr>
                            {%- if items[i].justified == True -%} <td> <mark> {{
                            items[i].from.strftime("%d-%m") }}</mark></td> {%
                            else %} <td> <span>{{
                            items[i].from.strftime("%d-%m") }}</span></td>  {%-
                            endif -%}  <td>{{ items[i].hours }}</td> <td>{{
                            items[i].reason }}</td> {% endfor %}
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px
                                }
                                ha-card ha-markdown.no-header {
                                  padding:05px
                                }
                              ha-markdown$: |
                                div {
                                    background-color: var(--card-background-color);
                                    border-radius: 30px;  
                                    padding: 10px;
                                    text-align: center;
                                    color: var(--title);
                                    font-weight:600;
                                    font-size: 15px;
                                    font-family: Avenir;e:1.2em;

                                }
                                table{
                                  border-collapse: collapse;
                                  font-family: Roboto;
                                  width: 100%;
                                  outline: 0px solid #393c3d;
                                  margin-top:5px;
                                } caption {
                                    text-align: center;
                                    font-weight: bold;
                                    font-size: 1.2em;
                                } td {
                                    padding: 5px 10px 5px 10px;
                                    text-align: left;
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr:nth-of-type(even) {
                                    background-color: rgb(54, 54, 54, 0.3);
                                }
                                tr:last-of-type {
                                    border-bottom: transparent;          }*
                                mark {
                                    background: var(--color-blue);
                                    color: #222627;
                                    border-radius: 5px;
                                    padding: 5px;
                                }
                                span {
                                    background: rgb(180, 70, 70);
                                    color: #00000;
                                    border-radius: 5px;
                                    padding: 5px;
                                }
                                span {
                                    padding: 5px;
                                }
                                tr:nth-child(n+2) > td:nth-child(2) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: custom:button-card
                        entity: sensor.derniere_mise_a_jour_de_pronote_manon
                        template:
                          - title_card
                        show_state: true
                        name: MàJ
                        layout: name_state
                        styles:
                          name:
                            - justify-self: null
                            - font-size: 12px
                            - color: var(--text-off)
                          state:
                            - justify-self: null
                            - font-size: 12px
                            - color: var(--text-on)
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            entities:
              - type: custom:button-card
                template:
                  - title_card
                name: >
                  [[[ return "Léane -
                  "+states['sensor.pronote_NAME_l_ane'].attributes.class_name
                  ]]]
                styles:
                  name:
                    - justify-self: null
                    - font-size: 19px
                    - font-weight: 600
                  label:
                    - justify-self: null
                    - font-size: 14px
                    - color: var(--text-off)
                  custom_fields:
                    entity_picture:
                      - position: absolute
                      - width: 35%
                label: >
                  [[[ return "Aujourd'hui : " +
                  states['sensor.journee_de_cours_de_leane_aujourd_hui'].state+
                  "<br>" + "Demain : " +
                  states['sensor.journee_de_cours_de_leane_demain'].state]]]
                custom_fields:
                  entity_picture:
                    card:
                      type: custom:button-card
                      entity: person.leane
                      template:
                        - no_style
                      show_name: false
                      show_state: false
                      show_entity_picture: true
                      styles:
                        entity_picture:
                          - border-radius: 50%
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                    border-radius: 20px !important;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_l_ane_timetable_period
                            state_not: unavailable
                        card:
                          type: markdown
                          content: >-
                            <div>Emploi du temps</div> {% set months =
                            ["Janvier","Février", "Mars", "Avril", "Mai",
                            "Juin", "Juillet", "Août", "Septembre", "Octobre",
                            "Novembre", "Décembre"] %}

                            {% set days = ["Lundi", "Mardi", "Mercredi",
                            "Jeudi", "Vendredi", "Samedi", "Dimanche"] %}

                            {% set weeknum = now().strftime("%W") %} 


                            <table>
                              {% set items = state_attr('sensor.pronote_NAME_l_ane_timetable_period','lessons') %}
                              <tbody>
                                {%- for i in range(0, items | count, 1) -%}
                                  {% if (items[i].start_at - now().today()).days > 4 %}
                                    {% continue %}
                                  {% endif %}

                                  {%- if i == 0 -%}
                                    <tr><td colspan="5"><b>{{ days[items[i].start_at.strftime('%w')| int - 1] }} {{ items[i].start_at.strftime("%d") }}</b></td></tr>
                                  {%- endif -%}

                                  {%- if items[i].start_at.strftime("%F") > items[i-1].start_at.strftime("%F") -%} 
                                    <tr><td colspan="5"><b>{{ days[items[i].start_at.strftime('%w')| int - 1] }} {{ items[i].start_at.strftime("%d") }}</b></td></tr>
                                  {%- endif -%}

                                  <tr>
                                  {%- if items[i].canceled != True -%}
                                      <td>{{ items[i].start_time }}<br />{{ items[i].end_time }}</td>
                                      <td>
                                        {%- if as_timestamp(items[i].end_at) | timestamp_local < as_timestamp(now()) | timestamp_local -%}
                                          <del>
                                        {%- endif -%}
                                        {%- if as_timestamp(items[i].start_at) | timestamp_local <= as_timestamp(now()) | timestamp_local and as_timestamp(items[i].end_at) | timestamp_local >= as_timestamp(now()) | timestamp_local -%}
                                          <mark></mark>
                                        {%- else -%}
                                          <span></span>
                                        {%- endif -%}
                                        {%- if as_timestamp(items[i].end_at) | timestamp_local < as_timestamp(now()) | timestamp_local -%}
                                          </del>
                                        {%- endif -%}
                                      </td>
                                      <td>{{ items[i].lesson }}<br /> <span>{{ items[i].classroom }}</td>
                                  {%- else -%}
                                    <td><del>{{ items[i].start_time }}<br />{{ items[i].end_time }}</del></td>
                                    <td><del><mark></mark></del></td>
                                    <td><del>{{ items[i].lesson }} <span>{{ items[i].status }}</span></del></td>
                                  {%- endif -%}
                                  </tr>
                               {% endfor %}
                             </tbody>
                            </table>
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px
                                }
                                ha-card ha-markdown.no-header {
                                  padding:05px
                                }
                              ha-markdown$: |
                                ha-markdown-element {
                                  display: inline-block;
                                  height: 300px;
                                  overflow-y: scroll;
                                  width: 100%;
                                }
                                @media only screen and (min-height: 600px) {
                                  ha-markdown-element {
                                    height: 400px;
                                  }
                                }
                                div {
                                  background-color: var(--card-background-color);
                                  border-radius: 30px;   
                                  padding: 10px;
                                  text-align: center;
                                  color: var(--title);
                                  font-weight:600;
                                  font-size: 15px;
                                  font-family: Avenir; 
                                }
                                table{
                                  border-spacing: 0px;
                                  font-size: 0.9em;
                                  font-family: Roboto;
                                  width: 100%;
                                  outline: 0px solid #393c3d;
                                  margin-top:5px;
                                }
                                caption {
                                  text-align: center;
                                  font-weight: bold;
                                  font-size: 1.2em;
                                }
                                td:first-of-type {
                                  width:;
                                }
                                td:nth-of-type(2)>span {
                                  display: block;
                                  background-color: lightgrey;
                                  border-radius: 40% / 10%;
                                  width: 0.5em;
                                  height: 3em;
                                  padding: 0px;
                                }
                                td:nth-of-type(2)>del>mark {
                                  display: block;
                                  background-color: #EC4B34;
                                  border-radius: 40% / 10%;
                                  width: 0.5em;
                                  height: 3em;
                                  padding: 0px;
                                }
                                td:nth-of-type(2)>del>span {
                                  display: none;
                                }
                                td:nth-of-type(2)>mark {
                                  display: block;
                                  background-color: #009767;
                                  border-radius: 40% / 10%;
                                  width: 0.5em;
                                  height: 3em;
                                  padding: 0px;
                                }
                                td:last-of-type {
                                  width: 90%;
                                }
                                td:last-of-type span {
                                  display: inline-block;
                                  padding: 0%;
                                  width: 97%;
                                  text-align: right;
                                }
                                td {
                                  padding: 5px 10px 5px 10px;
                                  margin-bottom: 3px;
                                  text-align: left;
                                  border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                  border-bottom: 0px solid #1c2020;
                                }
                                tr:nth-of-type(even) {
                                  background-color: rgb(54, 54, 54, 0.3);
                                }
                                tr:last-of-type {
                                  border-bottom: transparent;          }*
                                mark {
                                  background: #009767;
                                  color: #222627;
                                  border-radius: 5px;
                                  padding: 5px;
                                }
                                span {
                                  padding: 5px;
                                }
                                tr:nth-child(n+2) > td:nth-child(2) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_l_ane_evaluations
                            state_not: unavailable
                        card:
                          type: markdown
                          content: >-
                            <div>Evaluations</div> {% set items =
                            state_attr('sensor.pronote_NAME_l_ane_evaluations','evaluations')%}
                            <table width='100%'>
                              <tbody>
                              {% for i in range(0, items | count, 1) %}
                              <tr><td width='15%'>{{ items[i].date.strftime("%d-%m") }}</td><td width='40%'>{{ items[i].subject }}</td><td width='30%'>
                              {% set acquisitions = items[i].acquisitions %}
                              {% for j in range(0,acquisitions|count,1) %}{% if acquisitions[j].level == 'Très bonne maîtrise' %}💚{% elif acquisitions[j].level == 'Maîtrise satisfaisante' %}🟢{% elif acquisitions[j].level == "Presque maîtrisé" %}🟡{% elif acquisitions[j].level == "Début de maîtrise" %}🟡{% elif acquisitions[j].level == 'Maîtrise fragile'  %}🟠{% elif acquisitions[j].level == 'Maîtrise insuffisante'  %}🔴{% elif acquisitions[j].level == 'Absent'  %}❌{% else %}?{% endif %}{% endfor %}</td></tr>
                              {% endfor %}
                            </tbody> </table>
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px
                                }
                                ha-card ha-markdown.no-header {
                                  padding: 0px
                                }
                              ha-markdown$: |
                                h1 {
                                    font-weight: normal;
                                    font-size: 24px;
                                }
                                div {
                                    background-color: var(--card-background-color);
                                    border-radius: 30px; 
                                    padding: 10px;
                                    text-align: center;
                                    color: var(--title);
                                    font-weight:600;
                                    font-size: 15px;
                                    font-family: Avenir;
                                }
                                table{
                                  border-collapse: collapse;
                                  font-weight:normal;
                                  font-size:1em;
                                  font-family: Roboto;
                                  width: auto;
                                  outline: 0px solid #393c3d;
                                  margin-top: 10px;
                                } caption {
                                    text-align: center;
                                    font-weight: bold;
                                    font-size: 1.2em;
                                } td {
                                    padding: 0px 5px 0px 5px;
                                    text-align: left;
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                    border-bottom: 0px solid #1c2020;
                                    line-height: 4px;
                                }
                                tr:nth-of-type(even) {
                                    background-color: rgb(54, 54, 54, 0.3);
                                }
                                tr:last-of-type {
                                    border-bottom: transparent;
                                }
                                mark {
                                    background: var(--color-blue);
                                    color: ##000000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    background: rgb(180, 70, 70);
                                    color: #00000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    padding: 5px;
                                }
                                tr:nth-child(n+2) > td:nth-child(2) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_l_ane_grades
                            state_not: unavailable
                        card:
                          type: markdown
                          content: |2-
                              <div>Notes</div><table>
                                {% set items = state_attr('sensor.pronote_NAME_l_ane_grades','grades')%}
                              <tr>
                              <td><h4>Date<h3></td>
                              <td><h4>Cours</td>
                              <td><h4>Note</td>
                              <td><h4>Class</td>
                              <td><h4>Max</td>
                              <td><h4>Min</td>
                              </tr>
                              {% for i in range(0, items | count, 1) %}
                              <tr>    
                              <td>{{ items[i].date }}</td>
                              <td>{{ items[i].subject }}</td>
                              <td>{% if items[i].grade == "Absent" %}❌{% else %}{{ items[i].grade_out_of }}{% endif %}</td>
                              <td>{{ items[i].class_average }}</td>
                              <td>{{ items[i].max }}</td>
                              <td>{{ items[i].min }}</td>
                             </tr>
                            {% endfor %}
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px
                                }
                                ha-card ha-markdown.no-header {
                                  padding: 05px
                                }
                              ha-markdown$: |
                                h1 {
                                    font-weight: normal;
                                    font-size: 24px;
                                }
                                div {
                                    background-color: var(--card-background-color);
                                    border-radius: 30px;  
                                    padding: 10px;
                                    text-align: center;
                                    color: var(--title);
                                    font-weight:600;
                                    font-size: 15px;
                                    font-family: Avenir;

                                }
                                table{
                                  border-collapse: collapse;
                                  font-weight:normal;
                                  font-size:1.em;
                                  font-family: Roboto;
                                  letter-spacing: -1px;
                                  width: auto;
                                  outline: 0px solid #393c3d;
                                  margin-top: 10px;
                                } caption {
                                    text-align: center;
                                    font-weight: bold;
                                    font-size: 1.2em;
                                } td {
                                    padding: 0px 4px 0px 4px;
                                    text-align: center;
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                    border-bottom: 0px solid #1c2020;
                                    line-height: 25px;
                                }
                                tr:nth-of-type(even) {
                                    background-color: rgb(54, 54, 54, 0.5);
                                }
                                tr:last-of-type {
                                    border-bottom: transparent;
                                }
                                mark {
                                    background: var(--color-blue);
                                    color: ##000000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    background: rgb(180, 70, 70);
                                    color: #00000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    padding: 5px;
                                }
                                tr:nth-child(n+2) > td:nth-child(2) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_l_ane_averages
                            state_not: unavailable
                        card:
                          type: markdown
                          content: |2-
                              <div>Moyennes</div><table>
                                {% set items = state_attr('sensor.pronote_NAME_l_ane_averages','averages')%}
                              <tr>
                              <td><h4>Matière<h3></td>
                              <td><h4>Moyenne élève</td>
                              <td><h4>Moyenne classe</td>
                              <td><h4>Min</td>
                              <td><h4>Max</td>
                              </tr>
                              {% for i in range(0, items | count, 1) %}
                              <tr>    

                              <td>{{ items[i].subject }}</td>
                              <td>{{ items[i].average }} / {{ items[i].out_of }}</td>
                              <td>{{ items[i].class }}</td>
                              <td>{{ items[i].min }}</td>
                              <td>{{ items[i].max }}</td>
                             </tr>
                            {% endfor %}
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px
                                }
                                ha-card ha-markdown.no-header {
                                  padding: 05px
                                }
                              ha-markdown$: |
                                h1 {
                                    font-weight: normal;
                                    font-size: 24px;
                                }
                                div {
                                    background-color: var(--card-background-color);
                                    border-radius: 30px;  
                                    padding: 10px;
                                    text-align: center;
                                    color: var(--title);
                                    font-weight:600;
                                    font-size: 15px;
                                    font-family: Avenir;

                                }
                                table{
                                  border-collapse: collapse;
                                  font-weight:normal;
                                  font-size:1.em;
                                  font-family: Roboto;
                                  letter-spacing: -1px;
                                  width: auto;
                                  outline: 0px solid #393c3d;
                                  margin-top: 10px;
                                } caption {
                                    text-align: center;
                                    font-weight: bold;
                                    font-size: 1.2em;
                                } td {
                                    padding: 0px 4px 0px 4px;
                                    text-align: center;
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                    border-bottom: 0px solid #1c2020;
                                    line-height: 25px;
                                }
                                tr:nth-of-type(even) {
                                    background-color: rgb(54, 54, 54, 0.5);
                                }
                                tr:last-of-type {
                                    border-bottom: transparent;
                                }
                                mark {
                                    background: var(--color-blue);
                                    color: ##000000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    background: rgb(180, 70, 70);
                                    color: #00000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    padding: 5px;
                                }
                                tr:nth-child(n+1) > td:nth-child(1) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_l_ane_homework
                            state_not: unavailable
                        card:
                          type: markdown
                          content: >-


                            <div>{{states.sensor.devoirs_leane_next_day.state}}</div>

                            <table>
                                <tbody>
                                    {% set items = state_attr('sensor.pronote_NAME_l_ane_homework','homework') %}
                                    {%-for i in range(0, items | count, 1) -%}
                                    <tr>
                                        <td>
                                        {%- if items[i].done == true -%}
                                            <mark>
                                            {{items[i].date.strftime("%d/%m")}}
                                            </mark>
                                        {%- else -%}
                                            <span>
                                            {{items[i].date.strftime("%d/%m")}}
                                            </span>
                                        {% endif %}</td>              
                                        <td>{{items[i].subject}}</td>
                                        <td>{{items[i].description}}</td>
                                    </tr>
                                    {% endfor %}
                              </tbody>
                            </table>
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px
                                }
                                ha-card ha-markdown.no-header {
                                  padding: 05px
                                }
                              ha-markdown$: |
                                ha-markdown-element {
                                  display: inline-block;
                                  height: 300px;
                                  overflow-y: scroll;
                                  width: 100%;
                                }
                                @media only screen and (min-height: 600px) {
                                  ha-markdown-element {
                                    height: 400px;
                                  }
                                }
                                div {
                                    background-color: var(--card-background-color);
                                    border-radius: 30px;  
                                    padding: 10px;
                                    text-align: center;
                                    color: var(--title);
                                    font-weight:600;
                                    font-size: 15px;
                                    font-family: Avenir;

                                }
                                table{
                                  border-collapse: collapse;
                                  font-weight:normal;
                                  font-size:1em;
                                  font-family: Roboto;
                                  width: auto;
                                  outline: 0px solid #393c3d;
                                  margin-top: 10px;
                                } caption {
                                    text-align: center;
                                    font-weight: bold;
                                    font-size: 1.2em;
                                } td {
                                    padding: 5px 5px 5px 5px;
                                    text-align: left;
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr:nth-of-type(even) {
                                    background-color: rgb(54, 54, 54, 0.5);
                                }
                                tr:last-of-type {
                                    border-bottom: transparent;
                                }
                                mark {
                                    background: var(--color-blue);
                                    color: ##000000;
                                    border-radius: 15px;
                                    padding: 5px;
                                }
                                span {
                                    background: rgb(180, 70, 70);
                                    color: #00000;
                                    border-radius: 15px;
                                    padding: 5px;
                                }
                                span {
                                    padding: 5px;
                                }
                                tr:nth-child(n+2) > td:nth-child(2) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.pronote_NAME_l_ane_absences
                            state_not: unavailable
                        card:
                          type: markdown
                          content: >-
                            <div>Absences</div><table>  {% set items =
                            state_attr('sensor.pronote_NAME_l_ane_absences','absences')
                            %} {% for i in range(0, items | count, 1) %} <tr>
                            {%- if items[i].justified == True -%} <td> <mark> {{
                            items[i].from.strftime("%d-%m") }}</mark></td> {%
                            else %} <td> <span>{{
                            items[i].from.strftime("%d-%m") }}</span></td>  {%-
                            endif -%}  <td>{{ items[i].hours }}</td> <td>{{
                            items[i].reason }}</td> {% endfor %}
                          card_mod:
                            style:
                              .: |
                                ha-card ha-markdown {
                                  padding:0px
                                }
                                ha-card ha-markdown.no-header {
                                  padding: 05px
                                }
                              ha-markdown$: |
                                div {
                                    background-color: var(--card-background-color);
                                    border-radius: 30px;   
                                    padding: 10px;
                                    text-align: center;
                                    color: var(--title);
                                    font-weight:600;
                                    font-size: 15px;
                                    font-family: Avenir;

                                }
                                table{
                                  border-collapse: collapse;
                                  font-family: Roboto;
                                  width: 100%;
                                  outline: 0px solid #393c3d;
                                  margin-top:5px;
                                } caption {
                                    text-align: center;
                                    font-weight: bold;
                                    font-size: 1em;
                                } td {
                                    padding: 5px 10px 5px 10px;
                                    text-align: left;
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr {
                                    border-bottom: 0px solid #1c2020;
                                }
                                tr:nth-of-type(even) {
                                    background-color: rgb(54, 54, 54, 0.3);
                                }
                                tr:last-of-type {
                                    border-bottom: transparent;          }*
                                mark {
                                    background: var(--color-blue);
                                    color: ##000000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    background: rgb(180, 70, 70);
                                    color: #00000;
                                    border-radius: 10px;
                                    padding: 5px;
                                }
                                span {
                                    padding: 5px;
                                }
                                tr:nth-child(n+2) > td:nth-child(2) {
                                  text-align: left;
                                }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                        border-radius: 20px !important;
                        margin: 5px 1px 5px 1px;
                      }      
                    cards:
                      - type: custom:button-card
                        entity: sensor.derniere_mise_a_jour_de_pronote_leane
                        template:
                          - title_card
                        show_state: true
                        name: MàJ
                        layout: name_state
                        styles:
                          name:
                            - justify-self: null
                            - font-size: 12px
                            - color: var(--text-off)
                          state:
                            - justify-self: null
                            - font-size: 12px
                            - color: var(--text-on)
  - theme: Backend-selected
    icon: mdi:broom
    path: Aspis
    title: Aspis
    visible:
      - user: 2f0040afe95a4514ade3c049a0b5d479
      - user: 76afcf1927a948b19530bcbf1074ac59
      - user: d8316597eafd4333b737464a5b4c62d0
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    subview: false
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: entities
            entities:
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Wall-E" ]]]
                styles:
                  name:
                    - justify-self: middle
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    cards:
                      - type: custom:xiaomi-vacuum-card
                        entity: vacuum.wall_e
                        image: /local/aspis/walle.jpeg
                        name: []
                        attributes:
                          main_brush:
                            label: 'Brosse '
                            unit: ' h'
                          side_brush:
                            label: 'Brosette '
                            unit: ' h'
                          filter:
                            label: 'Filtre '
                          sensor:
                            label: 'Capteurs '
                        shortcuts:
                          spot:
                            show: true
                            label: Nettoyage localisé
                        buttons:
                          new_button:
                            icon: mdi:flag-variant
                            label: Custom button!
                            service: script.turn_on
                            service_data:
                              entity_id: script.sortir_l_aspi
                          new_button2:
                            icon: mdi:reload
                            label: Custom button!
                            service: homeassistant.update_entity
                            service_data:
                              entity_id: camera.roborock_s6
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:xiaomi-vacuum-map-card
                    entity: vacuum.wall_e
                    map_source:
                      camera: camera.roborock_s6
                    calibration_source:
                      camera: true
                    language: fr
                    debug: false
                    map_modes:
                      - template: vacuum_clean_zone
                      - template: vacuum_goto
                      - template: vacuum_clean_zone_predefined
                        predefined_selections:
                          - zones:
                              - - 25027
                                - 24933
                                - 28549
                                - 28632
                          - zones:
                              - - 28625
                                - 25085
                                - 31969
                                - 28683
                          - zones:
                              - - 31944
                                - 24883
                                - 33895
                                - 28683
                          - zones:
                              - - 23761
                                - 28734
                                - 27308
                                - 31571
                          - zones:
                              - - 28777
                                - 28759
                                - 32603
                                - 30507
                          - zones:
                              - - 32628
                                - 28835
                                - 33768
                                - 30532
                          - zones:
                              - - 27308
                                - 28759
                                - 28802
                                - 33522
                          - zones:
                              - - 28828
                                - 30608
                                - 29740
                                - 33547
                          - zones:
                              - - 23659
                                - 31672
                                - 27282
                                - 35118
                          - zones:
                              - - 30150
                                - 30550
                                - 33050
                                - 34300
                    map_locked: true
                    two_finger_pan: false
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    padding: 4px;
                    border-radius: 30px !important;
                  }
                cards:
                  - type: custom:button-card
                    icon: mdi:calendar
                    template:
                      - ball_card
                      - card_state
                    label: |
                      [[[ 
                        if (states['input_boolean.vacances'].state == 'off')
                          return "Désactivé"
                        return "Prochain nettoyage : "+states['sensor.aspi_mode_vacances'].state
                      ]]]
                    entity: schedule.mode_absent_calendrier_aspi
                    name: Programmation
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    padding: 4px;
                    border-radius: 30px !important;
                  }
                cards:
                  - type: custom:button-card
                    entity: script.aspi_walle_reset_brosse_principale
                    show_label: false
                    name: Brosse principale
                    icon: mdi:robot-vacuum-variant
                    template:
                      - mini_card
                    confirmation:
                      text: '[[[ return `Wall-E Reset de la brosse principale ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_walle_reset_brosse_principale
                  - type: custom:button-card
                    entity: script.aspi_walle_reset_brosse_laterale
                    show_label: false
                    name: Brosse latérale
                    icon: mdi:broom
                    template:
                      - mini_card
                    confirmation:
                      text: '[[[ return `Wall-E Reset de la brosse latérale ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_walle_reset_brosse_laterale
                  - type: custom:button-card
                    entity: script.aspi_walle_reset_capteurs
                    show_label: false
                    icon: mdi:state-machine
                    template:
                      - mini_card
                    name: Capteurs
                    confirmation:
                      text: '[[[ return `Wall-E Reset des capteurs ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_walle_reset_capteurs
                  - type: custom:button-card
                    entity: script.aspi_walle_reset_filtre
                    show_label: false
                    name: Filtre
                    icon: mdi:air-filter
                    template:
                      - mini_card
                    confirmation:
                      text: '[[[ return `Wall-E Reset du filtre ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_walle_reset_filtre
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: entities
            entities:
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "R2D2" ]]]
                styles:
                  name:
                    - justify-self: middle
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    cards:
                      - type: custom:xiaomi-vacuum-card
                        entity: vacuum.r2d2
                        image: /local/aspis/r2d22.jpg
                        name: []
                        vendor: xiaomi
                        attributes:
                          main_brush:
                            label: 'Brosse '
                            unit: ' h'
                          side_brush:
                            label: 'Brossette '
                            unit: ' h'
                          filter:
                            label: 'Filtre: '
                          sensor:
                            label: 'Capteurs: '
                        buttons:
                          spot:
                            show: true
                            label: Nettoyage localisé
                          new_button2:
                            icon: mdi:reload
                            label: Custom button!
                            service: homeassistant.update_entity
                            service_data:
                              entity_id: camera.roborock_s50
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card {
                    box-shadow: none;
                    padding: 0px;
                  }
                cards:
                  - type: custom:xiaomi-vacuum-map-card
                    style: |
                      ha-card {
                        color: var(--text-off);
                        font-size: 13px;
                        --mdc-icon-size: 18px;
                       }      
                    entity: vacuum.r2d2
                    map_source:
                      camera: camera.roborock_s50
                    calibration_source:
                      camera: true
                    language: fr
                    debug: false
                    map_modes:
                      - template: vacuum_clean_zone
                      - template: vacuum_goto
                      - template: vacuum_clean_zone_predefined
                        predefined_selections:
                          - zones:
                              - - 27589
                                - 24459
                                - 30627
                                - 27454
                          - zones:
                              - - 22780
                                - 21316
                                - 26598
                                - 24332
                          - zones:
                              - - 27589
                                - 21505
                                - 31217
                                - 24374
                          - zones:
                              - - 22864
                                - 17730
                                - 31112
                                - 21231
                          - zones:
                              - - 25227
                                - 24501
                                - 27526
                                - 25809
                          - zones:
                              - - 26661
                                - 21442
                                - 27547
                                - 24501
                    map_locked: true
                    two_finger_pan: false
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    border-radius: 30px !important;
                    padding: 4px;
                  }
                cards:
                  - type: custom:button-card
                    entity: script.aspi_r2d2_reset_brosse_principale
                    show_label: false
                    name: Brosse principale
                    icon: mdi:robot-vacuum-variant
                    template:
                      - mini_card
                    confirmation:
                      text: '[[[ return `R2D2 Reset de la brosse principale ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_r2d2_reset_brosse_principale
                  - type: custom:button-card
                    show_label: false
                    entity: script.aspi_r2d2_reset_brosse_laterale
                    name: Brosse latérale
                    icon: mdi:broom
                    template:
                      - mini_card
                    confirmation:
                      text: '[[[ return `R2D2 Reset de la brosse latérale ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_r2d2_reset_brosse_laterale
                  - type: custom:button-card
                    entity: script.aspi_r2d2_reset_capteurs
                    icon: mdi:state-machine
                    show_label: false
                    name: Capteurs
                    template:
                      - mini_card
                    confirmation:
                      text: '[[[ return `R2D2 Reset des capteurs ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_r2d2_reset_capteurs
                  - type: custom:button-card
                    entity: script.aspi_r2d2_reset_filtre
                    name: Filtre
                    show_label: false
                    icon: mdi:air-filter
                    template:
                      - mini_card
                    confirmation:
                      text: '[[[ return `R2D2 Reset du filtre ?` ]]]'
                    tap_action:
                      action: call-service
                      service: script.turn_on
                      service_data:
                        entity_id: script.aspi_r2d2_reset_filtre
  - theme: Backend-selected
    title: Temperature
    path: Temp
    icon: mdi:thermometer
    subview: false
    layout:
      width: 350
      max_cols: 3
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: custom:button-card
            template:
              - title_card
            name: Rez-de-chaussée
            styles:
              name:
                - justify-self: middle
          - square: false
            type: grid
            cards:
              - type: custom:button-card
                variables:
                  name: Séjour
                  icon: mdi:sofa
                  temp: sensor.temp_sejour
                  hum: sensor.hum_sejour
                template:
                  - climat_card
              - type: custom:button-card
                variables:
                  name: Couloir
                  icon: phu:rooms-hallway
                  temp: sensor.temp_couloir_rdc
                  hum: sensor.hum_couloir_rdc
                template:
                  - climat_card
              - type: custom:button-card
                variables:
                  name: Cuisine
                  icon: mdi:food
                  temp: sensor.temp_cuisine
                  hum: sensor.hum_cuisine
                template:
                  - climat_card
              - type: custom:button-card
                variables:
                  name: Parents
                  icon: mdi:bed-king
                  temp: sensor.temp_parents
                  hum: sensor.hum_parents
                template:
                  - climat_card
              - type: custom:button-card
                variables:
                  name: Garage
                  icon: mdi:garage
                  temp: sensor.sonde_garage_temperature
                  hum: sensor.sonde_garage_humidite
                template:
                  - climat_card
              - type: custom:button-card
                variables:
                  name: Moniteur air
                  icon: mdi:blur
                  temp: sensor.moniteur_qualite_air_temperature
                  hum: sensor.moniteur_qualite_air_humidite
                template:
                  - climat_card
            columns: 2
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: custom:button-card
            template:
              - title_card
            name: Etage
            styles:
              name:
                - justify-self: middle
          - square: false
            type: grid
            cards:
              - type: custom:button-card
                variables:
                  name: Salle de Bain
                  icon: mdi:shower
                  temp: sensor.temp_salle_de_bain
                  hum: sensor.hum_salle_de_bain
                template:
                  - climat_card
              - type: custom:button-card
                variables:
                  name: Tom
                  icon: mdi:bat
                  temp: sensor.temp_tom
                  hum: sensor.hum_tom
                template:
                  - climat_card
              - type: custom:button-card
                variables:
                  name: Manon
                  icon: mdi:death-star
                  temp: sensor.temp_manon
                  hum: sensor.hum_manon
                template:
                  - climat_card
              - type: custom:button-card
                variables:
                  name: Nina
                  icon: mdi:owl
                  temp: sensor.temp_nina
                  hum: sensor.hum_nina
                template:
                  - climat_card
            columns: 2
  - theme: Backend-selected
    title: Lumières
    path: Lumières
    icon: mdi:lightbulb-group
    visible:
      - user: d8316597eafd4333b737464a5b4c62d0
      - user: 76afcf1927a948b19530bcbf1074ac59
      - user: 2f0040afe95a4514ade3c049a0b5d479
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    subview: false
    badge_cards:
      - entity: sensor.plante_lum_dracaena
        name: Dracaena
        style: |
          :host {
            --label-badge_card-red: 
              {% if states('sensor.plante_lum_dracaena') | float < 90 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}      
      - entity: sensor.plante_lum_pied_elephant
        name: Pied d'Elephant
        style: |
          :host {
            --label-badge_card-red: 
              {% if states('sensor.plante_lum_pied_elephant') | float < 90 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}    
      - entity: sensor.salle_a_manger_luminosite
        name: SaM
        style: |
          :host {
            --label-badge_card-red: 
              {% if states('sensor.salle_a_manger_luminosite') | float < 90 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}         
      - entity: sensor.mouv_tom_luminosite
        name: Tom
        style: |
          :host {
            --label-badge_card-red: 
              {% if states('sensor.mouv_tom_luminosite') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %} 
      - entity: sensor.mouv_manon_luminosite
        name: Manon
        style: |
          :host {
            --label-badge_card-red: 
              {% if states('sensor.mouv_nina_luminosite') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}   
      - entity: sensor.mouv_leane_luminosite
        name: Léane
        style: |
          :host {
            --label-badge_card-red: 
              {% if states('sensor.mouv_nina_luminosite') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %}               
      - entity: sensor.mouv_nina_luminosite
        name: Nina
        style: |
          :host {
            --label-badge_card-red: 
              {% if states('sensor.mouv_nina_luminosite') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %} 
      - entity: sensor.mouv_palier_lum
        name: Palier
        style: |
          :host {
            --label-badge_card-red: 
              {% if states('sensor.mouv_palier_lum') | float < 50 %}
                rgba(0,191,205,0.5)
              {% else %} 
                rgba(240,52,52,0.5)
              {% endif %} 
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: custom:button-card
            template:
              - title_card
            name: |
              [[[ return "Rez-de-chaussée " ]]]
          - type: vertical-stack
            cards:
              - square: false
                type: grid
                columns: 2
                cards:
                  - entity: light.veranda
                    type: custom:button-card
                    name: Véranda
                    template:
                      - ball_light_card
                      - light_card_state
                    double_tap_action:
                      action: navigate
                      navigation_path: /lovelace/Entrée
                  - entity: light.entree
                    type: custom:button-card
                    name: Entrée
                    template:
                      - ball_light_card
                      - light_card_state
                    double_tap_action:
                      action: navigate
                      navigation_path: /lovelace/Entrée
                  - entity: light.sejour
                    icon: mdi:sofa
                    name: Séjour
                    type: custom:button-card
                    template:
                      - ball_light_card
                      - light_card_state
                    double_tap_action:
                      action: navigate
                      navigation_path: /lovelace/Séjour
                  - entity: light.couloir
                    type: custom:button-card
                    name: Couloir
                    template:
                      - ball_light_card
                      - light_card_state
                    double_tap_action:
                      action: navigate
                      navigation_path: /lovelace/Entrée
                  - entity: light.cagibi
                    name: Cagibi
                    type: custom:button-card
                    template:
                      - ball_light_card
                      - light_card_state
                    double_tap_action:
                      action: navigate
                      navigation_path: /lovelace/Garage
                  - entity: light.parents
                    name: Parents
                    icon: mdi:bed-double
                    type: custom:button-card
                    template:
                      - ball_light_card
                      - light_card_state
                    double_tap_action:
                      action: navigate
                      navigation_path: /lovelace/Parents
                  - entity: light.lavabo
                    name: Lavabo
                    icon: mdi:toilet
                    type: custom:button-card
                    template:
                      - ball_light_card
                      - light_card_state
                    double_tap_action:
                      action: navigate
                      navigation_path: /lovelace/Lavabo
                  - entity: light.escalier
                    name: Escalier
                    icon: mdi:stairs
                    type: custom:button-card
                    template:
                      - ball_light_card
                      - light_card_state
                    double_tap_action:
                      action: navigate
                      navigation_path: /lovelace/Escalier
          - entity: light.aqara_hub_54e1
            name: Veilleuse
            type: custom:button-card
            template:
              - ball_light_card
              - light_card_state
            double_tap_action:
              action: navigate
              navigation_path: /lovelace/Entrée
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: custom:button-card
            template:
              - title_card
            name: |
              [[[ return "Etage " ]]]
          - type: vertical-stack
            cards:
              - square: false
                type: grid
                columns: 2
                cards:
                  - entity: light.palier
                    name: Palier
                    icon: mdi:stairs
                    type: custom:button-card
                    template:
                      - ball_light_card
                      - light_card_state
                    double_tap_action:
                      action: navigate
                      navigation_path: /lovelace/Escalier
                  - entity: light.tom
                    name: Tom
                    icon: mdi:bat
                    type: custom:button-card
                    template:
                      - ball_light_card
                      - light_card_state
                    double_tap_action:
                      action: navigate
                      navigation_path: /lovelace/Tom
                  - entity: light.manon_et_leane
                    name: Manon Léane
                    type: custom:button-card
                    template:
                      - ball_light_card
                      - light_card_state
                    double_tap_action:
                      action: navigate
                      navigation_path: /lovelace/Manon Léane
                  - entity: light.nina
                    name: Nina
                    icon: mdi:owl
                    type: custom:button-card
                    template:
                      - ball_light_card
                      - light_card_state
                    double_tap_action:
                      action: navigate
                      navigation_path: /lovelace/Nina
  - theme: Backend-selected
    subview: true
    title: Energie
    path: Energie
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:flash
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 330
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:flash
                    layout: icon|name
                    name: Électricité
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    cards:
                      - type: custom:content-card-linky
                        nbJoursAffichage: '7'
                        entity: sensor.myenedis_09xxxxxxxxx5420
                        ewEntity: sensor.myenedis_09xxxxxxxxx5420_ecowatt
                        titleName: Électricité (hors abo)
                        showDayName: short
                        showInTableUnit: false
                        showPeakOffPeak: false
                        showHistory: true
                        showDayPrice: true
                        showDayPriceHCHP: false
                        showDayHCHP: false
                        showIcon: false
                        kWhPrice: false
                        showtitle: true
                        showEcoWatt: true
                        showTitle: false
                        showPrice: true
                        showTitreLigne: true
                        showError: true
                        showYesterdayRatio: true
                        showWeekRatio: false
                        showCurrentMonthRatio: false
                        style: |
                          ha-card {
                            color: lightgrey ;
                            font-size: 12px;
                            font-family: Avenir;
              - type: custom:apexcharts-card
                graph_span: 7d
                span:
                  offset: '-1day'
                experimental:
                  color_threshold: true
                apex_config:
                  legend:
                    show: false
                  stroke:
                    width: 1
                  xaxis:
                    labels:
                      hideOverlappingLabels: true
                      showDuplicatges: true
                      show: true
                  dataLabels:
                    offsetY: -5
                    background:
                      enabled: true
                    style:
                      colors:
                        - rgba(0,0,0,0.4)
                  plotOptions:
                    bar:
                      borderRadius: 5
                      dataLabels:
                        position: top
                header:
                  show: true
                  title: ''
                  show_states: true
                  standard_format: false
                  colorize_states: true
                yaxis:
                  - id: first
                    decimals: 0
                    apex_config:
                      tickAmount: 4
                  - id: second
                    opposite: true
                    decimals: 2
                    apex_config:
                      tickAmount: 4
                    min: ~0
                series:
                  - entity: sensor.electricite_conso_veille
                    yaxis_id: first
                    type: column
                    offset: +1day
                    show:
                      name_in_header: false
                      datalabels: true
                      legend_value: false
                      header_color_threshold: true
                    group_by:
                      func: max
                      duration: 1d
                    opacity: 0.8
                    float_precision: 2
                    color_threshold:
                      - value: 0
                        color: rgb(176, 196, 222)
                      - value: 5
                        color: rgb(70, 130, 180)
                      - value: 10
                        color: orange
                      - value: 15
                        color: rgb(180, 70, 70)
                      - value: 20
                        color: firebrick
                  - entity: sensor.electricite_cout_jour_avec_abo
                    yaxis_id: second
                    offset: +1day
                    show:
                      name_in_header: false
                      datalabels: false
                      legend_value: false
                      header_color_threshold: true
                    unit: € abo inclus
                    type: area
                    curve: smooth
                    fill_raw: last
                    color: rgb(0,191,255)
                    opacity: 0.2
                    float_precision: 2
                    name: Cout
                    group_by:
                      func: max
                      duration: 1d
                style: |
                  ha-card {
                    font-family: Avenir;
  - theme: Backend-selected
    title: Alarmes
    path: Alarmes
    icon: mdi:shield-lock-open-outline
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    subview: true
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:shield-home
                    layout: icon|name
                    name: Sécurité
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Alarmes" ]]]
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                    border-radius: var(--ha-card-border-radius) !important;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none ;
                      }      
                    cards:
                      - type: custom:vertical-stack-in-card
                        horizontal: true
                        style: |
                          ha-card { 
                            background-color: var(--card-background-color);
                          } 
                        cards:
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px !important;

                              }       
                            cards:
                              - type: custom:button-card
                                entity: alarm_control_panel.alarme
                                name: Alarme
                                icon: |
                                  [[[
                                    if (entity.state == "disarmed" )
                                      return "mdi:shield-off";
                                    if (entity.state == "armed_away" )
                                      return "mdi:shield-lock";
                                    if (entity.state == "armed_home" )
                                      return "mdi:shield-home";
                                    if (entity.state == "armed_night" )
                                      return "mdi:shield-moon";
                                    if (entity.state == "arming" )
                                      return "mdi:shield-half-full";
                                    if (entity.state == "triggered" )
                                      return "mdi:shield-alert";
                                    return "mdi:shield-off";
                                  ]]]
                                template:
                                  - ball_card
                                  - custom_state
                                  - security_card_state
                                tap_action:
                                  action: more-info
                                double_tap_action:
                                  action: navigate
                                  navigation_path: /lovelace/Alarmes
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px !important;
                              }        
                            cards:
                              - type: custom:button-card
                                entity: alarm_control_panel.aarlo_sonnette
                                template:
                                  - ball_card
                                  - custom_state
                                  - security_card_state
                                name: |
                                  [[[ return "Sonnette"]]]
                                icon: phu:arlo-video-doorbell
                                tap_action:
                                  action: more-info
                                double_tap_action:
                                  action: navigate
                                  navigation_path: /lovelace/Alarmes
                                custom_fields:
                                  notification: >
                                    [[[ return
                                    Math.floor(states['sensor.aarlo_battery_level_sonnette'].state
                                    ) ]]]
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Personnes" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        entity: person.herve
                        name: Aurel
                        label: |
                          [[[return states["sensor.aurel_gps_simple"].state]]]
                        template:
                          - ball_card
                          - person_state
                        show_entity_picture: true
                        show_label: true
                        show_state: false
                        styles:
                          entity_picture:
                            - width: 100%
                            - border-radius: 100%
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Personnes
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        entity: person.alex
                        name: Alex
                        label: |
                          [[[return states["sensor.alex_gps_simple"].state]]]
                        template:
                          - ball_card
                          - person_state
                        show_entity_picture: true
                        show_label: true
                        show_state: false
                        styles:
                          entity_picture:
                            - width: 100%
                            - border-radius: 100%
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Personnes
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        entity: person.tom
                        name: Tom
                        label: |
                          [[[return states["sensor.tom_gps"].state]]]
                        template:
                          - ball_card
                          - person_state
                        show_entity_picture: true
                        show_label: true
                        show_state: false
                        styles:
                          entity_picture:
                            - width: 100%
                            - border-radius: 100%
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Personnes
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        entity: person.manon
                        name: Manon
                        label: |
                          [[[return states["sensor.manon_gps"].state]]]
                        template:
                          - ball_card
                          - person_state
                        show_entity_picture: true
                        show_label: true
                        show_state: false
                        styles:
                          entity_picture:
                            - width: 100%
                            - border-radius: 100%
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/Personnes
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.portes
                        name: Portes
                        template:
                          - ball_card
                          - security_card_state
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_portes'].state)
                            ]]]              
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/porte_mouv_serrure
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouvements
                        name: Mouvement
                        template:
                          - ball_card
                          - custom_state
                          - security_card_state
                        custom_fields:
                          notification: >
                            [[[ return
                            Math.floor(states['sensor.compteur_mouvement'].state)
                            ]]]               
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/porte_mouv_serrure
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        entity: lock.serrure_entree
                        name: |
                          [[[ return "Entrée"  ]]]
                        template:
                          - ball_card
                          - security_card_state
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/porte_mouv_serrure
                        double_tap_action:
                          action: call-service
                          service: script.entree_serrure_toggle
                          service_data: null
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        entity: lock.garage
                        name: |
                          [[[ return "Garage"]]]
                        template:
                          - ball_card
                          - security_card_state
                        tap_action:
                          action: navigate
                          navigation_path: /lovelace/porte_mouv_serrure
                        double_tap_action:
                          action: call-service
                          service: script.garage_serrure_toggle
                          service_data: null
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        entity: siren.sirene_heiman
                        name: Salon
                        template:
                          - ball_card
                          - security_card_state
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        entity: siren.frient
                        name: Garage
                        template:
                          - ball_card
                          - security_card_state
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:video
                    layout: icon|name
                    name: Direct {{ now().strftime("%H:%M") }}
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                    border-radius: var(--ha-card-border-radius) !important;
                  }
                cards:
                  - type: custom:webrtc-camera
                    entity: camera.camera_entree
                    muted: true
                    ui: true
                    background: true
                    shortcuts:
                      - name: Lumière
                        icon: mdi:lightbulb
                        service: light.toggle
                        service_data:
                          entity_id: light.entree
                    style: |

                      ha-card { 
                        margin: 5px 0px 15px 0px;
                        border-radius: 24px !important;
                      }
                  - type: picture-glance
                    title: Salon
                    camera_image: camera.camera_sejour
                    camera_view: live
                    aspect_ratio: 60%
                    entities:
                      - entity: binary_sensor.camera_sejour_mouv
                      - entity: alarm_control_panel.camera_sejour_security_system
                    style: |
                      ha-card > div.box {
                        background: none;
                        --mdc-icon-size: 20px;
                        font-size: 0px;
                        width: 40%;
                      }
                      ha-card { 
                        margin: 5px 0px 15px 0px;
                        border-radius: 24px !important;
                      }
                  - type: picture-glance
                    title: Garage
                    camera_image: camera.camera_g2hpro
                    camera_view: live
                    aspect_ratio: 60%
                    entities:
                      - entity: binary_sensor.mouv_camera_g2hpro
                      - entity: alarm_control_panel.camera_g2hpro
                    style: |
                      ha-card > div.box {
                        font-family: Avenir;
                        background: none;
                        --mdc-icon-size: 20px;
                        font-size: 0px;
                        width: 40%;
                      }
                      ha-card { 
                        margin: 5px 0px 15px 0px;
                        border-radius: 24px !important;
                      }
      - type: entities
        entities:
          - type: custom:paper-buttons-row
            buttons:
              - icon: mdi:filmstrip
                layout: icon|name
                name: Enregistrements
                style:
                  name:
                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                    margin-left: 18px
                    font-size: 15px
                    font-weight: 600
                    color: var(--title)
                  icon:
                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                    '--mdc-icon-size': 20px
                    color: var(--title)
                tap_action:
                  action: navigate
                  navigation_path: /media-browser
              - icon: mdi:close
                layout: icon
                tap_action:
                  action: navigate
                  navigation_path: /
                style:
                  icon:
                    '--mdc-icon-size': 15px
            style: |
              div.flex-box {
                margin-top: -6px;
                display: flex;
                justify-content: space-between;
                align-items: center;
              }
          - type: custom:button-card
            template:
              - title_card
            name: |
              [[[ return "Alarme activée" ]]]
          - type: custom:vertical-stack-in-card
            style: |
              ha-card { 
                background-color: var(--card-background-color);
                box-shadow: none;
                border-radius: var(--ha-card-border-radius) !important;
              }
            cards:
              - square: false
                columns: 2
                type: grid
                cards:
                  - show_state: false
                    show_name: false
                    camera_view: live
                    type: picture-entity
                    entity: camera.entreealarme_verifiee
                    style: |
                      ha-card > div.box {
                        background: none;
                      }
                      ha-card { 
                        margin: 05px 0px 0px 0px;
                        border-radius: 24px !important;
                      }
                  - show_state: false
                    show_name: false
                    camera_view: live
                    type: picture-entity
                    entity: camera.sejouralarme_verifiee
                    style: |
                      ha-card > div.box {
                        background: none;
                      }
                      ha-card { 
                        margin: 5px 0px 0px 0px;
                        border-radius: 24px !important;
                      }
                  - type: markdown
                    content: >-
                      {% set aujourd_hui = now().strftime("%d/%m" ) %} {% set
                      horodatage_formate =
                      as_timestamp(states('input_datetime.horodatage_cam_entree_alarme'))
                      | timestamp_custom("%d/%m" ) %} {% set
                      horodatage_aujourd_hui =
                      as_timestamp(states('input_datetime.horodatage_cam_entree_alarme'))
                      | timestamp_custom("Aujourd'hui à %H:%M" ) %} {% set
                      horodatage =
                      as_timestamp(states('input_datetime.horodatage_cam_entree_alarme'))
                      | timestamp_custom("%a %d/%m à %H:%M" ) 
                       | replace('Mon','Lun.') | replace('Tue', 'Mar.') | replace('Wed', 'Mer.') | replace('Thu', 'Jeu.') | replace('Fri','Ven.') | replace('Sat', 'Sam.') | replace('Sun', 'Dim.') %}
                      {% if  aujourd_hui  ==  horodatage_formate  -%}
                        {{ horodatage_aujourd_hui  }}
                      {%- else%}
                        {{ horodatage }}
                      {%- endif %}
                    style: |
                      ha-card {
                        background-color: var(--card-background-color);
                        box-shadow: none;
                        font-family: Avenir;
                        font-size: 12px;
                        color: var(--text-off);
                        display: flex; 
                        flex-direction: column; 
                        align-items: center; 
                        justify-content: center; 
                      }
                      ha-card.type-markdown {
                        height: 20px;
                      }
                  - type: markdown
                    content: >-
                      {% set aujourd_hui = now().strftime("%d/%m" ) %} {% set
                      horodatage_formate =
                      as_timestamp(states('input_datetime.horodatage_cam_sejour_alarme'))
                      | timestamp_custom("%d/%m" ) %} {% set
                      horodatage_aujourd_hui =
                      as_timestamp(states('input_datetime.horodatage_cam_sejour_alarme'))
                      | timestamp_custom("Aujourd'hui à %H:%M" ) %} {% set
                      horodatage =
                      as_timestamp(states('input_datetime.horodatage_cam_sejour_alarme'))
                      | timestamp_custom("%a %d/%m à %H:%M" ) 
                       | replace('Mon','Lun.') | replace('Tue', 'Mar.') | replace('Wed', 'Mer.') | replace('Thu', 'Jeu.') | replace('Fri','Ven.') | replace('Sat', 'Sam.') | replace('Sun', 'Dim.') %}
                      {% if  aujourd_hui  ==  horodatage_formate  -%}
                        {{ horodatage_aujourd_hui  }}
                      {%- else%}
                        {{ horodatage }}
                      {%- endif %}
                    style: |
                      ha-card {
                        background-color: var(--card-background-color);
                        box-shadow: none;
                        font-family: Avenir;
                        font-size: 12px;
                        color: var(--text-off);
                        display: flex; 
                        flex-direction: column; 
                        align-items: center; 
                        justify-content: center; 
                      }
                      ha-card.type-markdown {
                        height: 20px;
                      }
                  - show_state: false
                    show_name: false
                    camera_view: live
                    type: picture-entity
                    entity: camera.sonnettealarme_detection
                    style: |
                      ha-card > div.box {
                        background: none;
                      }
                      ha-card { 
                        margin: 5px 0px 0px 0px;
                        border-radius: 24px !important;
                      }
                  - show_state: false
                    show_name: false
                    camera_view: live
                    type: picture-entity
                    entity: camera.garagealarme_verifiee
                    style: |
                      ha-card > div.box {
                        background: none;
                      }
                      ha-card { 
                        margin: 5px 0px 0px 0px;
                        border-radius: 24px !important;
                      }
                  - type: markdown
                    content: >-
                      {% set aujourd_hui = now().strftime("%d/%m" ) %} {% set
                      horodatage_formate =
                      as_timestamp(states('input_datetime.horodatage_cam_sonnette_alarme'))
                      | timestamp_custom("%d/%m" ) %} {% set
                      horodatage_aujourd_hui =
                      as_timestamp(states('input_datetime.horodatage_cam_sonnette_alarme'))
                      | timestamp_custom("Aujourd'hui à %H:%M" ) %} {% set
                      horodatage =
                      as_timestamp(states('input_datetime.horodatage_cam_sonnette_alarme'))
                      | timestamp_custom("%a %d/%m à %H:%M" ) 
                       | replace('Mon','Lun.') | replace('Tue', 'Mar.') | replace('Wed', 'Mer.') | replace('Thu', 'Jeu.') | replace('Fri','Ven.') | replace('Sat', 'Sam.') | replace('Sun', 'Dim.') %}
                      {% if  aujourd_hui  ==  horodatage_formate  -%}
                        {{ horodatage_aujourd_hui  }}
                      {%- else%}
                        {{ horodatage }}
                      {%- endif %}
                    style: |
                      ha-card {
                        background-color: var(--card-background-color);
                        box-shadow: none;
                        font-family: Avenir;
                        font-size: 12px;
                        color: var(--text-off);
                        display: flex; 
                        flex-direction: column; 
                        align-items: center; 
                        justify-content: center; 
                      }
                      ha-card.type-markdown {
                        height: 20px;
                      }
                  - type: markdown
                    content: >-
                      {% set aujourd_hui = now().strftime("%d/%m" ) %} {% set
                      horodatage_formate =
                      as_timestamp(states('input_datetime.horodatage_cam_garage_alarme'))
                      | timestamp_custom("%d/%m" ) %} {% set
                      horodatage_aujourd_hui =
                      as_timestamp(states('input_datetime.horodatage_cam_garage_alarme'))
                      | timestamp_custom("Aujourd'hui à %H:%M" ) %} {% set
                      horodatage =
                      as_timestamp(states('input_datetime.horodatage_cam_garage_alarme'))
                      | timestamp_custom("%a %d/%m à %H:%M" ) 
                       | replace('Mon','Lun.') | replace('Tue', 'Mar.') | replace('Wed', 'Mer.') | replace('Thu', 'Jeu.') | replace('Fri','Ven.') | replace('Sat', 'Sam.') | replace('Sun', 'Dim.') %}
                      {% if  aujourd_hui  ==  horodatage_formate  -%}
                        {{ horodatage_aujourd_hui  }}
                      {%- else%}
                        {{ horodatage }}
                      {%- endif %}
                    style: |
                      ha-card {
                        background-color: var(--card-background-color);
                        box-shadow: none;
                        font-family: Avenir;
                        font-size: 12px;
                        color: var(--text-off);
                        display: flex; 
                        flex-direction: column; 
                        align-items: center; 
                        justify-content: center; 
                      }
                      ha-card.type-markdown {
                        height: 20px;
                      }
          - type: divider
            style:
              height: 0.5px
              width: 100%
              margin-left: auto
              margin-right: auto
              margin-top: 15px
              margin-bottom: 15px
              background: rgba(255,255,255,0.3)
          - type: custom:button-card
            template:
              - title_card
            name: |
              [[[ return "Alarme désactivée" ]]]
          - type: custom:vertical-stack-in-card
            style: |
              ha-card { 
                background-color: var(--card-background-color);
                box-shadow: none;
              }  
            cards:
              - square: false
                columns: 2
                type: grid
                cards:
                  - show_state: false
                    show_name: false
                    camera_view: live
                    type: picture-entity
                    entity: camera.entree_verifiee
                    style: |
                      ha-card > div.box {
                        background: none;
                      }
                      ha-card { 
                        margin: 05px 0px 0px 0px;
                        border-radius: 24px !important;
                      }
                  - show_state: false
                    show_name: false
                    camera_view: live
                    type: picture-entity
                    entity: camera.sejour_verifiee
                    style: |
                      ha-card > div.box {
                        background: none;
                      }
                      ha-card { 
                        margin: 5px 0px 0px 0px;
                        border-radius: 24px !important;
                      }
                  - type: markdown
                    content: >-
                      {% set aujourd_hui = now().strftime("%d/%m" ) %} {% set
                      horodatage_formate =
                      as_timestamp(states('input_datetime.horodatage_cam_entree'))
                      | timestamp_custom("%d/%m" ) %} {% set
                      horodatage_aujourd_hui =
                      as_timestamp(states('input_datetime.horodatage_cam_entree'))
                      | timestamp_custom("Aujourd'hui à %H:%M" ) %} {% set
                      horodatage =
                      as_timestamp(states('input_datetime.horodatage_cam_entree'))
                      | timestamp_custom("%a %d/%m à %H:%M" ) 
                       | replace('Mon','Lun.') | replace('Tue', 'Mar.') | replace('Wed', 'Mer.') | replace('Thu', 'Jeu.') | replace('Fri','Ven.') | replace('Sat', 'Sam.') | replace('Sun', 'Dim.') %}
                      {% if  aujourd_hui  ==  horodatage_formate  -%}
                        {{ horodatage_aujourd_hui  }}
                      {%- else%}
                        {{ horodatage }}
                      {%- endif %}
                    style: |
                      ha-card {
                        background-color: var(--card-background-color);
                        box-shadow: none;
                        font-family: Avenir;
                        font-size: 12px;
                        color: var(--text-off);
                        display: flex; 
                        flex-direction: column; 
                        align-items: center; 
                        justify-content: center; 
                      }
                      ha-card.type-markdown {
                        height: 20px;
                      }
                  - type: markdown
                    content: >-
                      {% set aujourd_hui = now().strftime("%d/%m" ) %} {% set
                      horodatage_formate =
                      as_timestamp(states('input_datetime.horodatage_cam_sejour'))
                      | timestamp_custom("%d/%m" ) %} {% set
                      horodatage_aujourd_hui =
                      as_timestamp(states('input_datetime.horodatage_cam_sejour'))
                      | timestamp_custom("Aujourd'hui à %H:%M" ) %} {% set
                      horodatage =
                      as_timestamp(states('input_datetime.horodatage_cam_sejour'))
                      | timestamp_custom("%a %d/%m à %H:%M" ) 
                       | replace('Mon','Lun.') | replace('Tue', 'Mar.') | replace('Wed', 'Mer.') | replace('Thu', 'Jeu.') | replace('Fri','Ven.') | replace('Sat', 'Sam.') | replace('Sun', 'Dim.') %}
                      {% if  aujourd_hui  ==  horodatage_formate  -%}
                        {{ horodatage_aujourd_hui  }}
                      {%- else%}
                        {{ horodatage }}
                      {%- endif %}
                    style: |
                      ha-card {
                        background-color: var(--card-background-color);
                        box-shadow: none;
                        font-family: Avenir;
                        font-size: 12px;
                        color: var(--text-off);
                        display: flex; 
                        flex-direction: column; 
                        align-items: center; 
                        justify-content: center; 
                      }
                      ha-card.type-markdown {
                        height: 20px;
                      }
                  - show_state: false
                    show_name: false
                    camera_view: live
                    type: picture-entity
                    entity: camera.sonnette_detection
                    style: |
                      ha-card > div.box {
                        background: none;
                      }
                      ha-card { 
                        margin: 5px 0px 0px 0px;
                        border-radius: 24px !important;
                        
                      }
                  - show_state: false
                    show_name: false
                    camera_view: live
                    type: picture-entity
                    entity: camera.garage_verifiee
                    style: |
                      ha-card > div.box {
                        background: none;
                      }
                      ha-card { 
                        margin: 5px 0px 0px 0px;
                        border-radius: 24px !important;
                      }
                  - type: markdown
                    content: >-
                      {% set aujourd_hui = now().strftime("%d/%m" ) %} {% set
                      horodatage_formate =
                      as_timestamp(states('input_datetime.horodatage_cam_sonnette'))
                      | timestamp_custom("%d/%m" ) %} {% set
                      horodatage_aujourd_hui =
                      as_timestamp(states('input_datetime.horodatage_cam_sonnette'))
                      | timestamp_custom("Aujourd'hui à %H:%M" ) %} {% set
                      horodatage =
                      as_timestamp(states('input_datetime.horodatage_cam_sonnette'))
                      | timestamp_custom("%a %d/%m à %H:%M" ) 
                       | replace('Mon','Lun.') | replace('Tue', 'Mar.') | replace('Wed', 'Mer.') | replace('Thu', 'Jeu.') | replace('Fri','Ven.') | replace('Sat', 'Sam.') | replace('Sun', 'Dim.') %}
                      {% if  aujourd_hui  ==  horodatage_formate  -%}
                        {{ horodatage_aujourd_hui  }}
                      {%- else%}
                        {{ horodatage }}
                      {%- endif %}
                    style: |
                      ha-card {
                        background-color: var(--card-background-color);
                        box-shadow: none;
                        font-family: Avenir;
                        font-size: 12px;
                        color: var(--text-off);
                        display: flex; 
                        flex-direction: column; 
                        align-items: center; 
                        justify-content: center; 
                      }
                      ha-card.type-markdown {
                        height: 20px;
                      }
                  - type: markdown
                    content: >-
                      {% set aujourd_hui = now().strftime("%d/%m" ) %} {% set
                      horodatage_formate =
                      as_timestamp(states('input_datetime.horodatage_cam_garage'))
                      | timestamp_custom("%d/%m" ) %} {% set
                      horodatage_aujourd_hui =
                      as_timestamp(states('input_datetime.horodatage_cam_garage'))
                      | timestamp_custom("Aujourd'hui à %H:%M" ) %} {% set
                      horodatage =
                      as_timestamp(states('input_datetime.horodatage_cam_garage'))
                      | timestamp_custom("%a %d/%m à %H:%M" ) 
                       | replace('Mon','Lun.') | replace('Tue', 'Mar.') | replace('Wed', 'Mer.') | replace('Thu', 'Jeu.') | replace('Fri','Ven.') | replace('Sat', 'Sam.') | replace('Sun', 'Dim.') %}
                      {% if  aujourd_hui  ==  horodatage_formate  -%}
                        {{ horodatage_aujourd_hui  }}
                      {%- else%}
                        {{ horodatage }}
                      {%- endif %}
                    style: |
                      ha-card {
                        background-color: var(--card-background-color);
                        box-shadow: none;
                        font-family: Avenir;
                        font-size: 12px;
                        color: var(--text-off);
                        display: flex; 
                        flex-direction: column; 
                        align-items: center; 
                        justify-content: center; 
                      }
                      ha-card.type-markdown {
                        height: 20px;
                      }
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:doorbell-video
                    layout: icon|name
                    name: Sonnette
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                    border-radius: var(--ha-card-border-radius) !important;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    cards:
                      - entity: camera.aarlo_sonnette
                        title: Sonnette
                        hide:
                          - date
                        global: small
                        image_click: play
                        image_view: arlo-stream
                        show:
                          - motion
                          - sound
                          - image_date
                          - signal_strength
                          - captured_today
                          - image_date
                          - on_off
                          - snapshot
                          - battery_level
                        top_date: true
                        top_status: false
                        top_title: false
                        type: custom:aarlo-glance
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        box-shadow: none !important;
                        background-color: var(--card-background-color);     
                      }
                    cards:
                      - type: custom:button-card
                        variables:
                          entity: sensor.aarlo_battery_level_sonnette
                        name: Batterie
                        template:
                          - battery_level_card
                        styles:
                          card:
                            - margin-bottom: 10px
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: sensor.aarlo_signal_strength_sonnette
                        name: Signal
                        state:
                          - value: 3
                            operator: <
                            icon: mdi:signal-cellular-outline
                            styles:
                              img_cell:
                                - background-color: var(--color-img-cell-red)
                              icon:
                                - color: var(--color-icon-red)
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - custom_state
                          - security_card_state
                        entity: binary_sensor.aarlo_motion_sonnette
                        name: Mouvement
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: sensor.aarlo_last_sonnette
                        name: Dernier
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: binary_sensor.aarlo_ding_sonnette
                        name: Ding !
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: switch.aarlo_snapshot_sonnette
                        name: Capture
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                        entity: sensor.aarlo_captured_today_sonnette
                        name: Aujourd'hui
                        state:
                          - value: 0
                            operator: '>'
                            styles:
                              icon:
                                - color: var(--color-red)
                              img_cell:
                                - background-color: var(--color-img-cell-red)
                              card:
                                - background-color: var(--color-card-red)
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: camera.aarlo_sonnette
                        name: Caméra
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: switch.aarlo_siren_sonnette
                        name: Sirène
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: binary_sensor.aarlo_connected_sonnette
                        name: Statut
  - theme: Backend-selected
    title: Batteries
    path: batteries
    icon: mdi:battery
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:cellphone-charging
                        layout: icon|name
                        name: Tel, tablette et ordi
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        padding: 2px;
                        box-shadow: none;
                      }   
                    cards:
                      - type: grid
                        square: false
                        columns: 3
                        cards:
                          - type: custom:button-card
                            variables:
                              entity: sensor.iphone_aurel_battery_level
                            name: Aurel
                            template:
                              - battery_level_card
                          - type: custom:button-card
                            variables:
                              entity: sensor.ipad_aurel_battery_level
                            name: iPad
                            template:
                              - battery_level_card
                          - type: custom:button-card
                            variables:
                              entity: sensor.macbook_aurel_internal_battery_level
                            name: Mac Aurel
                            template:
                              - battery_level_card
                          - type: custom:button-card
                            variables:
                              entity: sensor.alex_iphone_battery_level_ha
                            name: Alex
                            template:
                              - battery_level_card
                          - type: custom:button-card
                            variables:
                              entity: sensor.macbook_alex_internal_battery_level
                            name: Mac Alex
                            template:
                              - battery_level_card
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:home-battery
                        layout: icon|name
                        name: Appareils
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        padding: 2px;
                        box-shadow: none;
                      }   
                    cards:
                      - type: grid
                        square: false
                        columns: 3
                        cards:
                          - type: custom:button-card
                            variables:
                              entity: sensor.serrure_entree_batterie
                            name: Serrure entrée
                            template:
                              - battery_level_card
                          - type: custom:button-card
                            variables:
                              entity: sensor.lock_2c8e_battery
                            name: Serrure garage
                            template:
                              - battery_level_card
                          - type: custom:button-card
                            variables:
                              entity: sensor.aarlo_battery_level_sonnette
                            name: Sonnette
                            template:
                              - battery_level_card
                          - type: custom:button-card
                            variables:
                              entity: sensor.moniteur_qualite_air_batterie
                            name: Air
                            template:
                              - battery_level_card
                          - type: custom:button-card
                            variables:
                              entity: sensor.cube_aqara_batterie
                            name: Cube
                            template:
                              - battery_level_card
                          - type: custom:button-card
                            variables:
                              entity: sensor.vibrations_batterie
                            name: Vibrations
                            template:
                              - battery_level_card
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:door-open
                        layout: icon|name
                        name: Capteurs portes & fenêtres
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        padding: 2px;
                        box-shadow: none;
                      }   
                    cards:
                      - type: grid
                        square: false
                        columns: 3
                        cards:
                          - type: custom:button-card
                            variables:
                              entity: sensor.porte_entree_batterie
                            name: Entrée
                            template:
                              - battery_level_card
                          - type: custom:button-card
                            variables:
                              entity: sensor.porte_salle_a_manger_batterie
                            name: S. à M
                            template:
                              - battery_level_card
                          - type: custom:button-card
                            variables:
                              entity: sensor.porte_cagibi_batterie
                            name: Cagibi
                            template:
                              - battery_level_card
                          - type: custom:button-card
                            variables:
                              entity: sensor.porte_garage_batterie
                            name: Garage
                            template:
                              - battery_level_card
                          - type: custom:button-card
                            variables:
                              entity: sensor.porte_cuisine_batterie
                            name: Cuisine
                            template:
                              - battery_level_card
                          - type: custom:button-card
                            variables:
                              entity: sensor.porte_chambre_parents_batterie
                            name: Parents
                            template:
                              - battery_level_card
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:thermometer-lines
                        layout: icon|name
                        name: Thermomètres
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        padding: 2px;
                        box-shadow: none;
                      }   
                    cards:
                      - type: grid
                        square: false
                        columns: 3
                        cards:
                          - type: custom:button-card
                            variables:
                              entity: sensor.sejour_thermo_batterie
                            name: Séjour
                            template:
                              - battery_level_card
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.couloir_thermo_batterie
                            name: Couloir
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.cuisine_thermo_batterie
                            name: Cuisine
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.sonde_garage_batterie
                            name: Garage
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.temp_sdb_battery_level
                            name: S. de bain
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.tom_thermo_batterie
                            name: Tom
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.manon_thermo_batterie
                            name: Manon
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.nina_thermo_batterie
                            name: Nina
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:run-fast
                        layout: icon|name
                        name: Détecteurs mouvements
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        padding: 2px;
                        box-shadow: none;
                      }   
                    cards:
                      - type: grid
                        square: false
                        columns: 3
                        cards:
                          - type: custom:button-card
                            variables:
                              entity: sensor.mouv_salon_batterie
                            template:
                              - battery_level_card
                            name: Salon
                          - type: custom:button-card
                            variables:
                              entity: sensor.mouv_salle_a_manger_batterie
                            template:
                              - battery_level_card
                            name: S. à M
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.mouv_couloir_batterie
                            name: Couloir
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.mouv_garage_batterie
                            name: Garage
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.mouv_salle_d_eau_batterie
                            name: Lavabo
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.mouv_escalier_batterie
                            name: Escalier
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.mouv_palier_batterie
                            name: Palier
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.mouv_tom_batterie
                            name: Tom
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.mouv_manon_batterie
                            name: Manon
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.mouv_leane_batterie
                            name: Léane
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.mouv_nina_batterie
                            name: Nina
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:light-switch
                        layout: icon|name
                        name: Interrupteurs
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        padding: 2px;
                        box-shadow: none;
                      }   
                    cards:
                      - type: grid
                        square: false
                        columns: 3
                        cards:
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.inter_salon_batterie
                            name: Salon
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.inter_salle_a_manger_batterie
                            name: S. à M
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.inter_entree_batterie
                            name: Entrée
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.inter_couloir_batterie
                            name: Couloir
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.inter_salle_d_eau_batterie
                            name: Lavabo
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.inter_chambre_parents_batterie
                            name: Parents
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.inter_palier_batterie
                            name: Palier
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.inter_chambre_tom_batterie
                            name: Tom
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.inter_chevet_tom_batterie
                            name: Tom chevet
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.inter_chambre_nina_batterie
                            name: Nina
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.inter_chevet_nina_batterie
                            name: Nina chevet
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.inter_grande_chambre_batterie
                            name: Filles
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.inter_chevet_manon_batterie
                            name: Manon chevet
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.inter_chevet_leane_batterie
                            name: Léane chevet
                          - type: custom:button-card
                            template:
                              - battery_level_card
                            variables:
                              entity: sensor.shellybutton1_98cdac2d5312_battery
                            name: Shelly
  - theme: Backend-selected
    subview: true
    icon: mdi:sofa
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    title: Sejour
    path: Séjour
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: sensor.temp_sejour
                template:
                  - badge_card
                  - temperature_state
                label: |
                  [[[
                    return states['sensor.temp_sejour_arrondie'].state +"°"
                  ]]]
                tap_action:
                  action: more-info
              - type: custom:button-card
                entity: sensor.hum_sejour
                label: |
                  [[[
                    return states['sensor.hum_sejour_arrondie'].state+"%"
                  ]]]
                template:
                  - badge_card
                  - humidity_state
                tap_action:
                  action: more-info
              - type: custom:button-card
                entity: sensor.luminosite_fp2
                template:
                  - badge_card
                  - brightness_state
                label: |
                  [[[
                    return entity.state+"lx"
                  ]]]
                tap_action:
                  action: more-info
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:sofa
                        layout: icon|name
                        name: Séjour
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:button-card
                    template:
                      - title_card
                    name: Zones de présence
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        border-radius: var(--ha-card-border-radius) !important;
                        box-shadow: none;
                      }   
                    cards:
                      - type: custom:vertical-stack-in-card
                        horizontal: true
                        style: |
                          ha-card { 
                            background-color: var(--card-background-color);
                            padding: 0px;
                            box-shadow: none;
                          }           
                        cards:
                          - type: custom:vertical-stack-in-card
                            horizontal: true
                            style: |
                              ha-card { 
                                background-color: var(--card-background-color);
                                padding: 2px;
                                box-shadow: none;
                              }           
                            cards:
                              - type: custom:vertical-stack-in-card
                                style: |
                                  ha-card { 
                                    margin: 2px;
                                  }           
                                cards:
                                  - type: custom:button-card
                                    entity: binary_sensor.presence_sejour_fp2
                                    template:
                                      - sub_button
                                      - sub_button_state
                              - type: custom:vertical-stack-in-card
                                style: |
                                  ha-card { 
                                    margin: 2px;
                                  }           
                                cards:
                                  - type: custom:button-card
                                    entity: binary_sensor.presence_bureau_fp2
                                    icon: mdi:desk-lamp
                                    template:
                                      - sub_button
                                      - sub_button_state
                              - type: custom:vertical-stack-in-card
                                style: |
                                  ha-card { 
                                    margin: 2px;
                                  }           
                                cards:
                                  - type: custom:button-card
                                    entity: binary_sensor.presence_salon_fp2
                                    icon: mdi:television
                                    template:
                                      - sub_button
                                      - sub_button_state
                              - type: custom:vertical-stack-in-card
                                style: |
                                  ha-card { 
                                    margin: 2px;
                                  }           
                                cards:
                                  - type: custom:button-card
                                    entity: binary_sensor.presence_canape_fp2
                                    icon: mdi:sofa
                                    template:
                                      - sub_button
                                      - sub_button_state
                              - type: custom:vertical-stack-in-card
                                style: |
                                  ha-card { 
                                    margin: 2px;
                                  }           
                                cards:
                                  - type: custom:button-card
                                    entity: binary_sensor.presence_sam_fp2
                                    icon: mdi:silverware
                                    template:
                                      - sub_button
                                      - sub_button_state
                  - type: custom:button-card
                    template:
                      - title_card
                    name: Appareils
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;
                        background-color: var(--card-background-color);        
                      }          
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;   
                            border-radius: 50px !important;
                          }          
                        cards:
                          - type: custom:button-card
                            entity: binary_sensor.mouv_salon
                            name: Salon
                            template:
                              - ball_card
                              - security_card_state
                              - last_changed
                            show_label: true
                            show_state: false
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px; 
                            border-radius: 50px !important;
                          }          
                        cards:
                          - type: custom:button-card
                            entity: binary_sensor.mouv_salle_a_manger
                            name: S. à manger
                            template:
                              - ball_card
                              - security_card_state
                              - last_changed
                            show_label: true
                            show_state: false
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;
                        background-color: var(--card-background-color);        
                      }          
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px; 
                            border-radius: 50px !important;
                          }          
                        cards:
                          - type: custom:button-card
                            entity: binary_sensor.porte_salle_a_manger
                            name: Salle à manger
                            template:
                              - ball_card
                              - security_card_state
                              - last_changed
                            show_label: true
                            show_state: false
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - title_card
                    name: |
                      [[[ return "Lumières" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: scene.ambiance_normale
                            name: Normale
                            template:
                              - scene_card
                            variables:
                              color_icon: rgba(255,255,0,1)
                              color_card: rgba(255,255,0,0.1)
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.ambiance_normale
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: scene.repas_devant_tv
                            name: Repas
                            template:
                              - scene_card
                            variables:
                              color_icon: rgba(255,69,0,1)
                              color_card: rgba(255,69,0,0.1)
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.repas_devant_tv
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: scene.zen
                            name: Doux
                            template:
                              - scene_card
                            variables:
                              color_icon: rgba(238,130,238,1)
                              color_card: rgba(238,130,238,0.1)
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.zen
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: scene.tv
                            name: TV
                            template:
                              - scene_card
                            variables:
                              color_icon: rgba(255,0,0,1)
                              color_card: rgba(255,0,0,0.1)
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.tv
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: scene.ambiance_normale
                            name: Anniv
                            icon: mdi:party-popper
                            template:
                              - scene_card
                            variables:
                              color_icon: rgb(0,191,255)
                              color_card: rgba(0,191,255,0.1)
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.anniversaire
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        box-shadow: none;
                        background-color: var(--card-background-color);
                        
                      }          
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin-bottom: 10px;
                            border-radius: 50px;
                          } 
                        cards:
                          - type: custom:button-card
                            entity: light.sejour
                            name: Toutes les lampes
                            template:
                              - ball_light_card
                              - light_card_state
                      - square: false
                        type: grid
                        columns: 2
                        cards:
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.lampe_de_bureau
                                name: Bureau
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.bandeau_led
                                name: Meuble TV
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.lampe_canape
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.lampe_tv_salon
                                name: Lampe TV
                                label: |
                                  [[[
                                    if( entity.state == "unavailable")
                                      return "Indisponible"
                                    if( entity.state == "off")
                                      return "Eteint"
                                    return "Allumé" ]]]                     
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.lustre_salon
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.lustre_salle_a_manger
                                name: Lustre SàM
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.buffet
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.lampadaire
                                template:
                                  - ball_light_card
                                  - light_card_state
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:multimedia
                    layout: icon|name
                    name: Multimédias
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: TV et musique
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                    border-radius: var(--ha-card-border-radius) !important;
                  }  
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }           
                    cards:
                      - type: custom:button-card
                        template:
                          - tv_sejour_card
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }           
                    cards:
                      - type: custom:button-card
                        entity: media_player.sejour
                        name: Séjour
                        icon: mdi:speaker
                        template:
                          - base
                          - multimedia_card
                          - mini_card_state
                        custom_fields:
                          cartes:
                            card:
                              type: conditional
                              conditions:
                                - entity: media_player.sejour
                                  state: playing
                              card:
                                type: custom:mini-media-player
                                entity: media_player.sejour
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: false
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Annonce" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: entities
                    entities:
                      - entity: input_text.annonce_dans_sejour
                        name: Message à envoyer dans le séjour
                        card_mod:
                          style:
                            hui-generic-entity-row:
                              $: |
                                state-badge_card {
                                  display: none;
                                } 
                                :host {
                                  width: 194%;
                                }
                              ha-textfield $: |
                                .mdc-text-field {
                                  border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                  border-radius: 110px !important;
                                }
                                .mdc-line-ripple::after,
                                .mdc-line-ripple::before {
                                  border-bottom-style: none !important;
                                }
                    show_header_toggle: false
                    card_mod:
                      style: |
                        "hui-generic-entity-row$state-badge_card": {
                          display: none;
                        }
                        ha-card {
                          background: none;
                        }
                  - type: button
                    tap_action:
                      action: call-service
                      service: script.annonce_dans_sejour
                    show_name: false
                    show_icon: true
                    icon: mdi:send
                    icon_height: 30px
                    card_mod:
                      style: |
                        ha-card {
                          width: 56px;
                          height: 56px !important;
                          margin-top: 16px;
                          border-radius: 100px;
                          float: right;
                        }
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:cctv
                    layout: icon|name
                    name: Caméra
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                    border-radius: 50 !important;
                  }    
                cards:
                  - camera_view: live
                    type: picture-glance
                    title: []
                    entities: []
                    camera_image: camera.camera_sejour
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:chart-line
                    layout: icon|name
                    name: Relevés
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                  }
                cards:
                  - type: custom:apexcharts-card
                    style: |
                      ha-card {
                         font-family: Avenir;
                         margin: 0px -10px -5px -10px;
                       }      
                    header:
                      show: true
                      title: ''
                      show_states: true
                      colorize_states: true
                    experimental:
                      brush: false
                      color_threshold: true
                    graph_span: 50h
                    now:
                      show: false
                      color: red
                      label: Maintenant
                    apex_config:
                      grid:
                        show: false
                      legend:
                        show: false
                        fontSize: 12px
                        height: 40
                      dataLabels:
                        enabled: false
                      fill:
                        type: gradient
                        gradient:
                          type: vertical
                          shadeIntensity: 0.8
                          inverseColors: false
                          opacityFrom: 0.5
                          opacityTo: 0
                          stops:
                            - - 0
                              - 50
                              - 100
                    yaxis:
                      - id: first
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: second
                        opposite: true
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: third
                        min: 0
                        max: 1
                        show: false
                    series:
                      - entity: sensor.night_state
                        yaxis_id: third
                        name: ''
                        color: grey
                        type: area
                        curve: stepline
                        stroke_width: 1
                        color_threshold:
                          - value: 0
                            color: darkgrey
                          - value: 1
                            color: darkgrey
                      - entity: sensor.temp_sejour
                        name: Température
                        yaxis_id: first
                        unit: °
                        color: tomato
                        type: area
                        curve: smooth
                        fill_raw: last
                        stroke_width: 1
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        float_precision: 1
                        group_by:
                          func: last
                        color_threshold:
                          - value: 0
                            color: rgb(0,191,255)
                          - value: 16
                            color: rgb(38, 75, 150)
                          - value: 18
                            color: rgb(39, 179, 118)
                          - value: 24
                            color: rgb(249, 167, 62)
                          - value: 28
                            color: rgb(191, 33, 47)
                      - entity: sensor.hum_sejour
                        name: humidité
                        unit: '%'
                        yaxis_id: second
                        color: dodgerblue
                        type: area
                        curve: smooth
                        fill_raw: last
                        stroke_width: 2
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        group_by:
                          func: last
        layout:
          width: 280
  - theme: Backend-selected
    subview: true
    icon: mdi:account
    title: Personnes
    path: Personnes
    layout:
      width: 350
      max_cols: 5
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:cellphone
                    layout: icon|name
                    name: Aurel
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                    border-radius: var(--ha-card-border-radius) !important;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        border-radius: 50px;
                        margin: 2px;
                      }        
                    cards:
                      - entity: person.herve
                        type: custom:button-card
                        show_state: false
                        show_label: true
                        show_name: true
                        show_entity_picture: true
                        name: >
                          [[[return states["sensor.aurel_duree"].state 
                          ]]]            
                        label: |
                          [[[return states["sensor.aurel_gps"].state  ]]]
                        template:
                          - ball_card
                          - person_state
                        styles:
                          entity_picture:
                            - width: 100%
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }        
                    cards:
                      - type: custom:button-card
                        template:
                          - sub_button
                          - sub_button_state
                        entity: sensor.iphone_aurel_connection_type
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }        
                    cards:
                      - type: custom:button-card
                        template:
                          - sub_button
                          - sub_button_state
                        entity: sensor.aurel_activite
                        icon: |
                          [[[
                              if (entity.state == 'Mouvement')
                                return "mdi:human-handsdown"
                              if (entity.state == 'Stationnaire')
                                return "mdi:human-male"
                              if (entity.state == 'Conduite')
                                return "mdi:car"
                              if (entity.state == 'Marche')
                                return "mdi:walk"
                              if (entity.state == 'Course')
                                return "mdi:run-fast"
                              if (entity.state == 'Vélo')
                                return "mdi:bike"
                              return ""
                          ]]] 
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }        
                    cards:
                      - type: custom:button-card
                        template:
                          - sub_button
                          - sub_button_state
                        entity: device_tracker.macbook_aurel
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }        
                    cards:
                      - type: custom:button-card
                        template:
                          - sub_button
                          - sub_button_state
                        entity: device_tracker.aurel_ipad_box
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:button-card
                    variables:
                      entity: sensor.iphone_aurel_battery_level
                    name: iPhone
                    template:
                      - battery_level_card
                  - type: custom:button-card
                    variables:
                      entity: sensor.macbook_aurel_internal_battery_level
                    name: MacBook
                    template:
                      - battery_level_card
                  - type: custom:button-card
                    variables:
                      entity: sensor.ipad_aurel_battery_level
                    name: iPad
                    template:
                      - battery_level_card
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 

                    background-color: var(--card-background-color);
                    box-shadow: none;
                    overflow: visible !important;
                  }   
                cards:
                  - type: history-graph
                    entities:
                      - entity: sensor.aurel_gps
                        name: []
                    hours_to_show: 24
                    refresh_interval: 0
                    style: |
                      ha-card { 
                        border-radius: 24px !important;

                      }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                    border-radius: var(--ha-card-border-radius) !important;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px;
                      }        
                    cards:
                      - entity: sensor.aurel_trajet
                        type: custom:button-card
                        icon: mdi:car
                        name: Temps de trajet
                        template:
                          - ball_card
                          - card_state
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    cards:
                      - type: map
                        entities:
                          - entity: person.herve
                        dark_mode: false
                        aspect_ratio: '1.5'
                        style: |
                          ha-card { 
                            border-radius: 28px !important;
                          }        
            show_header_toggle: true
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:cellphone
                    layout: icon|name
                    name: Alex
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                    border-radius: var(--ha-card-border-radius) !important;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        border-radius: 50px;
                        margin: 2px;
                      }        
                    cards:
                      - entity: person.alex
                        type: custom:button-card
                        show_state: false
                        show_label: true
                        show_name: true
                        show_entity_picture: true
                        name: >
                          [[[return states["sensor.alex_duree"].state 
                          ]]]             
                        label: |
                          [[[return states["sensor.alex_gps"].state  ]]]
                        template:
                          - ball_card
                          - person_state
                        styles:
                          entity_picture:
                            - width: 100%
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }        
                    cards:
                      - type: custom:button-card
                        template:
                          - sub_button
                          - sub_button_state
                        entity: sensor.alex_iphone_connection_type_2
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }        
                    cards:
                      - type: custom:button-card
                        template:
                          - sub_button
                          - sub_button_state
                        entity: sensor.alex_activite
                        icon: |
                          [[[
                              if (entity.state == 'Mouvement')
                                return "mdi:human-handsdown"
                              if (entity.state == 'Stationnaire')
                                return "mdi:human-male"
                              if (entity.state == 'Conduite')
                                return "mdi:car"
                              if (entity.state == 'Marche')
                                return "mdi:walk"
                              if (entity.state == 'Course')
                                return "mdi:run-fast"
                              if (entity.state == 'Vélo')
                                return "mdi:bike"
                              return ""
                          ]]] 
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }        
                    cards:
                      - type: custom:button-card
                        template:
                          - sub_button
                          - sub_button_state
                        entity: device_tracker.macbook_alex
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }        
                    cards:
                      - type: custom:button-card
                        template:
                          - sub_button
                          - sub_button_state
                        entity: device_tracker.liseuse_alex
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:button-card
                    variables:
                      entity: sensor.alex_iphone_battery_level_ha
                    name: iPhone
                    template:
                      - battery_level_card
                  - type: custom:button-card
                    variables:
                      entity: sensor.macbook_alex_internal_battery_level
                    name: MacBook
                    template:
                      - battery_level_card
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 

                    background-color: var(--card-background-color);
                    box-shadow: none;
                    overflow: visible !important;
                  }   
                cards:
                  - type: history-graph
                    entities:
                      - entity: sensor.alex_gps
                        name: []
                    hours_to_show: 24
                    refresh_interval: 0
                    style: |
                      ha-card { 
                        border-radius: 24px !important;

                      }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                    border-radius: var(--ha-card-border-radius) !important;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px;
                      }        
                    cards:
                      - entity: sensor.alex_trajet
                        type: custom:button-card
                        icon: mdi:car
                        name: Temps de trajet
                        template:
                          - ball_card
                          - card_state
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    cards:
                      - type: map
                        entities:
                          - entity: person.alex
                        dark_mode: false
                        aspect_ratio: '1.5'
                        style: |
                          ha-card { 
                            border-radius: 28px !important;
                          }        
            show_header_toggle: true
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:cellphone
                    layout: icon|name
                    name: Tom
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                    border-radius: var(--ha-card-border-radius) !important;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        border-radius: 50px !important;
                      }        
                    cards:
                      - entity: person.tom
                        type: custom:button-card
                        show_state: false
                        show_label: true
                        show_name: true
                        show_entity_picture: true
                        name: >
                          [[[return states["sensor.tom_duree"].state 
                          ]]]             
                        label: |
                          [[[return states["sensor.tom_gps"].state ]]]
                        template:
                          - ball_card
                          - person_state
                        styles:
                          entity_picture:
                            - width: 100%
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }        
                    cards:
                      - type: custom:button-card
                        entity: device_tracker.iphone_tom_box
                        icon: mdi:cellphone
                        name: iPhone
                        template:
                          - sub_button
                          - sub_button_state
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }        
                    cards:
                      - type: custom:button-card
                        entity: device_tracker.tom_mac_ping
                        icon: mdi:laptop
                        name: MacBook
                        template:
                          - sub_button
                          - sub_button_state
                        label: |
                          [[[
                             if (states["device_tracker.tom_mac_ping"].state == "home")
                               return "Présent" 
                             return "Absent"
                          ]]]
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 

                    background-color: var(--card-background-color);
                    box-shadow: none;
                    overflow: visible !important;
                  }   
                cards:
                  - type: history-graph
                    entities:
                      - entity: sensor.tom_gps
                        name: []
                    hours_to_show: 48
                    refresh_interval: 0
                    style: |
                      ha-card { 
                        border-radius: 24px !important;
                      }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }    
                horizontal: true
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }         
                    cards:
                      - type: custom:button-card
                        entity: switch.trottinette
                        icon: mdi:power-socket-fr
                        name: Trottinette
                        template:
                          - ball_card
                          - last_changed
                          - card_state
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }         
                    cards:
                      - type: custom:button-card
                        entity: sensor.trottinette_active_power
                        icon: null
                        name: Trot. conso
                        template:
                          - ball_card
                          - card_state
                        label: |
                          [[[
                             return entity.state + " W"
                          ]]]
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:cellphone
                    layout: icon|name
                    name: Manon
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                    border-radius: var(--ha-card-border-radius) !important;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        border-radius: 50px !important;
                      }       
                    cards:
                      - entity: person.manon
                        name: |
                          [[[return states["sensor.manon_duree"].state  ]]] 
                        type: custom:button-card
                        show_state: false
                        show_label: true
                        show_name: true
                        show_entity_picture: true
                        label: |
                          [[[return states["sensor.manon_gps"].state  ]]]
                        template:
                          - ball_card
                          - person_state
                        styles:
                          entity_picture:
                            - width: 100%
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }        
                    cards:
                      - type: custom:button-card
                        entity: device_tracker.iphone_manon
                        icon: mdi:cellphone
                        name: iPhone
                        template:
                          - sub_button
                          - sub_button_state
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }        
                    cards:
                      - type: custom:button-card
                        entity: device_tracker.manon_tab_ping
                        icon: mdi:tablet
                        name: Tablette
                        template:
                          - sub_button
                          - sub_button_state
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 

                    background-color: var(--card-background-color);
                    box-shadow: none;
                    overflow: visible !important;
                  }   
                cards:
                  - type: history-graph
                    entities:
                      - entity: sensor.manon_gps
                        name: []
                    hours_to_show: 48
                    refresh_interval: 0
                    style: |
                      ha-card { 
                        border-radius: 24px !important;
                      }
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:tablet
                    layout: icon|name
                    name: Tablettes filles
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Léane" ]]]
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - entity: person.leane
                        name: |
                          [[[return states["sensor.leane_duree"].state  ]]] 
                        type: custom:button-card
                        show_state: false
                        show_label: true
                        show_name: true
                        show_entity_picture: true
                        label: |
                          [[[
                            if (states['device_tracker.leane_tab_ping'].state == 'home')
                              return "Allumée"
                            return "Eteint"
                          ]]]
                        template:
                          - ball_card
                          - person_state
                        styles:
                          entity_picture:
                            - width: 100%
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 

                    background-color: var(--card-background-color);
                    box-shadow: none;
                    overflow: visible !important;
                  }   
                cards:
                  - type: history-graph
                    entities:
                      - entity: person.leane
                        name: []
                    hours_to_show: 48
                    refresh_interval: 0
                    style: |
                      ha-card { 
                        border-radius: 24px !important;
                      }
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Nina" ]]]
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - type: custom:vertical-stack-in-card
                        cards:
                          - entity: person.nina
                            name: |
                              [[[return states["sensor.nina_duree"].state  ]]] 
                            type: custom:button-card
                            show_state: false
                            show_name: true
                            show_label: true
                            show_entity_picture: true
                            label: |
                              [[[
                                if (states['device_tracker.nina_tab_ping'].state == 'home')
                                  return "Allumée"
                                return "Eteint"
                              ]]]
                            template:
                              - ball_card
                              - person_state
                            styles:
                              entity_picture:
                                - width: 100%
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 

                    background-color: var(--card-background-color);
                    box-shadow: none;
                    overflow: visible !important;
                  }   
                cards:
                  - type: history-graph
                    entities:
                      - entity: person.nina
                        name: []
                    hours_to_show: 48
                    refresh_interval: 0
                    style: |
                      ha-card { 
                        border-radius: 24px !important;
                      }
            show_header_toggle: true
  - theme: Backend-selected
    subview: true
    icon: mdi:door-open
    path: porte_mouv_serrure
    title: Portes mouv serrures
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:door-closed
                    layout: icon|name
                    name: Portes
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ if (states['sensor.compteur_portes'].state < 2)
                    return states['sensor.compteur_portes'].state+" porte"         
                  return states['sensor.compteur_portes'].state+" portes" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    border-radius: var(--ha-card-border-radius) !important;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.porte_entree
                        name: Entrée
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.porte_garage
                        name: Garage
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.porte_cagibi
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.porte_salle_a_manger
                        name: S. à M
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.porte_cuisine
                        name: Cuisine
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.porte_chambre_parents
                        name: Parents
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:run
                    layout: icon|name
                    name: Présence
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: Zones de présences séjour
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    border-radius: var(--ha-card-border-radius) !important;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        padding: 0px;
                        box-shadow: none;

                      }         
                    cards:
                      - type: grid
                        columns: 5
                        square: false
                        cards:
                          - type: custom:button-card
                            entity: binary_sensor.presence_sejour_fp2
                            template:
                              - mini_card
                              - mini_card_state
                              - no_style
                            show_label: false
                            show_name: true
                          - type: custom:button-card
                            entity: binary_sensor.presence_bureau_fp2
                            icon: mdi:laptop
                            template:
                              - mini_card
                              - mini_card_state
                              - no_style
                            show_label: false
                            show_name: true
                          - type: custom:button-card
                            entity: binary_sensor.presence_salon_fp2
                            icon: mdi:television
                            template:
                              - mini_card
                              - mini_card_state
                              - no_style
                            show_label: false
                            show_name: true
                          - type: custom:button-card
                            entity: binary_sensor.presence_canape_fp2
                            icon: mdi:sofa
                            template:
                              - mini_card
                              - mini_card_state
                              - no_style
                            show_label: false
                            show_name: true
                          - type: custom:button-card
                            entity: binary_sensor.presence_sam_fp2
                            icon: mdi:silverware
                            name: SàM
                            template:
                              - mini_card
                              - mini_card_state
                              - no_style
                            show_label: false
                            show_name: true
              - type: custom:button-card
                template:
                  - title_card
                name: Rez-de-chaussée
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_salon
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_salle_a_manger
                        name: S. à M
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_garage
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_salle_d_eau
                        name: S. d'eau
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_couloir
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_escalier
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
              - type: custom:button-card
                template:
                  - title_card
                name: Etage
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_palier
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_tom
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_manon
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_leane
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_nina
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:lock
                    layout: icon|name
                    name: Serrures
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                    border-radius: var(--ha-card-border-radius) !important;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        border-radius: 50px !important;
                      }         
                    cards:
                      - entity: lock.serrure_entree
                        type: custom:button-card
                        name: null
                        template:
                          - ball_card
                          - last_changed
                          - security_card_state
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card {           
                        margin: -5px 0px 10px 0px !important;
                        box-shadow: none !important;
                        background-color: transparent;     
                      }
                    cards:
                      - type: custom:button-card
                        name: Pile
                        template:
                          - battery_level_card
                        variables:
                          entity: sensor.serrure_entree_batterie
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card {           
                        box-shadow: none !important;
                        background-color: transparent;     
                      }      
                    horizontal: true
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px !important;
                          }   
                        cards:
                          - type: custom:button-card
                            entity: script.entree_serrure_toggle
                            name: ON/OFF
                            template:
                              - ball_card
                              - last_changed
                              - card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px !important;
                          }   
                        cards:
                          - type: custom:button-card
                            entity: >-
                              input_boolean.serrure_entree_verrouillage_automatique
                            name: OFF Auto
                            template:
                              - ball_card
                              - card_state
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card {           
                        box-shadow: none !important;
                        background-color: transparent;     
                      }       
                    horizontal: true
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px !important;
                          }   
                        cards:
                          - type: custom:button-card
                            entity: binary_sensor.serrure_entree_porte
                            name: Porte
                            template:
                              - ball_card
                              - card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px !important;
                          }   
                        cards:
                          - type: custom:button-card
                            entity: binary_sensor.lock_fcfb_calibration
                            name: Calibration
                            template:
                              - ball_card
                              - card_state
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin-bottom: 5px;
                        border-radius: 50px !important;
                      }         
                    cards:
                      - entity: lock.garage
                        type: custom:button-card
                        name: null
                        template:
                          - ball_card
                          - security_card_state
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card {           
                        margin: -10px 0px 10px 0px !important;
                        box-shadow: none !important;
                        background-color: transparent;     
                      }
                    cards:
                      - type: custom:button-card
                        name: Pile
                        template:
                          - battery_level_card
                        variables:
                          entity: sensor.lock_2c8e_battery
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card {           
                        box-shadow: none !important;
                        background-color: transparent;     
                      }       
                    horizontal: true
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px !important;
                          }   
                        cards:
                          - type: custom:button-card
                            entity: script.garage_serrure_toggle
                            name: ON/OFF
                            template:
                              - ball_card
                              - last_changed
                              - card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px !important;
                          }   
                        cards:
                          - type: custom:button-card
                            entity: >-
                              input_boolean.serrure_garage_verrouillage_automatique
                            name: OFF auto
                            template:
                              - ball_card
                              - card_state
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card {           
                        box-shadow: none !important;
                        background-color: transparent;     
                      }       
                    horizontal: true
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px !important;
                          }   
                        cards:
                          - type: custom:button-card
                            entity: binary_sensor.lock_2c8e_door_status
                            name: Porte
                            template:
                              - ball_card
                              - card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px !important;
                          }   
                        cards:
                          - type: custom:button-card
                            entity: binary_sensor.lock_2c8e_calibration
                            name: Calibration
                            template:
                              - ball_card
                              - card_state
                            label: |
                              [[[
                                if (entity.state == "on")
                                 return "OK"
                                if (entity.state == "off")
                                 return "Non"                 
                                return entity.state
                              ]]]
  - theme: Backend-selected
    icon: mdi:speaker-multiple
    title: Musique
    subview: true
    path: Musique
    type: custom:horizontal-layout
    layout:
      width: 350
      max_cols: 4
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Rez-de-chaussée" ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: media_player.sejour
                    name: Séjour
                    icon: mdi:speaker
                    template:
                      - base
                      - multimedia_card
                      - mini_card_state
                    custom_fields:
                      cartes:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.sejour
                              state: playing
                          card:
                            type: custom:mini-media-player
                            entity: media_player.sejour
                            group: false
                            sound_mode: full
                            artwork: full-cover
                            toggle_power: false
                            source: icon
                            hide:
                              icon: true
                              name: false
                              source: true
                            style: >

                              .flex {
                                display: block;
                                {% if not is_state('media_player.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                {% else %}
                                {% endif %}
                              }  ha-card.--has-artwork .cover{
                                opacity: 0.9;
                              } .entity__info__media {
                                opacity: 1 !important;
                                padding-right: 16px;
                                overflow: hidden;
                                height: 4.4em;
                                height: 100%;
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex > div.entity__icon {
                                {% if not is_state('input_boolean.musique','off') %}
                                display: none;
                                {% endif %}
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex { } mmp-media-controls {
                                {% if not is_state('input_boolean.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                flex-wrap: wrap-reverse !important;
                                {% endif %}
                              } mmp-powerstrip  { } ha-card > div.mmp-player {
                                padding: 12px !important;
                                {% if not is_state('input_boolean.musique','off') %}
                                {% else %}
                                #display: none !important;
                                {% endif %}
                              } ha-card > div.mmp-player {
                                {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                position: relative;
                                height: 20vh;
                                {% else %}
                                position: absolute;
                                align-self: flex-start;
                                height: 100%;
                                {% endif %}
                                
                                background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                font-size: 0.9em !important;
                              } ha-card > div.mmp-player > div.mmp-player__adds
                              {
                                position: absolute;
                                bottom: 14px;
                                padding: 0 16px 0 0;
                              } div.flex.mmp-media-controls__media {
                                  margin-bottom: -5px !important;
                              }
                  - type: custom:button-card
                    entity: media_player.la_cuisine
                    name: Cuisine
                    icon: mdi:speaker
                    template:
                      - base
                      - multimedia_card
                      - mini_card_state
                    custom_fields:
                      cartes:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.la_cuisine
                              state: playing
                          card:
                            type: custom:mini-media-player
                            entity: media_player.la_cuisine
                            group: false
                            sound_mode: full
                            artwork: full-cover
                            toggle_power: false
                            source: icon
                            hide:
                              icon: true
                              name: false
                              source: true
                            style: >

                              .flex {
                                display: block;
                                {% if not is_state('media_player.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                {% else %}
                                {% endif %}
                              }  ha-card.--has-artwork .cover{
                                opacity: 0.9;
                              } .entity__info__media {
                                opacity: 1 !important;
                                padding-right: 16px;
                                overflow: hidden;
                                height: 4.4em;
                                height: 100%;
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex > div.entity__icon {
                                {% if not is_state('input_boolean.musique','off') %}
                                display: none;
                                {% endif %}
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex { } mmp-media-controls {
                                {% if not is_state('input_boolean.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                flex-wrap: wrap-reverse !important;
                                {% endif %}
                              } mmp-powerstrip  { } ha-card > div.mmp-player {
                                padding: 12px !important;
                                {% if not is_state('input_boolean.musique','off') %}
                                {% else %}
                                #display: none !important;
                                {% endif %}
                              } ha-card > div.mmp-player {
                                {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                position: relative;
                                height: 20vh;
                                {% else %}
                                position: absolute;
                                align-self: flex-start;
                                height: 100%;
                                {% endif %}
                                
                                background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                font-size: 0.9em !important;
                              } ha-card > div.mmp-player > div.mmp-player__adds
                              {
                                position: absolute;
                                bottom: 14px;
                                padding: 0 16px 0 0;
                              } div.flex.mmp-media-controls__media {
                                  margin-bottom: -5px !important;
                              }
                  - type: custom:button-card
                    entity: media_player.chambre_des_parents
                    name: Parents
                    icon: mdi:speaker
                    template:
                      - base
                      - multimedia_card
                      - mini_card_state
                    custom_fields:
                      cartes:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.chambre_des_parents
                              state: playing
                          card:
                            type: custom:mini-media-player
                            entity: media_player.chambre_parents
                            group: false
                            sound_mode: full
                            artwork: full-cover
                            toggle_power: false
                            source: icon
                            hide:
                              icon: true
                              name: false
                              source: true
                            style: >

                              .flex {
                                display: block;
                                {% if not is_state('media_player.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                {% else %}
                                {% endif %}
                              }  ha-card.--has-artwork .cover{
                                opacity: 0.9;
                              } .entity__info__media {
                                opacity: 1 !important;
                                padding-right: 16px;
                                overflow: hidden;
                                height: 4.4em;
                                height: 100%;
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex > div.entity__icon {
                                {% if not is_state('input_boolean.musique','off') %}
                                display: none;
                                {% endif %}
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex { } mmp-media-controls {
                                {% if not is_state('input_boolean.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                flex-wrap: wrap-reverse !important;
                                {% endif %}
                              } mmp-powerstrip  { } ha-card > div.mmp-player {
                                padding: 12px !important;
                                {% if not is_state('input_boolean.musique','off') %}
                                {% else %}
                                #display: none !important;
                                {% endif %}
                              } ha-card > div.mmp-player {
                                {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                position: relative;
                                height: 20vh;
                                {% else %}
                                position: absolute;
                                align-self: flex-start;
                                height: 100%;
                                {% endif %}
                                
                                background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                font-size: 0.9em !important;
                              } ha-card > div.mmp-player > div.mmp-player__adds
                              {
                                position: absolute;
                                bottom: 14px;
                                padding: 0 16px 0 0;
                              } div.flex.mmp-media-controls__media {
                                  margin-bottom: -5px !important;
                              }
                  - type: custom:button-card
                    entity: media_player.le_garage
                    name: Garage
                    icon: mdi:speaker
                    template:
                      - base
                      - multimedia_card
                      - mini_card_state
                    custom_fields:
                      cartes:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.le_garage
                              state: playing
                          card:
                            type: custom:mini-media-player
                            entity: media_player.le_garage
                            group: false
                            sound_mode: full
                            artwork: full-cover
                            toggle_power: false
                            source: icon
                            hide:
                              icon: true
                              name: false
                              source: true
                            style: >

                              .flex {
                                display: block;
                                {% if not is_state('media_player.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                {% else %}
                                {% endif %}
                              }  ha-card.--has-artwork .cover{
                                opacity: 0.9;
                              } .entity__info__media {
                                opacity: 1 !important;
                                padding-right: 16px;
                                overflow: hidden;
                                height: 4.4em;
                                height: 100%;
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex > div.entity__icon {
                                {% if not is_state('input_boolean.musique','off') %}
                                display: none;
                                {% endif %}
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex { } mmp-media-controls {
                                {% if not is_state('input_boolean.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                flex-wrap: wrap-reverse !important;
                                {% endif %}
                              } mmp-powerstrip  { } ha-card > div.mmp-player {
                                padding: 12px !important;
                                {% if not is_state('input_boolean.musique','off') %}
                                {% else %}
                                #display: none !important;
                                {% endif %}
                              } ha-card > div.mmp-player {
                                {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                position: relative;
                                height: 20vh;
                                {% else %}
                                position: absolute;
                                align-self: flex-start;
                                height: 100%;
                                {% endif %}
                                
                                background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                font-size: 0.9em !important;
                              } ha-card > div.mmp-player > div.mmp-player__adds
                              {
                                position: absolute;
                                bottom: 14px;
                                padding: 0 16px 0 0;
                              } div.flex.mmp-media-controls__media {
                                  margin-bottom: -5px !important;
                              }
                  - type: custom:button-card
                    entity: media_player.partout
                    name: Partout
                    icon: mdi:speaker
                    template:
                      - base
                      - multimedia_card
                      - mini_card_state
                    custom_fields:
                      cartes:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.partout
                              state: playing
                          card:
                            type: custom:mini-media-player
                            entity: media_player.partout
                            group: false
                            sound_mode: full
                            artwork: full-cover
                            toggle_power: false
                            source: icon
                            hide:
                              icon: true
                              name: false
                              source: true
                            style: >

                              .flex {
                                display: block;
                                {% if not is_state('media_player.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                {% else %}
                                {% endif %}
                              }  ha-card.--has-artwork .cover{
                                opacity: 0.9;
                              } .entity__info__media {
                                opacity: 1 !important;
                                padding-right: 16px;
                                overflow: hidden;
                                height: 4.4em;
                                height: 100%;
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex > div.entity__icon {
                                {% if not is_state('input_boolean.musique','off') %}
                                display: none;
                                {% endif %}
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex { } mmp-media-controls {
                                {% if not is_state('input_boolean.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                flex-wrap: wrap-reverse !important;
                                {% endif %}
                              } mmp-powerstrip  { } ha-card > div.mmp-player {
                                padding: 12px !important;
                                {% if not is_state('input_boolean.musique','off') %}
                                {% else %}
                                #display: none !important;
                                {% endif %}
                              } ha-card > div.mmp-player {
                                {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                position: relative;
                                height: 20vh;
                                {% else %}
                                position: absolute;
                                align-self: flex-start;
                                height: 100%;
                                {% endif %}
                                
                                background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                font-size: 0.9em !important;
                              } ha-card > div.mmp-player > div.mmp-player__adds
                              {
                                position: absolute;
                                bottom: 14px;
                                padding: 0 16px 0 0;
                              } div.flex.mmp-media-controls__media {
                                  margin-bottom: -5px !important;
                              }
                  - type: custom:button-card
                    entity: media_player.en_bas
                    name: En bas
                    icon: mdi:speaker
                    template:
                      - base
                      - multimedia_card
                      - mini_card_state
                    custom_fields:
                      cartes:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.en_bas
                              state: playing
                          card:
                            type: custom:mini-media-player
                            entity: media_player.en_bas
                            group: false
                            sound_mode: full
                            artwork: full-cover
                            toggle_power: false
                            source: icon
                            hide:
                              icon: true
                              name: false
                              source: true
                            style: >

                              .flex {
                                display: block;
                                {% if not is_state('media_player.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                {% else %}
                                {% endif %}
                              }  ha-card.--has-artwork .cover{
                                opacity: 0.9;
                              } .entity__info__media {
                                opacity: 1 !important;
                                padding-right: 16px;
                                overflow: hidden;
                                height: 4.4em;
                                height: 100%;
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex > div.entity__icon {
                                {% if not is_state('input_boolean.musique','off') %}
                                display: none;
                                {% endif %}
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex { } mmp-media-controls {
                                {% if not is_state('input_boolean.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                flex-wrap: wrap-reverse !important;
                                {% endif %}
                              } mmp-powerstrip  { } ha-card > div.mmp-player {
                                padding: 12px !important;
                                {% if not is_state('input_boolean.musique','off') %}
                                {% else %}
                                #display: none !important;
                                {% endif %}
                              } ha-card > div.mmp-player {
                                {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                position: relative;
                                height: 20vh;
                                {% else %}
                                position: absolute;
                                align-self: flex-start;
                                height: 100%;
                                {% endif %}
                                
                                background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                font-size: 0.9em !important;
                              } ha-card > div.mmp-player > div.mmp-player__adds
                              {
                                position: absolute;
                                bottom: 14px;
                                padding: 0 16px 0 0;
                              } div.flex.mmp-media-controls__media {
                                  margin-bottom: -5px !important;
                              }
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: vertical-stack
            cards:
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Etage " ]]]
              - square: false
                columns: 2
                type: grid
                cards:
                  - type: custom:button-card
                    entity: media_player.la_salle_de_bain
                    name: S. de bain
                    icon: mdi:speaker
                    template:
                      - base
                      - multimedia_card
                      - mini_card_state
                    custom_fields:
                      cartes:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.la_salle_de_bain
                              state: playing
                            - entity: media_player.partout
                              state_not: playing
                            - entity: media_player.etage
                              state_not: playing
                          card:
                            type: custom:mini-media-player
                            entity: media_player.la_salle_de_bain
                            group: false
                            sound_mode: full
                            artwork: full-cover
                            toggle_power: false
                            source: icon
                            hide:
                              icon: true
                              name: false
                              source: true
                            style: >

                              .flex {
                                display: block;
                                {% if not is_state('media_player.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                {% else %}
                                {% endif %}
                              }  ha-card.--has-artwork .cover{
                                opacity: 0.9;
                              } .entity__info__media {
                                opacity: 1 !important;
                                padding-right: 16px;
                                overflow: hidden;
                                height: 4.4em;
                                height: 100%;
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex > div.entity__icon {
                                {% if not is_state('input_boolean.musique','off') %}
                                display: none;
                                {% endif %}
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex { } mmp-media-controls {
                                {% if not is_state('input_boolean.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                flex-wrap: wrap-reverse !important;
                                {% endif %}
                              } mmp-powerstrip  { } ha-card > div.mmp-player {
                                padding: 12px !important;
                                {% if not is_state('input_boolean.musique','off') %}
                                {% else %}
                                #display: none !important;
                                {% endif %}
                              } ha-card > div.mmp-player {
                                {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                position: relative;
                                height: 20vh;
                                {% else %}
                                position: absolute;
                                align-self: flex-start;
                                height: 100%;
                                {% endif %}
                                
                                background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                font-size: 0.9em !important;
                              } ha-card > div.mmp-player > div.mmp-player__adds
                              {
                                position: absolute;
                                bottom: 14px;
                                padding: 0 16px 0 0;
                              } div.flex.mmp-media-controls__media {
                                  margin-bottom: -5px !important;
                              }
                  - type: custom:button-card
                    entity: media_player.tom
                    name: Tom
                    icon: mdi:speaker
                    template:
                      - base
                      - multimedia_card
                      - mini_card_state
                    custom_fields:
                      cartes:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.tom
                              state: playing
                            - entity: media_player.partout
                              state_not: playing
                            - entity: media_player.etage
                              state_not: playing
                          card:
                            type: custom:mini-media-player
                            entity: media_player.tom
                            group: false
                            sound_mode: full
                            artwork: full-cover
                            toggle_power: false
                            source: icon
                            hide:
                              icon: true
                              name: false
                              source: true
                            style: >

                              .flex {
                                display: block;
                                {% if not is_state('media_player.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                {% else %}
                                {% endif %}
                              }  ha-card.--has-artwork .cover{
                                opacity: 0.9;
                              } .entity__info__media {
                                opacity: 1 !important;
                                padding-right: 16px;
                                overflow: hidden;
                                height: 4.4em;
                                height: 100%;
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex > div.entity__icon {
                                {% if not is_state('input_boolean.musique','off') %}
                                display: none;
                                {% endif %}
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex { } mmp-media-controls {
                                {% if not is_state('input_boolean.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                flex-wrap: wrap-reverse !important;
                                {% endif %}
                              } mmp-powerstrip  { } ha-card > div.mmp-player {
                                padding: 12px !important;
                                {% if not is_state('input_boolean.musique','off') %}
                                {% else %}
                                #display: none !important;
                                {% endif %}
                              } ha-card > div.mmp-player {
                                {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                position: relative;
                                height: 20vh;
                                {% else %}
                                position: absolute;
                                align-self: flex-start;
                                height: 100%;
                                {% endif %}
                                
                                background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                font-size: 0.9em !important;
                              } ha-card > div.mmp-player > div.mmp-player__adds
                              {
                                position: absolute;
                                bottom: 14px;
                                padding: 0 16px 0 0;
                              } div.flex.mmp-media-controls__media {
                                  margin-bottom: -5px !important;
                              }
                  - type: custom:button-card
                    entity: media_player.nina
                    name: Nina
                    icon: mdi:speaker
                    template:
                      - base
                      - multimedia_card
                      - mini_card_state
                    custom_fields:
                      cartes:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.nina
                              state: playing
                            - entity: media_player.partout
                              state_not: playing
                            - entity: media_player.etage
                              state_not: playing
                          card:
                            type: custom:mini-media-player
                            entity: media_player.nina
                            group: false
                            sound_mode: full
                            artwork: full-cover
                            toggle_power: false
                            source: icon
                            hide:
                              icon: true
                              name: false
                              source: true
                            style: >

                              .flex {
                                display: block;
                                {% if not is_state('media_player.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                {% else %}
                                {% endif %}
                              }  ha-card.--has-artwork .cover{
                                opacity: 0.9;
                              } .entity__info__media {
                                opacity: 1 !important;
                                padding-right: 16px;
                                overflow: hidden;
                                height: 4.4em;
                                height: 100%;
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex > div.entity__icon {
                                {% if not is_state('input_boolean.musique','off') %}
                                display: none;
                                {% endif %}
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex { } mmp-media-controls {
                                {% if not is_state('input_boolean.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                flex-wrap: wrap-reverse !important;
                                {% endif %}
                              } mmp-powerstrip  { } ha-card > div.mmp-player {
                                padding: 12px !important;
                                {% if not is_state('input_boolean.musique','off') %}
                                {% else %}
                                #display: none !important;
                                {% endif %}
                              } ha-card > div.mmp-player {
                                {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                position: relative;
                                height: 20vh;
                                {% else %}
                                position: absolute;
                                align-self: flex-start;
                                height: 100%;
                                {% endif %}
                                
                                background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                font-size: 0.9em !important;
                              } ha-card > div.mmp-player > div.mmp-player__adds
                              {
                                position: absolute;
                                bottom: 14px;
                                padding: 0 16px 0 0;
                              } div.flex.mmp-media-controls__media {
                                  margin-bottom: -5px !important;
                              }
                  - type: custom:button-card
                    entity: media_player.leane
                    name: Léane
                    icon: mdi:speaker
                    template:
                      - base
                      - multimedia_card
                      - mini_card_state
                    custom_fields:
                      cartes:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.leane
                              state: playing
                            - entity: media_player.partout
                              state_not: playing
                            - entity: media_player.etage
                              state_not: playing
                          card:
                            type: custom:mini-media-player
                            entity: media_player.leane
                            group: false
                            sound_mode: full
                            artwork: full-cover
                            toggle_power: false
                            source: icon
                            hide:
                              icon: true
                              name: false
                              source: true
                            style: >

                              .flex {
                                display: block;
                                {% if not is_state('media_player.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                {% else %}
                                {% endif %}
                              }  ha-card.--has-artwork .cover{
                                opacity: 0.9;
                              } .entity__info__media {
                                opacity: 1 !important;
                                padding-right: 16px;
                                overflow: hidden;
                                height: 4.4em;
                                height: 100%;
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex > div.entity__icon {
                                {% if not is_state('input_boolean.musique','off') %}
                                display: none;
                                {% endif %}
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex { } mmp-media-controls {
                                {% if not is_state('input_boolean.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                flex-wrap: wrap-reverse !important;
                                {% endif %}
                              } mmp-powerstrip  { } ha-card > div.mmp-player {
                                padding: 12px !important;
                                {% if not is_state('input_boolean.musique','off') %}
                                {% else %}
                                #display: none !important;
                                {% endif %}
                              } ha-card > div.mmp-player {
                                {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                position: relative;
                                height: 20vh;
                                {% else %}
                                position: absolute;
                                align-self: flex-start;
                                height: 100%;
                                {% endif %}
                                
                                background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                font-size: 0.9em !important;
                              } ha-card > div.mmp-player > div.mmp-player__adds
                              {
                                position: absolute;
                                bottom: 14px;
                                padding: 0 16px 0 0;
                              } div.flex.mmp-media-controls__media {
                                  margin-bottom: -5px !important;
                              }
                  - type: custom:button-card
                    entity: media_player.manon
                    name: Manon
                    icon: mdi:speaker
                    template:
                      - base
                      - multimedia_card
                      - mini_card_state
                    custom_fields:
                      cartes:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.manon
                              state: playing
                            - entity: media_player.partout
                              state_not: playing
                            - entity: media_player.etage
                              state_not: playing
                          card:
                            type: custom:mini-media-player
                            entity: media_player.manon
                            group: false
                            sound_mode: full
                            artwork: full-cover
                            toggle_power: false
                            source: icon
                            hide:
                              icon: true
                              name: false
                              source: true
                            style: >

                              .flex {
                                display: block;
                                {% if not is_state('media_player.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                {% else %}
                                {% endif %}
                              }  ha-card.--has-artwork .cover{
                                opacity: 0.9;
                              } .entity__info__media {
                                opacity: 1 !important;
                                padding-right: 16px;
                                overflow: hidden;
                                height: 4.4em;
                                height: 100%;
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex > div.entity__icon {
                                {% if not is_state('input_boolean.musique','off') %}
                                display: none;
                                {% endif %}
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex { } mmp-media-controls {
                                {% if not is_state('input_boolean.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                flex-wrap: wrap-reverse !important;
                                {% endif %}
                              } mmp-powerstrip  { } ha-card > div.mmp-player {
                                padding: 12px !important;
                                {% if not is_state('input_boolean.musique','off') %}
                                {% else %}
                                #display: none !important;
                                {% endif %}
                              } ha-card > div.mmp-player {
                                {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                position: relative;
                                height: 20vh;
                                {% else %}
                                position: absolute;
                                align-self: flex-start;
                                height: 100%;
                                {% endif %}
                                
                                background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                font-size: 0.9em !important;
                              } ha-card > div.mmp-player > div.mmp-player__adds
                              {
                                position: absolute;
                                bottom: 14px;
                                padding: 0 16px 0 0;
                              } div.flex.mmp-media-controls__media {
                                  margin-bottom: -5px !important;
                              }
                  - type: custom:button-card
                    entity: media_player.etage
                    name: Etage
                    icon: mdi:speaker
                    template:
                      - base
                      - multimedia_card
                      - mini_card_state
                    custom_fields:
                      cartes:
                        card:
                          type: conditional
                          conditions:
                            - entity: media_player.etage
                              state: playing
                            - entity: media_player.partout
                              state_not: playing
                          card:
                            type: custom:mini-media-player
                            entity: media_player.etage
                            group: false
                            sound_mode: full
                            artwork: full-cover
                            toggle_power: false
                            source: icon
                            hide:
                              icon: true
                              name: false
                              source: true
                            style: >

                              .flex {
                                display: block;
                                {% if not is_state('media_player.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                {% else %}
                                {% endif %}
                              }  ha-card.--has-artwork .cover{
                                opacity: 0.9;
                              } .entity__info__media {
                                opacity: 1 !important;
                                padding-right: 16px;
                                overflow: hidden;
                                height: 4.4em;
                                height: 100%;
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex > div.entity__icon {
                                {% if not is_state('input_boolean.musique','off') %}
                                display: none;
                                {% endif %}
                              } ha-card > div.mmp-player >
                              div.mmp-player__core.flex { } mmp-media-controls {
                                {% if not is_state('input_boolean.musique','off') %}
                                filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                flex-wrap: wrap-reverse !important;
                                {% endif %}
                              } mmp-powerstrip  { } ha-card > div.mmp-player {
                                padding: 12px !important;
                                {% if not is_state('input_boolean.musique','off') %}
                                {% else %}
                                #display: none !important;
                                {% endif %}
                              } ha-card > div.mmp-player {
                                {% if is_state_attr('media_player.sejour','media_content_id', 'Bluetooth') %}
                                position: relative;
                                height: 20vh;
                                {% else %}
                                position: absolute;
                                align-self: flex-start;
                                height: 100%;
                                {% endif %}
                                
                                background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                font-size: 0.9em !important;
                              } ha-card > div.mmp-player > div.mmp-player__adds
                              {
                                position: absolute;
                                bottom: 14px;
                                padding: 0 16px 0 0;
                              } div.flex.mmp-media-controls__media {
                                  margin-bottom: -5px !important;
                              }
  - theme: Backend-selected
    title: Appareils
    path: Appareils
    subview: true
    icon: mdi:home-search-outline
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:dishwasher
                        layout: icon|name
                        name: machines
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            template:
                              - ball_card
                              - card_state
                            entity: switch.lave_vaisselle_power
                            icon: phu:rooms-dining
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                          }
                        cards:
                          - type: custom:button-card
                            template:
                              - ball_card
                              - card_state
                            entity: input_select.lave_linge
                            icon: mdi:tshirt-crew
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:spray
                        layout: icon|name
                        entity: switch.moustiques
                        name: Prises anti-moustiques
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                        tap_action:
                          action: call-service
                          service: switch.toggle
                          data: {}
                          target:
                            entity_id: switch.moustiques
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: group.moustiques
                            name: Toutes les prises
                            icon: mdi:spray
                            template:
                              - ball_card
                              - card_state
                              - last_changed
                            show_state: true
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: switch.moustique_parents
                            name: Parents
                            template:
                              - ball_card
                              - card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: switch.moustique_tom
                            name: Tom
                            template:
                              - ball_card
                              - card_state
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: switch.moustique_manon
                            name: Manon & Lélé
                            template:
                              - ball_card
                              - card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: switch.moustique_nina
                            name: Nina
                            template:
                              - ball_card
                              - card_state
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:home
                        layout: icon|name
                        name: Autres
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: switch.radiateur
                            name: Chauffage SDB
                            template:
                              - ball_card
                              - card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: input_boolean.imprimante
                            template:
                              - ball_card
                              - card_state
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: phu:roborock
                        layout: icon|name
                        name: Aspirateurs
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: vacuum.wall_e
                            icon: phu:roborock
                            name: null
                            template:
                              - ball_card
                              - card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: vacuum.r2d2
                            icon: phu:roborock
                            template:
                              - ball_card
                              - card_state
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:television
                        layout: icon|name
                        name: Télévisions
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            template:
                              - tv_sejour_card
                              - card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            template:
                              - tv_parents_card
                              - card_state
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:music
                        layout: icon|name
                        name: Musique
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: media_player.sejour
                            icon: mdi:speaker
                            name: null
                            template:
                              - ball_card
                              - card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: media_player.la_cuisine
                            icon: mdi:speaker
                            template:
                              - ball_card
                              - card_state
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: media_player.le_garage
                            icon: mdi:speaker
                            name: null
                            template:
                              - ball_card
                              - card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: media_player.chambre_des_parents
                            icon: mdi:speaker
                            template:
                              - ball_card
                              - card_state
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: media_player.tom
                            icon: mdi:speaker
                            name: null
                            template:
                              - ball_card
                              - card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: media_player.nina
                            icon: mdi:speaker
                            template:
                              - ball_card
                              - card_state
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: media_player.manon
                            icon: mdi:speaker
                            name: null
                            template:
                              - ball_card
                              - card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: media_player.leane
                            icon: mdi:speaker
                            template:
                              - ball_card
                              - card_state
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 0 3px 0 3px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: media_player.la_salle_de_bain
                            icon: mdi:speaker
                            name: Salle de bain
                            template:
                              - ball_card
                              - card_state
  - theme: Backend-selected
    subview: true
    path: Annonces
    title: Annonces
    icon: mdi:speaker-message
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:speaker-message
                    layout: icon|name
                    name: Annonces
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Général" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none ;
                  }      
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      } 
                    cards:
                      - entity: script.a_table
                        name: A table
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                          - last_changed
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      } 
                    cards:
                      - entity: script.gouter
                        name: Goûter
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                          - last_changed
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none ;
                  }      
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      } 
                    cards:
                      - entity: script.1590760144160
                        name: Fin écran
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                          - last_changed
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Coucher" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none ;
                  }      
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      } 
                    cards:
                      - entity: script.annonce_au_lit
                        name: Coucher filles
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                          - last_changed
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      } 
                    cards:
                      - entity: script.tom_va_se_coucher
                        name: Coucher Tom
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                          - last_changed
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Lever" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none ;
                  }      
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      } 
                    cards:
                      - entity: script.reveille_manon_annonce_alexa
                        name: Réveiller Manon
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                          - last_changed
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      } 
                    cards:
                      - entity: script.reveille_tom_annonce_alexa
                        name: Réveiller Tom
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                          - last_changed
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:message
                    layout: icon|name
                    name: Annonces pièces
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Salle de bain" ]]]                  
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    cards:
                      - type: entities
                        entities:
                          - entity: input_text.annonce_dans_salle_de_bain
                            name: Message à envoyer dans la salle de bain
                            card_mod:
                              style:
                                hui-generic-entity-row:
                                  $: |
                                    state-badge_card {
                                      display: none;
                                    } 
                                    :host {
                                      width: 194%;
                                    }
                                  ha-textfield $: |
                                    .mdc-text-field {
                                      border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                      border-radius: 110px !important;
                                    }
                                    .mdc-line-ripple::after,
                                    .mdc-line-ripple::before {
                                      border-bottom-style: none !important;
                                    }
                        show_header_toggle: false
                        card_mod:
                          style: |
                            "hui-generic-entity-row$state-badge_card": {
                              display: none;
                            }
                            ha-card {
                              background: none;
                            }
                      - type: button
                        tap_action:
                          action: call-service
                          service: script.annonce_dans_salle_de_bain
                        show_name: false
                        show_icon: true
                        icon: mdi:send
                        icon_height: 30px
                        card_mod:
                          style: |
                            ha-card {
                              width: 56px;
                              height: 56px !important;
                              margin-top: 16px;
                              border-radius: 100px;
                              float: right;
                            }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }  
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                        overflow: visible !important;
                      } 
                    cards:
                      - type: custom:mini-media-player
                        entity: media_player.la_salle_de_bain
                        artwork: none
                        icon: mdi:speaker
                        hide:
                          source: true
                          icon: true
                          name: true
                          power: true
                          play_pause: true
                          controls: true
                          next: true
                          prev: true
                          play_stop: true
                          progress: true
                          state_label: true
                          info: true
                        toggle_power: false
                        info: null
                        volume_stateless: false
                        group: true
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Séjour" ]]]                  
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    cards:
                      - type: entities
                        entities:
                          - entity: input_text.annonce_dans_sejour
                            name: Message à envoyer dans le séjour
                            card_mod:
                              style:
                                hui-generic-entity-row:
                                  $: |
                                    state-badge_card {
                                      display: none;
                                    } 
                                    :host {
                                      width: 194%;
                                    }
                                  ha-textfield $: |
                                    .mdc-text-field {
                                      border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                      border-radius: 110px !important;
                                    }
                                    .mdc-line-ripple::after,
                                    .mdc-line-ripple::before {
                                      border-bottom-style: none !important;
                                    }
                        show_header_toggle: false
                        card_mod:
                          style: |
                            "hui-generic-entity-row$state-badge_card": {
                              display: none;
                            }
                            ha-card {
                              background: none;
                            }
                      - type: button
                        tap_action:
                          action: call-service
                          service: script.annonce_dans_sejour
                        show_name: false
                        show_icon: true
                        icon: mdi:send
                        icon_height: 30px
                        card_mod:
                          style: |
                            ha-card {
                              width: 56px;
                              height: 56px !important;
                              margin-top: 16px;
                              border-radius: 100px;
                              float: right;
                            }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }  
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      } 
                    cards:
                      - type: custom:mini-media-player
                        entity: media_player.sejour
                        artwork: none
                        icon: mdi:speaker
                        hide:
                          source: true
                          icon: true
                          name: true
                          power: true
                          play_pause: true
                          controls: true
                          next: true
                          prev: true
                          play_stop: true
                          progress: true
                          state_label: true
                          info: true
                        toggle_power: false
                        info: null
                        volume_stateless: false
                        group: true
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Cuisine" ]]]                  
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    cards:
                      - type: entities
                        entities:
                          - entity: input_text.annonce_dans_cuisine
                            name: Message à envoyer dans la cuisine
                            card_mod:
                              style:
                                hui-generic-entity-row:
                                  $: |
                                    state-badge_card {
                                      display: none;
                                    } 
                                    :host {
                                      width: 194%;
                                    }
                                  ha-textfield $: |
                                    .mdc-text-field {
                                      border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                      border-radius: 110px !important;
                                    }
                                    .mdc-line-ripple::after,
                                    .mdc-line-ripple::before {
                                      border-bottom-style: none !important;
                                    }
                        show_header_toggle: false
                        card_mod:
                          style: |
                            "hui-generic-entity-row$state-badge_card": {
                              display: none;
                            }
                            ha-card {
                              background: none;
                            }
                      - type: button
                        tap_action:
                          action: call-service
                          service: script.annonce_dans_cuisine
                        show_name: false
                        show_icon: true
                        icon: mdi:send
                        icon_height: 30px
                        card_mod:
                          style: |
                            ha-card {
                              width: 56px;
                              height: 56px !important;
                              margin-top: 16px;
                              border-radius: 100px;
                              float: right;
                            }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }  
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      } 
                    cards:
                      - type: custom:mini-media-player
                        entity: media_player.la_cuisine
                        artwork: none
                        icon: mdi:speaker
                        hide:
                          source: true
                          icon: true
                          name: true
                          power: true
                          play_pause: true
                          controls: true
                          next: true
                          prev: true
                          play_stop: true
                          progress: true
                          state_label: true
                          info: true
                        toggle_power: false
                        info: null
                        volume_stateless: false
                        group: true
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:message
                    layout: icon|name
                    name: Annonces chambres
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Chambre Tom" ]]]                  
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    cards:
                      - type: entities
                        entities:
                          - entity: input_text.annonce_dans_chambre_de_tom
                            name: Message à envoyer à Tom
                            card_mod:
                              style:
                                hui-generic-entity-row:
                                  $: |
                                    state-badge_card {
                                      display: none;
                                    } 
                                    :host {
                                      width: 194%;
                                    }
                                  ha-textfield $: |
                                    .mdc-text-field {
                                      border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                      border-radius: 110px !important;
                                    }
                                    .mdc-line-ripple::after,
                                    .mdc-line-ripple::before {
                                      border-bottom-style: none !important;
                                    }
                        show_header_toggle: false
                        card_mod:
                          style: |
                            "hui-generic-entity-row$state-badge_card": {
                              display: none;
                            }
                            ha-card {
                              background: none;
                            }
                      - type: button
                        tap_action:
                          action: call-service
                          service: script.annonce_dans_chambre_de_tom
                        show_name: false
                        show_icon: true
                        icon: mdi:send
                        icon_height: 30px
                        card_mod:
                          style: |
                            ha-card {
                              width: 56px;
                              height: 56px !important;
                              margin-top: 16px;
                              border-radius: 100px;
                              float: right;
                            }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }  
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      } 
                    cards:
                      - type: custom:mini-media-player
                        entity: media_player.tom
                        artwork: none
                        icon: mdi:speaker
                        hide:
                          source: true
                          icon: true
                          name: true
                          power: true
                          play_pause: true
                          controls: true
                          next: true
                          prev: true
                          play_stop: true
                          progress: true
                          state_label: true
                          info: true
                        toggle_power: false
                        info: null
                        volume_stateless: false
                        group: true
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Chambre Manon & Lélé" ]]]                  
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    cards:
                      - type: entities
                        entities:
                          - entity: input_text.annonce_dans_chambre_de_manon
                            name: Message à envoyer à Manon & Lélé
                            card_mod:
                              style:
                                hui-generic-entity-row:
                                  $: |
                                    state-badge_card {
                                      display: none;
                                    } 
                                    :host {
                                      width: 194%;
                                    }
                                  ha-textfield $: |
                                    .mdc-text-field {
                                      border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                      border-radius: 110px !important;
                                    }
                                    .mdc-line-ripple::after,
                                    .mdc-line-ripple::before {
                                      border-bottom-style: none !important;
                                    }
                        show_header_toggle: false
                        card_mod:
                          style: |
                            "hui-generic-entity-row$state-badge_card": {
                              display: none;
                            }
                            ha-card {
                              background: none;
                            }
                      - type: button
                        tap_action:
                          action: call-service
                          service: script.annonce_dans_chambre_de_manon
                        show_name: false
                        show_icon: true
                        icon: mdi:send
                        icon_height: 30px
                        card_mod:
                          style: |
                            ha-card {
                              width: 56px;
                              height: 56px !important;
                              margin-top: 16px;
                              border-radius: 100px;
                              float: right;
                            }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }  
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      } 
                    cards:
                      - type: custom:mini-media-player
                        entity: media_player.chambre_de_manon_et_leane
                        artwork: none
                        icon: mdi:speaker
                        hide:
                          source: true
                          icon: true
                          name: true
                          power: true
                          play_pause: true
                          controls: true
                          next: true
                          prev: true
                          play_stop: true
                          progress: true
                          state_label: true
                          info: true
                        toggle_power: false
                        info: null
                        volume_stateless: false
                        group: true
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Chambre de Nina" ]]]                  
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    cards:
                      - type: entities
                        entities:
                          - entity: input_text.annonce_dans_chambre_de_nina
                            name: Message à envoyer à Nina
                            card_mod:
                              style:
                                hui-generic-entity-row:
                                  $: |
                                    state-badge_card {
                                      display: none;
                                    } 
                                    :host {
                                      width: 194%;
                                    }
                                  ha-textfield $: |
                                    .mdc-text-field {
                                      border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                      border-radius: 110px !important;
                                    }
                                    .mdc-line-ripple::after,
                                    .mdc-line-ripple::before {
                                      border-bottom-style: none !important;
                                    }
                        show_header_toggle: false
                        card_mod:
                          style: |
                            "hui-generic-entity-row$state-badge_card": {
                              display: none;
                            }
                            ha-card {
                              background: none;
                            }
                      - type: button
                        tap_action:
                          action: call-service
                          service: script.annonce_dans_chambre_de_nina
                        show_name: false
                        show_icon: true
                        icon: mdi:send
                        icon_height: 30px
                        card_mod:
                          style: |
                            ha-card {
                              width: 56px;
                              height: 56px !important;
                              margin-top: 16px;
                              border-radius: 100px;
                              float: right;
                            }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }  
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      } 
                    cards:
                      - type: custom:mini-media-player
                        entity: media_player.nina
                        artwork: none
                        icon: mdi:speaker
                        hide:
                          source: true
                          icon: true
                          name: true
                          power: true
                          play_pause: true
                          controls: true
                          next: true
                          prev: true
                          play_stop: true
                          progress: true
                          state_label: true
                          info: true
                        toggle_power: false
                        info: null
                        volume_stateless: false
                        group: true
  - theme: Backend-selected
    title: Tom
    path: Tom
    subview: true
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:whistle
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: sensor.temp_tom
                template:
                  - badge_card
                  - temperature_state
                label: |
                  [[[
                    return states['sensor.temp_tom_arrondie'].state+"°"
                  ]]]
                tap_action:
                  action: more-info
              - type: custom:button-card
                entity: sensor.hum_tom
                template:
                  - badge_card
                  - humidity_state
                label: |
                  [[[
                    return states['sensor.hum_tom_arrondie'].state+"*"
                  ]]]
                tap_action:
                  action: more-info
              - type: custom:button-card
                entity: sensor.mouv_tom_luminosite
                template:
                  - badge_card
                  - brightness_state
                label: |
                  [[[
                    return entity.state+"lx"
                  ]]]
                tap_action:
                  action: more-info
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:bat
                        layout: icon|name
                        name: Chambre Tom
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:button-card
                    template:
                      - title_card
                    name: |
                      [[[ return "Appareils" ]]] 
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;
                        background-color: var(--card-background-color);
                        border-radius: var(--ha-card-border-radius) !important;
                      }          
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;  
                            border-radius: 50px !important;
                          }          
                        cards:
                          - type: custom:button-card
                            entity: binary_sensor.mouv_tom
                            name: null
                            template:
                              - ball_card
                              - security_card_state
                              - last_changed
                            show_label: true
                            show_state: false
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;  
                            border-radius: 50px !important;
                          }          
                        cards:
                          - type: custom:button-card
                            entity: switch.moustique_tom
                            name: Prise
                            template:
                              - ball_card
                              - last_changed
                              - card_state
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - title_card
                    name: |
                      [[[ return "Lumières" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                        border-radius: 30px;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: scene.tom_ambiance_normale
                            name: Normal
                            template:
                              - scene_card
                            variables:
                              color_icon: rgba(255,255,0,1)
                              color_card: rgba(255,255,0,0.1)
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.tom_ambiance_normale
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: scene.tom_ambiance_nuit
                            name: Geek
                            icon: mdi:desk
                            template:
                              - scene_card
                            variables:
                              color_icon: rgba(0,206,209,1)
                              color_card: rgba(0,206,209,0.1)
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.tom_ambiance_nuit
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: scene.tom_ambiance_nuit
                            name: Nuit
                            template:
                              - scene_card
                            variables:
                              color_icon: rgba(30,144,255,1)
                              color_card: rgba(30,144,255,0.1)
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.tom_ambiance_nuit
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        box-shadow: none;
                        background-color: var(--card-background-color);
                        
                      }          
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin-bottom: 10px;
                            border-radius: 50px;
                          } 
                        cards:
                          - type: custom:button-card
                            entity: light.tom
                            name: Toutes les lampes
                            template:
                              - ball_light_card
                              - light_card_state
                      - square: false
                        type: grid
                        columns: 2
                        cards:
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.lustre_tom
                                name: Lustre
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.chevet_tom
                                name: Chevet
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.lampe_de_bureau_tom
                                name: Lampe bureau
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.sonoff_10013f6d7e
                                name: Bureau
                                template:
                                  - ball_light_card
                                  - light_card_state
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:multimedia
                    layout: icon|name
                    name: Multimédias
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[
                    if ( states['media_player.tom'].state  == 'playing')
                      return "Musique en cours"
                    return 'Musique éteinte'
                  ]]]
              - type: custom:mini-media-player
                entity: media_player.tom
                artwork: material
                icon: mdi:speaker
                hide:
                  source: true
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Annonces  " ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  } 
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - entity: script.tom_va_se_coucher
                        name: Couché
                        type: custom:button-card
                        template:
                          - base
                          - mini_card_state
                        show_state: false
                        show_label: false
                        show_last_changed: true
                        show_name: true
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - entity: script.reveille_tom_annonce_alexa
                        name: Réveil
                        type: custom:button-card
                        template:
                          - base
                          - mini_card_state
                        show_state: false
                        show_label: false
                        show_last_changed: true
                        show_name: true
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: entities
                    entities:
                      - entity: input_text.annonce_dans_chambre_de_tom
                        name: Message à envoyer
                        card_mod:
                          style:
                            hui-generic-entity-row:
                              $: |
                                state-badge_card {
                                  display: none;
                                } 
                                :host {
                                  width: 194%;
                                }
                              ha-textfield $: |
                                .mdc-text-field {
                                  border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                  border-radius: 110px !important;
                                }
                                .mdc-line-ripple::after,
                                .mdc-line-ripple::before {
                                  border-bottom-style: none !important;
                                }
                    show_header_toggle: false
                    card_mod:
                      style: |
                        "hui-generic-entity-row$state-badge_card": {
                          display: none;
                        }
                        ha-card {
                          background: none;
                        }
                  - type: button
                    tap_action:
                      action: call-service
                      service: script.annonce_dans_chambre_de_tom
                    show_name: false
                    show_icon: true
                    icon: mdi:send
                    icon_height: 30px
                    card_mod:
                      style: |
                        ha-card {
                          width: 56px;
                          height: 56px !important;
                          margin-top: 16px;
                          border-radius: 100px;
                          float: right;
                        }
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:cog
                    layout: icon|name
                    name: Réglages
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }    
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }        
                    cards:
                      - entity: sensor.tom_reveil
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: Réveil
                        icon: mdi:alarm
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }    
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }        
                    cards:
                      - entity: automation.reveil_tom
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: Réveil auto
                        icon: mdi:progress-clock
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }        
                    cards:
                      - entity: automation.tom_allumage_auto
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: ON auto
                        icon: mdi:lightbulb-on-outline
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }    
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }        
                    cards:
                      - entity: automation.tom_chambre_off_auto
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: OFF auto
                        icon: mdi:lightbulb-multiple-off
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }        
                    cards:
                      - entity: switch.tom_do_not_disturb_switch
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: Silence
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:chart-line
                    layout: icon|name
                    name: Relevés
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                  }
                cards:
                  - type: custom:apexcharts-card
                    style: |
                      ha-card {
                         font-family: Avenir;
                         margin: 0px -10px -5px -10px;
                       }      
                    header:
                      show: true
                      title: ''
                      show_states: true
                      colorize_states: true
                    experimental:
                      brush: false
                      color_threshold: true
                    graph_span: 50h
                    now:
                      show: false
                      color: red
                      label: Maintenant
                    apex_config:
                      grid:
                        show: false
                      legend:
                        show: false
                        fontSize: 12px
                        height: 40
                      dataLabels:
                        enabled: false
                      fill:
                        type: gradient
                        gradient:
                          type: vertical
                          shadeIntensity: 0.8
                          inverseColors: false
                          opacityFrom: 0.5
                          opacityTo: 0
                          stops:
                            - - 0
                              - 50
                              - 100
                    yaxis:
                      - id: first
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: second
                        opposite: true
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: third
                        min: 0
                        max: 1
                        show: false
                    series:
                      - entity: sensor.night_state
                        yaxis_id: third
                        name: ''
                        color: grey
                        type: area
                        curve: stepline
                        stroke_width: 1
                        color_threshold:
                          - value: 0
                            color: darkgrey
                          - value: 1
                            color: darkgrey
                      - entity: sensor.temp_tom
                        name: Température
                        yaxis_id: first
                        unit: °
                        color: tomato
                        type: area
                        curve: smooth
                        fill_raw: last
                        stroke_width: 1
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        float_precision: 1
                        group_by:
                          func: last
                        color_threshold:
                          - value: 0
                            color: rgb(0,191,255)
                          - value: 16
                            color: rgb(38, 75, 150)
                          - value: 18
                            color: rgb(39, 179, 118)
                          - value: 24
                            color: rgb(249, 167, 62)
                          - value: 28
                            color: rgb(191, 33, 47)
                      - entity: sensor.hum_tom
                        name: humidité
                        unit: '%'
                        yaxis_id: second
                        color: dodgerblue
                        type: area
                        curve: smooth
                        fill_raw: last
                        stroke_width: 2
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        group_by:
                          func: last
  - theme: Backend-selected
    subview: true
    path: Manon Léane
    title: Manon Léane
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:cat
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: sensor.temp_manon
                template:
                  - badge_card
                  - temperature_state
                label: |
                  [[[
                    return states['sensor.temp_manon_arrondie'].state+"°"
                  ]]]
                tap_action:
                  action: more-info
              - type: custom:button-card
                entity: sensor.hum_manon
                template:
                  - badge_card
                  - humidity_state
                label: |
                  [[[
                    return states['sensor.hum_manon_arrondie'].state+"*"
                  ]]]
                tap_action:
                  action: more-info
              - type: custom:button-card
                entity: sensor.mouv_manon_luminosite
                template:
                  - badge_card
                  - - brightness_state
                label: |
                  [[[
                    if (entity.state == "unavailable")
                     return "HS"                
                    return entity.state + "lx"
                  ]]]
                tap_action:
                  action: more-info
              - type: custom:button-card
                entity: sensor.mouv_leane_luminosite
                template:
                  - badge_card
                  - - brightness_state
                label: |
                  [[[
                    if (entity.state == "unavailable")
                     return "HS"                
                    return entity.state + "lx"
                  ]]]
                tap_action:
                  action: more-info
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:death-star-variant
                        layout: icon|name
                        name: Chambre Manon & Léane
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:button-card
                    template:
                      - title_card
                    name: |
                      [[[ return "Appareils" ]]] 
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;
                        background-color: var(--card-background-color);        
                      }          
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;  
                            border-radius: 50px !important;
                          }          
                        cards:
                          - type: custom:button-card
                            entity: binary_sensor.mouv_manon
                            name: null
                            template:
                              - ball_card
                              - security_card_state
                              - last_changed
                            show_label: true
                            show_state: false
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px; 
                            border-radius: 50px !important;
                          }          
                        cards:
                          - type: custom:button-card
                            entity: binary_sensor.mouv_leane
                            name: null
                            template:
                              - ball_card
                              - security_card_state
                              - last_changed
                            show_label: true
                            show_state: false
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;
                        background-color: var(--card-background-color);        
                      }          
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;  
                            border-radius: 50px !important;
                          }          
                        cards:
                          - type: custom:button-card
                            entity: switch.moustique_manon
                            name: Prise
                            template:
                              - ball_card
                              - card_state
                              - last_changed
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - title_card
                    name: |
                      [[[ return "Lumières" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                        border-radius: 30px;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: scene.grande_chambre_ambiance_normale
                            template:
                              - scene_card
                            name: Normale
                            styles:
                              icon:
                                - color: rgba(255,255,0,1)
                              card:
                                - background-color: rgba(255,255,0,0.1)
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.grande_chambre_ambiance_normale
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: scene.grande_chambre_ambiance_nuit
                            template:
                              - scene_card
                            name: Nuit
                            styles:
                              icon:
                                - color: rgba(30,144,255,1)
                              card:
                                - background-color: rgba(30,144,255,0.1)
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.grande_chambre_ambiance_nuit
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        box-shadow: none;
                        background-color: var(--card-background-color);
                        
                      }          
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin-bottom: 10px;
                            border-radius: 50px;
                          } 
                        cards:
                          - type: custom:button-card
                            entity: light.manon_et_leane
                            name: Toutes les lampes
                            template:
                              - ball_light_card
                              - light_card_state
                      - square: false
                        type: grid
                        columns: 2
                        cards:
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.lustre_manon_et_leane
                                name: Lustre
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.chevet_manon
                                name: Chevet Manon
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.arbre_lumineux
                                name: Arbre
                                label: |
                                  [[[
                                    if( entity.state == "unavailable")
                                      return "Indisponible"
                                    if( entity.state == "off")
                                      return "Eteint"
                                    return "Allumé" ]]]           
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.lampe_de_bureau_manon
                                name: Bureau Manon
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.lampe_manon_et_leane
                                name: Lampadaire
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.chevet_leane
                                name: Chevet Léane
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.guirlande_leane
                                name: Guirlande
                                label: |
                                  [[[
                                    if( entity.state == "unavailable")
                                      return "Indisponible"
                                    if( entity.state == "off")
                                      return "Eteint"
                                    return "Allumé" ]]]                
                                template:
                                  - ball_light_card
                                  - light_card_state
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:multimedia
                    layout: icon|name
                    name: Multimédias
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[
                    if ( states['media_player.chambre_de_manon_et_leane'].state  == 'playing')
                      return "Musique en cours"
                    return 'Musique éteinte'
                  ]]]
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }         
                    cards:
                      - type: custom:mini-media-player
                        entity: media_player.chambre_de_manon_et_leane
                        artwork: material
                        icon: mdi:speaker
                        hide:
                          source: true
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }         
                    cards:
                      - type: custom:mini-media-player
                        entity: media_player.manon
                        artwork: material
                        icon: mdi:speaker
                        hide:
                          source: true
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }         
                    cards:
                      - type: custom:mini-media-player
                        entity: media_player.leane
                        artwork: material
                        icon: mdi:speaker
                        hide:
                          source: true
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Annonce  " ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: entities
                    entities:
                      - entity: input_text.annonce_dans_chambre_de_manon
                        name: Message à envoyer
                        card_mod:
                          style:
                            hui-generic-entity-row:
                              $: |
                                state-badge_card {
                                  display: none;
                                } 
                                :host {
                                  width: 194%;
                                }
                              ha-textfield $: |
                                .mdc-text-field {
                                  border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                  border-radius: 110px !important;
                                }
                                .mdc-line-ripple::after,
                                .mdc-line-ripple::before {
                                  border-bottom-style: none !important;
                                }
                    show_header_toggle: false
                    card_mod:
                      style: |
                        "hui-generic-entity-row$state-badge_card": {
                          display: none;
                        }
                        ha-card {
                          background: none;
                        }
                  - type: button
                    tap_action:
                      action: call-service
                      service: script.annonce_dans_chambre_de_manon
                    show_name: false
                    show_icon: true
                    icon: mdi:send
                    icon_height: 30px
                    card_mod:
                      style: |
                        ha-card {
                          width: 56px;
                          height: 56px !important;
                          margin-top: 16px;
                          border-radius: 100px;
                          float: right;
                        }
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:cog
                    layout: icon|name
                    name: Réglages
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Chambre" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - entity: automation.manon_leane_chambre_off_auto
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: OFF auto
                        icon: mdi:lightbulb-off-outline
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - entity: automation.manon_leane_chambre_allumage_auto
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: ON auto
                        icon: mdi:lightbulb-on-outline
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Manon" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - entity: sensor.manon_reveil
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: Réveil
                        icon: mdi:alarm
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - entity: automation.reveil_manon
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: Réveil auto
                        icon: mdi:progress-clock
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - entity: switch.manon_do_not_disturb_switch
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: Silence
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Réglages Léane" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - entity: sensor.leane_reveil
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: Réveil Lélé
                        icon: mdi:alarm
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - entity: automation.reveil_leane
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: Réveil auto
                        icon: mdi:progress-clock
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - entity: switch.leane_do_not_disturb_switch
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: Silence
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:chart-line
                    layout: icon|name
                    name: Relevés
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                  }
                cards:
                  - type: custom:apexcharts-card
                    style: |
                      ha-card {
                         font-family: Avenir;
                         margin: 0px -10px -5px -10px;
                       }      
                    header:
                      show: true
                      title: ''
                      show_states: true
                      colorize_states: true
                    experimental:
                      brush: false
                      color_threshold: true
                    graph_span: 50h
                    now:
                      show: false
                      color: red
                      label: Maintenant
                    apex_config:
                      grid:
                        show: false
                      legend:
                        show: false
                        fontSize: 12px
                        height: 40
                      dataLabels:
                        enabled: false
                      fill:
                        type: gradient
                        gradient:
                          type: vertical
                          shadeIntensity: 0.8
                          inverseColors: false
                          opacityFrom: 0.5
                          opacityTo: 0
                          stops:
                            - - 0
                              - 50
                              - 100
                    yaxis:
                      - id: first
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: second
                        opposite: true
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: third
                        min: 0
                        max: 1
                        show: false
                    series:
                      - entity: sensor.night_state
                        yaxis_id: third
                        name: ''
                        color: grey
                        type: area
                        curve: stepline
                        stroke_width: 1
                        color_threshold:
                          - value: 0
                            color: darkgrey
                          - value: 1
                            color: darkgrey
                      - entity: sensor.temp_manon
                        name: Température
                        yaxis_id: first
                        unit: °
                        color: tomato
                        type: area
                        curve: smooth
                        fill_raw: last
                        stroke_width: 1
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        float_precision: 1
                        group_by:
                          func: last
                        color_threshold:
                          - value: 0
                            color: rgb(0,191,255)
                          - value: 16
                            color: rgb(38, 75, 150)
                          - value: 18
                            color: rgb(39, 179, 118)
                          - value: 24
                            color: rgb(249, 167, 62)
                          - value: 28
                            color: rgb(191, 33, 47)
                      - entity: sensor.hum_manon
                        name: humidité
                        unit: '%'
                        yaxis_id: second
                        color: dodgerblue
                        type: area
                        curve: smooth
                        fill_raw: last
                        stroke_width: 2
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        group_by:
                          func: last
  - theme: Backend-selected
    path: Nina
    subview: true
    title: Nina
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:owl
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: sensor.temp_nina
                template:
                  - badge_card
                  - temperature_state
                label: |
                  [[[
                    return states['sensor.temp_nina_arrondie'].state+"°"
                  ]]]
                tap_action:
                  action: more-info
              - type: custom:button-card
                entity: sensor.hum_nina
                template:
                  - badge_card
                  - humidity_state
                label: |
                  [[[
                    return states['sensor.hum_nina_arrondie'].state+"*"
                  ]]]
                tap_action:
                  action: more-info
              - type: custom:button-card
                entity: sensor.mouv_nina_luminosite
                template:
                  - badge_card
                  - - brightness_state
                label: |
                  [[[
                    return entity.state+"lx"
                  ]]]
                tap_action:
                  action: more-info
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:owl
                        layout: icon|name
                        name: Chambre Nina
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:button-card
                    template:
                      - title_card
                    name: |
                      [[[ return "Appareils" ]]] 
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;
                        background-color: var(--card-background-color);        
                      }          
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;  
                            border-radius: 50px !important;
                          }          
                        cards:
                          - type: custom:button-card
                            entity: binary_sensor.mouv_nina
                            name: null
                            template:
                              - ball_card
                              - security_card_state
                              - last_changed
                            show_label: true
                            show_state: false
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px !important;
                          }          
                        cards:
                          - type: custom:button-card
                            entity: switch.moustique_nina
                            name: Prise
                            template:
                              - ball_card
                              - last_changed
                              - card_state
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - title_card
                    name: |
                      [[[ return "Lumières" ]]]
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                        border-radius: 30px;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: scene.nina_ambiance_normale
                            name: Normal
                            template:
                              - scene_card
                            variables:
                              color_icon: rgba(255,255,0,1)
                              color_card: rgba(255,255,0,0.1)
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.nina_ambiance_normale
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: scene.nina_ambiance_douce
                            name: Travail
                            icon: mdi:desk
                            template:
                              - scene_card
                            variables:
                              color_icon: rgba(255,255,0,1)
                              color_card: rgba(255,255,0,0.1)
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.nina_ambiance_douce
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: scene.nina_ambiance_douce
                            name: Lecture
                            icon: mdi:book-open
                            template:
                              - scene_card
                            variables:
                              color_icon: rgba(0,206,209,1)
                              color_card: rgba(0,206,209,0.1)
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.nina_ambiance_douce
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: scene.nina_ambiance_nuit
                            name: Nuit
                            template:
                              - scene_card
                            variables:
                              color_icon: rgba(30,144,255,1)
                              color_card: rgba(30,144,255,0.1)
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.nina_ambiance_nuit
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        box-shadow: none;
                        background-color: var(--card-background-color);
                        
                      }          
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin-bottom: 10px;
                            border-radius: 50px;
                          } 
                        cards:
                          - type: custom:button-card
                            entity: light.nina
                            name: Toutes les lampes
                            template:
                              - ball_light_card
                              - light_card_state
                      - square: false
                        type: grid
                        columns: 2
                        cards:
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.lustre_nina
                                name: Lustre
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.chevet_nina
                                name: Chevet
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.guirlande_nina
                                name: guirlande
                                label: |
                                  [[[
                                    if( entity.state == "unavailable")
                                      return "Indisponible"
                                    if( entity.state == "off")
                                      return "Eteint"
                                    return "Allumé" ]]]                     
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.lampadaire_nina
                                name: Lamapadaire
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.lampe_de_bureau_nina
                                name: Bureau
                                template:
                                  - ball_light_card
                                  - light_card_state
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:multimedia
                    layout: icon|name
                    name: Multimédias
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[
                    if ( states['media_player.nina'].state  == 'playing')
                      return "Musique en cours"
                    return 'Musique éteinte'
                  ]]]
              - type: custom:mini-media-player
                entity: media_player.nina
                artwork: material
                icon: mdi:speaker
                hide:
                  source: true
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Annonce  " ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: entities
                    entities:
                      - entity: input_text.annonce_dans_chambre_de_nina
                        name: Message à envoyer
                        card_mod:
                          style:
                            hui-generic-entity-row:
                              $: |
                                state-badge_card {
                                  display: none;
                                } 
                                :host {
                                  width: 194%;
                                }
                              ha-textfield $: |
                                .mdc-text-field {
                                  border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                  border-radius: 110px !important;
                                }
                                .mdc-line-ripple::after,
                                .mdc-line-ripple::before {
                                  border-bottom-style: none !important;
                                }
                    show_header_toggle: false
                    card_mod:
                      style: |
                        "hui-generic-entity-row$state-badge_card": {
                          display: none;
                        }
                        ha-card {
                          background: none;
                        }
                  - type: button
                    tap_action:
                      action: call-service
                      service: script.annonce_dans_chambre_de_nina
                    show_name: false
                    show_icon: true
                    icon: mdi:send
                    icon_height: 30px
                    card_mod:
                      style: |
                        ha-card {
                          width: 56px;
                          height: 56px !important;
                          margin-top: 16px;
                          border-radius: 100px;
                          float: right;
                        }
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:cog
                    layout: icon|name
                    name: Réglages
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }    
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }        
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: sensor.nina_reveil
                        name: Réveil
                        icon: mdi:alarm
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }    
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }        
                    cards:
                      - entity: automation.reveil_nina
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: Réveil auto
                        icon: mdi:progress-clock
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }        
                    cards:
                      - entity: automation.nina_chambre_allumage_auto
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: ON auto
                        icon: mdi:lightbulb-on-outline
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }    
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }        
                    cards:
                      - entity: automation.nina_chambre_off_auto
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: OFF auto
                        icon: mdi:lightbulb-group-off
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }        
                    cards:
                      - entity: switch.nina_do_not_disturb_switch
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        name: Silence
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:chart-line
                    layout: icon|name
                    name: Relevés
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                  }
                cards:
                  - type: custom:apexcharts-card
                    style: |
                      ha-card {
                         font-family: Avenir;
                         margin: 0px -10px -5px -10px;
                       }      
                    header:
                      show: true
                      title: ''
                      show_states: true
                      colorize_states: true
                    experimental:
                      brush: false
                      color_threshold: true
                    graph_span: 50h
                    now:
                      show: false
                      color: red
                      label: Maintenant
                    apex_config:
                      grid:
                        show: false
                      legend:
                        show: false
                        fontSize: 12px
                        height: 40
                      dataLabels:
                        enabled: false
                      fill:
                        type: gradient
                        gradient:
                          type: vertical
                          shadeIntensity: 0.8
                          inverseColors: false
                          opacityFrom: 0.5
                          opacityTo: 0
                          stops:
                            - - 0
                              - 50
                              - 100
                    yaxis:
                      - id: first
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: second
                        opposite: true
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: third
                        min: 0
                        max: 1
                        show: false
                    series:
                      - entity: sensor.night_state
                        yaxis_id: third
                        name: ''
                        color: grey
                        type: area
                        curve: stepline
                        stroke_width: 1
                        color_threshold:
                          - value: 0
                            color: darkgrey
                          - value: 1
                            color: darkgrey
                      - entity: sensor.temp_nina
                        name: Température
                        yaxis_id: first
                        unit: °
                        color: tomato
                        type: area
                        curve: smooth
                        fill_raw: last
                        stroke_width: 1
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        float_precision: 1
                        group_by:
                          func: last
                        color_threshold:
                          - value: 0
                            color: rgb(0,191,255)
                          - value: 16
                            color: rgb(38, 75, 150)
                          - value: 18
                            color: rgb(39, 179, 118)
                          - value: 24
                            color: rgb(249, 167, 62)
                          - value: 28
                            color: rgb(191, 33, 47)
                      - entity: sensor.hum_nina
                        name: humidité
                        unit: '%'
                        yaxis_id: second
                        color: dodgerblue
                        type: area
                        curve: smooth
                        fill_raw: last
                        stroke_width: 2
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        group_by:
                          func: last
  - theme: Backend-selected
    title: Escalier
    path: Escalier
    subview: true
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:stairs
    badge_cards: []
    cards:
      - type: vertical-stack
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: sensor.mouv_palier_lum
                label: |
                  [[[return entity.state+" lx"]]]
                template:
                  - badge_card
                  - - brightness_state
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:stairs-up
                    layout: icon|name
                    name: Escalier & Palier
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Capteurs" ]]] 
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    box-shadow: none;
                    background-color: var(--card-background-color);        
                  }          
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px; 
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_escalier
                        name: null
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;  
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_palier
                        name: null
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Lumières" ]]]       
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    box-shadow: none;
                    background-color: var(--card-background-color);
                    
                  }          
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin-bottom: 10px;
                        border-radius: 50px;
                      } 
                    cards:
                      - type: custom:button-card
                        entity: light.escaliers
                        name: Toutes les lampes
                        template:
                          - ball_light_card
                          - light_card_state
                  - square: false
                    type: grid
                    columns: 2
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px;
                          }    
                        cards:
                          - type: custom:button-card
                            entity: light.escalier
                            name: null
                            template:
                              - ball_light_card
                              - light_card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px;
                          }    
                        cards:
                          - type: custom:button-card
                            entity: light.palier
                            name: null
                            template:
                              - ball_light_card
                              - light_card_state
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:cog
                    layout: icon|name
                    name: Réglages
                    style:
                      name:
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;

                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 

                        border-radius: 50px !important;
                      }       
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: automation.escalier_palier_on
                        name: Allumage auto
                        icon: mdi:lightbulb-on-outline
  - theme: Backend-selected
    subview: true
    title: SDB
    path: SDB
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:shower-head
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: sensor.temp_salle_de_bain
                name: Température
                template:
                  - badge_card
                  - temperature_state
                label: |
                  [[[return entity.state +"°"]]]        
              - type: custom:button-card
                entity: sensor.hum_salle_de_bain
                name: Humidité
                label: |
                  [[[return entity.state+"%"]]]        
                template:
                  - badge_card
                  - humidity_state
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: phu:rooms-bathroom
                    layout: icon|name
                    name: Salle de bain
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 5px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - entity: switch.radiateur
                        name: Chauffage
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 5px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - entity: switch.radiateur
                        name: Prise conso
                        icon: mdi:flash
                        type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        label: >
                          [[[return
                          states['sensor.radiateur_active_power'].state+" W"]]]
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:speaker-message
                    layout: icon|name
                    name: Multimédias
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[
                    if ( states['media_player.la_salle_de_bain'].state  == 'playing')
                      return "Musique en cours"
                    return 'Musique éteinte'
                  ]]]
              - type: custom:mini-media-player
                entity: media_player.la_salle_de_bain
                artwork: material
                icon: mdi:speaker
                hide:
                  source: true
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Annonce  " ]]]
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    cards:
                      - type: entities
                        entities:
                          - entity: input_text.annonce_dans_salle_de_bain
                            name: Message à envoyer
                            card_mod:
                              style:
                                hui-generic-entity-row:
                                  $: |
                                    state-badge_card {
                                      display: none;
                                    } 
                                    :host {
                                      width: 194%;
                                    }
                                  ha-textfield $: |
                                    .mdc-text-field {
                                      border: 2px solid var( --ha-card-background, var(--card-background-color, white) );
                                      border-radius: 110px !important;
                                    }
                                    .mdc-line-ripple::after,
                                    .mdc-line-ripple::before {
                                      border-bottom-style: none !important;
                                    }
                        show_header_toggle: false
                        card_mod:
                          style: |
                            "hui-generic-entity-row$state-badge_card": {
                              display: none;
                            }
                            ha-card {
                              background: none;
                            }
                      - type: button
                        tap_action:
                          action: call-service
                          service: script.annonce_dans_salle_de_bain
                        show_name: false
                        show_icon: true
                        icon: mdi:send
                        icon_height: 30px
                        card_mod:
                          style: |
                            ha-card {
                              width: 56px;
                              height: 56px !important;
                              margin-top: 16px;
                              border-radius: 100px;
                              float: right;
                            }
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:chart-line
                    layout: icon|name
                    name: Relevés
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--ha-card-background);
                        box-shadow: none !important;
                        border-radius: 0px !important;
                      }        
                    cards:
                      - type: custom:button-card
                        template:
                          - climate_mini_card
                          - temperature_mini_card_state
                        entity: sensor.temp_salle_de_bain
                      - type: custom:button-card
                        template:
                          - climate_mini_card
                          - humidity_mini_card_state
                        entity: sensor.hum_salle_de_bain
                  - type: custom:apexcharts-card
                    style: |
                      ha-card {
                         font-family: Avenir;
                         margin: 0px -10px -5px -10px;
                       }      
                    header:
                      show: false
                      title: ''
                      show_states: true
                      colorize_states: true
                    experimental:
                      brush: false
                      color_threshold: true
                    graph_span: 50h
                    now:
                      show: false
                      color: red
                      label: Maintenant
                    apex_config:
                      grid:
                        show: false
                      legend:
                        show: false
                        fontSize: 12px
                        height: 40
                      dataLabels:
                        enabled: false
                      fill:
                        type: gradient
                        gradient:
                          type: vertical
                          shadeIntensity: 0.8
                          inverseColors: false
                          opacityFrom: 0.5
                          opacityTo: 0
                          stops:
                            - - 0
                              - 50
                              - 100
                    yaxis:
                      - id: first
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: second
                        opposite: true
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: third
                        min: 0
                        max: 1
                        show: false
                    series:
                      - entity: sensor.night_state
                        yaxis_id: third
                        name: ''
                        color: grey
                        type: area
                        curve: stepline
                        stroke_width: 1
                        color_threshold:
                          - value: 0
                            color: darkgrey
                          - value: 1
                            color: darkgrey
                      - entity: sensor.temp_salle_de_bain
                        name: Température
                        yaxis_id: first
                        unit: °
                        color: tomato
                        type: area
                        curve: smooth
                        fill_raw: last
                        stroke_width: 1
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        float_precision: 1
                        group_by:
                          func: last
                        color_threshold:
                          - value: 0
                            color: rgb(0,191,255)
                          - value: 16
                            color: rgb(38, 75, 150)
                          - value: 18
                            color: rgb(39, 179, 118)
                          - value: 24
                            color: rgb(249, 167, 62)
                          - value: 28
                            color: rgb(191, 33, 47)
                      - entity: sensor.hum_salle_de_bain
                        name: humidité
                        unit: '%'
                        yaxis_id: second
                        color: dodgerblue
                        type: area
                        curve: smooth
                        fill_raw: last
                        stroke_width: 2
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        group_by:
                          func: last
  - theme: Backend-selected
    title: Entrée
    subview: true
    path: Entrée
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:spotlight-beam
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: sensor.temp_couloir_arrondie
                name: Temp
                template:
                  - badge_card
                  - temperature_state
                label: |
                  [[[
                    return entity.state+"°"
                  ]]]
                tap_action:
                  action: more-info
              - type: custom:button-card
                entity: sensor.hum_couloir_arrondie
                name: Hum
                template:
                  - badge_card
                  - humidity_state
                label: |
                  [[[
                    return entity.state+"%"
                  ]]]
                tap_action:
                  action: more-info
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: phu:rooms-hallway
                    layout: icon|name
                    name: Entrée
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils" ]]] 
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    box-shadow: none;
                    border-radius: var(--ha-card-border-radius) !important;
                    background-color: var(--card-background-color);        
                  }          
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px; 
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.porte_entree
                        name: null
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;  
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_couloir
                        name: null
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    box-shadow: none;
                    background-color: var(--card-background-color);        
                  }          
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px; 
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: lock.serrure_entree
                        name: null
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Lumières" ]]]              
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    box-shadow: none;
                    background-color: var(--card-background-color);
                    
                  }          
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin-bottom: 10px;
                        border-radius: 50px;
                      } 
                    cards:
                      - type: custom:button-card
                        entity: light.entree_et_couloir
                        name: Toutes les lampes
                        template:
                          - ball_light_card
                          - light_card_state
                  - square: false
                    type: grid
                    columns: 2
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px;
                          }    
                        cards:
                          - type: custom:button-card
                            entity: light.veranda
                            name: null
                            template:
                              - ball_light_card
                              - light_card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px;
                          }    
                        cards:
                          - type: custom:button-card
                            entity: light.entree
                            name: null
                            template:
                              - ball_light_card
                              - light_card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px;
                          }    
                        cards:
                          - type: custom:button-card
                            entity: light.couloir
                            template:
                              - ball_light_card
                              - light_card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px;
                          }    
                        cards:
                          - type: custom:button-card
                            entity: light.aqara_hub_54e1
                            template:
                              - ball_light_card
                              - light_card_state
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:cctv
                    layout: icon|name
                    name: Caméras
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    box-shadow: none; 
                    border-radius: var(--ha-card-border-radius) !important;
                    background-color: var(--card-background-color);
                  }
                cards:
                  - type: custom:webrtc-camera
                    entity: camera.camera_entree
                    muted: true
                    ui: true
                    background: true
                    shortcuts:
                      - name: Lumière
                        icon: mdi:lightbulb
                        service: light.toggle
                        service_data:
                          entity_id: light.entree
                    style: |

                      ha-card { 
                        margin: 5px 0px 15px 0px;
                        border-radius: 25px !important;
                      }
              - entity: camera.aarlo_sonnette
                style: |

                  ha-card { 
                    border-radius: 25px !important;
                  }  
                title: Sonnette
                hide:
                  - date
                global: small
                image_click: play
                image_view: arlo-stream
                show:
                  - motion
                  - sound
                  - image_date
                  - signal_strength
                  - captured_today
                  - image_date
                  - on_off
                  - snapshot
                  - battery_level
                top_date: true
                top_status: false
                top_title: false
                type: custom:aarlo-glance
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:chart-line
                    layout: icon|name
                    name: Relevés
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    border-radius: var(--ha-card-border-radius) !important;
                    background-color: var(--card-background-color);
                  }
                cards:
                  - type: custom:apexcharts-card
                    style: |
                      ha-card {
                         font-family: Avenir;
                         margin: 0px -10px -5px -10px;
                       }      
                    header:
                      show: true
                      title: ''
                      show_states: true
                      colorize_states: true
                    experimental:
                      brush: false
                      color_threshold: true
                    graph_span: 50h
                    now:
                      show: false
                      color: red
                      label: Maintenant
                    apex_config:
                      grid:
                        show: false
                      legend:
                        show: false
                        fontSize: 12px
                        height: 40
                      dataLabels:
                        enabled: false
                      fill:
                        type: gradient
                        gradient:
                          type: vertical
                          shadeIntensity: 0.8
                          inverseColors: false
                          opacityFrom: 0.5
                          opacityTo: 0
                          stops:
                            - - 0
                              - 50
                              - 100
                    yaxis:
                      - id: first
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: second
                        opposite: true
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: third
                        min: 0
                        max: 1
                        show: false
                    series:
                      - entity: sensor.night_state
                        yaxis_id: third
                        name: ''
                        color: grey
                        type: area
                        curve: stepline
                        stroke_width: 1
                        color_threshold:
                          - value: 0
                            color: darkgrey
                          - value: 1
                            color: darkgrey
                      - entity: sensor.temp_couloir_rdc
                        name: Température
                        yaxis_id: first
                        unit: °
                        color: tomato
                        type: area
                        curve: smooth
                        fill_raw: last
                        stroke_width: 1
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        float_precision: 1
                        group_by:
                          func: last
                        color_threshold:
                          - value: 0
                            color: rgb(0,191,255)
                          - value: 16
                            color: rgb(38, 75, 150)
                          - value: 18
                            color: rgb(39, 179, 118)
                          - value: 24
                            color: rgb(249, 167, 62)
                          - value: 28
                            color: rgb(191, 33, 47)
                      - entity: sensor.hum_couloir_rdc
                        name: humidité
                        unit: '%'
                        yaxis_id: second
                        color: dodgerblue
                        type: area
                        curve: smooth
                        fill_raw: last
                        stroke_width: 2
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        group_by:
                          func: last
  - theme: Backend-selected
    title: Lavabo
    subview: true
    path: Lavabo
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:faucet
    badge_cards: []
    cards:
      - type: vertical-stack
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:hand-wash
                    layout: icon|name
                    name: Salle d'eau
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Capteurs" ]]] 
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    box-shadow: none;
                    border-radius: var(--ha-card-border-radius) !important;
                    background-color: var(--card-background-color);        
                  }          
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;  
                        border-radius: 50px !important;
                      }          
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.mouv_salle_d_eau
                        name: null
                        template:
                          - ball_card
                          - security_card_state
                          - last_changed
                        show_label: true
                        show_state: false
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Lumières" ]]] 
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    box-shadow: none;
                    background-color: var(--card-background-color);
                    
                  }          
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin-bottom: 10px;
                        border-radius: 50px;
                      } 
                    cards:
                      - type: custom:button-card
                        entity: light.lavabo
                        name: Toutes les lampes
                        template:
                          - ball_light_card
                          - light_card_state
                  - square: false
                    type: grid
                    columns: 2
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px;
                          }    
                        cards:
                          - type: custom:button-card
                            entity: light.wc_gauche
                            name: Gauche
                            template:
                              - ball_light_card
                              - light_card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px;
                          }    
                        cards:
                          - type: custom:button-card
                            entity: light.wc_droit
                            name: Droit
                            template:
                              - ball_light_card
                              - light_card_state
  - theme: Backend-selected
    title: Parents
    path: Parents
    subview: true
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:bed-king
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: sensor.temp_parents
                template:
                  - badge_card
                  - temperature_state
                label: |
                  [[[
                    return states['sensor.temp_parents_arrondie'].state+"°"
                  ]]]
                tap_action:
                  action: more-info
              - type: custom:button-card
                entity: sensor.hum_parents
                template:
                  - badge_card
                  - humidity_state
                label: |
                  [[[
                    return states['sensor.hum_parents_arrondie'].state+"%"
                  ]]]
                tap_action:
                  action: more-info
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: phu:rooms-bedroom
                        layout: icon|name
                        name: Chambre parents
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:button-card
                    template:
                      - title_card
                    name: |
                      [[[ return "Appareils " ]]] 
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;
                        border-radius: var(--ha-card-border-radius) !important;
                        background-color: var(--card-background-color);        
                      }          
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px; 
                            border-radius: 50px !important;
                          }          
                        cards:
                          - type: custom:button-card
                            entity: binary_sensor.porte_chambre_parents
                            name: null
                            template:
                              - ball_card
                              - security_card_state
                              - last_changed
                            show_label: true
                            show_state: false
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px !important;
                          }       
                        cards:
                          - type: custom:button-card
                            entity: switch.tele_des_parents
                            name: TV Parents
                            template:
                              - ball_card
                              - card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;
                            border-radius: 50px !important;
                          }       
                        cards:
                          - type: custom:button-card
                            entity: switch.moustique_parents
                            name: Anti-moustiques
                            template:
                              - ball_card
                              - card_state
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - title_card
                    name: |
                      [[[ return "Lumières" ]]]       
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                        border-radius: 15px;
                      }
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity: scene.chambre_parents_ambiance_normale
                            template:
                              - scene_card
                            name: Normale
                            variables:
                              color_icon: rgba(255,255,0,1)
                              color_card: rgba(255,255,0,0.1)
                            tap_action:
                              action: call-service
                              service: scene.turn_on
                              service_data:
                                entity_id: scene.chambre_parents_ambiance_normale
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity_picture: /local/ambiances/tv.png
                            entity: light.parents
                            name: TV
                            icon: mdi:television
                            template:
                              - scene_card
                            variables:
                              color_icon: rgba(255,0,0,1)
                              color_card: rgba(255,0,0,0.1)
                            tap_action:
                              action: call-service
                              service: script.turn_on
                              service_data:
                                entity_id: script.ambiance_cine_chevet_parents
                            double_tap_action:
                              action: more-info
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 5px;
                            border-radius: 15px;
                          }
                        cards:
                          - type: custom:button-card
                            entity_picture: /local/ambiances/nuit.png
                            entity: light.parents
                            name: Nuit
                            icon: mdi:creation
                            template:
                              - scene_card
                            variables:
                              color_icon: rgba(123,104,238,1)
                              color_card: rgba(123,104,238,0.3)
                            tap_action:
                              action: call-service
                              service: light.turn_off
                              service_data:
                                entity_id: light.parents
                            double_tap_action:
                              action: more-info
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        box-shadow: none;
                        background-color: var(--card-background-color);
                        
                      }          
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin-bottom: 10px;
                            border-radius: 50px;
                          } 
                        cards:
                          - type: custom:button-card
                            entity: light.parents
                            name: Toutes les lampes
                            template:
                              - ball_light_card
                              - light_card_state
                      - square: false
                        type: grid
                        columns: 2
                        cards:
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.lustre_parents
                                name: Lustre
                                template:
                                  - ball_light_card
                                  - light_card_state
                          - type: custom:vertical-stack-in-card
                            style: |
                              ha-card { 
                                margin: 2px;
                                border-radius: 50px;
                              }    
                            cards:
                              - type: custom:button-card
                                entity: light.chevet
                                name: null
                                template:
                                  - ball_light_card
                                  - light_card_state
      - type: custom:layout-card
        layout_type: masonry
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:multimedia
                    layout: icon|name
                    name: Multimédias
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: TV et musique
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                    border-radius: var(--ha-card-border-radius) !important;
                  }  
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }           
                    cards:
                      - type: custom:button-card
                        template:
                          - tv_parents_card
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                      }           
                    cards:
                      - type: custom:button-card
                        entity: media_player.chambre_des_parents
                        name: Parents
                        icon: mdi:speaker
                        template:
                          - base
                          - multimedia_card
                          - mini_card_state
                        custom_fields:
                          cartes:
                            card:
                              type: conditional
                              conditions:
                                - entity: media_player.chambre_des_parents
                                  state: playing
                              card:
                                type: custom:mini-media-player
                                entity: media_player.chambre_des_parents
                                group: false
                                sound_mode: full
                                artwork: full-cover
                                toggle_power: false
                                source: icon
                                hide:
                                  icon: true
                                  name: false
                                  source: true
                                style: >

                                  .flex {
                                    display: block;
                                    {% if not is_state('media_player.chambre_des_parents','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    {% else %}
                                    {% endif %}
                                  }  ha-card.--has-artwork .cover{
                                    opacity: 0.9;
                                  } .entity__info__media {
                                    opacity: 1 !important;
                                    padding-right: 16px;
                                    overflow: hidden;
                                    height: 4.4em;
                                    height: 100%;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex > div.entity__icon {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    display: none;
                                    {% endif %}
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__core.flex { }
                                  mmp-media-controls {
                                    {% if not is_state('input_boolean.musique','off') %}
                                    filter: drop-shadow(0px 2px 2px rgba(0,0,0,1));
                                    flex-wrap: wrap-reverse !important;
                                    {% endif %}
                                  } mmp-powerstrip  { } ha-card > div.mmp-player
                                  {
                                    padding: 12px !important;
                                    {% if not is_state('input_boolean.musique','off') %}
                                    {% else %}
                                    #display: none !important;
                                    {% endif %}
                                  } ha-card > div.mmp-player {
                                    {% if is_state_attr('media_player.chambre_des_parents','media_content_id', 'Bluetooth') %}
                                    position: relative;
                                    height: 20vh;
                                    {% else %}
                                    position: absolute;
                                    align-self: flex-start;
                                    height: 100%;
                                    {% endif %}
                                    
                                    background: radial-gradient(circle, rgba(255,255,255,0) 10%, rgba(0,0,0,0.6) 100%) !important;
                                    font-size: 0.9em !important;
                                  } ha-card > div.mmp-player >
                                  div.mmp-player__adds {
                                    position: absolute;
                                    bottom: 14px;
                                    padding: 0 16px 0 0;
                                  } div.flex.mmp-media-controls__media {
                                      margin-bottom: -5px !important;
                                  }
        layout:
          width: 280
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:chart-line
                    layout: icon|name
                    name: Relevés
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                  border-radius: var(--ha-card-border-radius) !important;
                    background-color: var(--card-background-color);
                  }
                cards:
                  - type: custom:apexcharts-card
                    style: |
                      ha-card {
                         font-family: Avenir;
                         margin: 0px -10px -5px -10px;
                       }      
                    header:
                      show: true
                      title: ''
                      show_states: true
                      colorize_states: true
                    experimental:
                      brush: false
                      color_threshold: true
                    graph_span: 50h
                    now:
                      show: false
                      color: red
                      label: Maintenant
                    apex_config:
                      grid:
                        show: false
                      legend:
                        show: false
                        fontSize: 12px
                        height: 40
                      dataLabels:
                        enabled: false
                      fill:
                        type: gradient
                        gradient:
                          type: vertical
                          shadeIntensity: 0.8
                          inverseColors: false
                          opacityFrom: 0.5
                          opacityTo: 0
                          stops:
                            - - 0
                              - 50
                              - 100
                    yaxis:
                      - id: first
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: second
                        opposite: true
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: third
                        min: 0
                        max: 1
                        show: false
                    series:
                      - entity: sensor.night_state
                        yaxis_id: third
                        name: ''
                        color: grey
                        type: area
                        curve: stepline
                        stroke_width: 1
                        color_threshold:
                          - value: 0
                            color: darkgrey
                          - value: 1
                            color: darkgrey
                      - entity: sensor.temp_parents
                        name: Température
                        yaxis_id: first
                        unit: °
                        color: tomato
                        type: area
                        curve: smooth
                        fill_raw: last
                        stroke_width: 1
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        float_precision: 1
                        group_by:
                          func: last
                        color_threshold:
                          - value: 0
                            color: rgb(0,191,255)
                          - value: 16
                            color: rgb(38, 75, 150)
                          - value: 18
                            color: rgb(39, 179, 118)
                          - value: 24
                            color: rgb(249, 167, 62)
                          - value: 28
                            color: rgb(191, 33, 47)
                      - entity: sensor.hum_parents
                        name: humidité
                        unit: '%'
                        yaxis_id: second
                        color: dodgerblue
                        type: area
                        curve: smooth
                        fill_raw: last
                        stroke_width: 2
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        group_by:
                          func: last
  - theme: Backend-selected
    subview: true
    title: Garage
    path: Garage
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:garage-open-variant
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: horizontal-stack
            cards:
              - type: custom:button-card
                entity: sensor.sonde_garage_temperature
                template:
                  - badge_card
                  - temperature_state
                label: |
                  [[[
                    return entity.state+"°"
                  ]]]
                tap_action:
                  action: more-info
              - type: custom:button-card
                entity: sensor.sonde_garage_humidite
                template:
                  - badge_card
                  - humidity_state
                label: |
                  [[[
                    return entity.state+"%"
                  ]]]
                tap_action:
                  action: more-info
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:garage-open-variant
                        layout: icon|name
                        name: Garage
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:button-card
                    template:
                      - title_card
                    name: |
                      [[[ return "Appareils" ]]] 
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;
                        background-color: var(--card-background-color);        
                      }          
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px; 
                            border-radius: 50px !important;
                          }          
                        cards:
                          - type: custom:button-card
                            entity: binary_sensor.mouv_garage
                            name: null
                            template:
                              - ball_card
                              - security_card_state
                              - last_changed
                            show_label: true
                            show_state: false
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;
                        background-color: var(--card-background-color);        
                      }          
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px; 
                            border-radius: 50px !important;
                          }          
                        cards:
                          - type: custom:button-card
                            entity: binary_sensor.porte_cagibi
                            name: null
                            template:
                              - ball_card
                              - security_card_state
                              - last_changed
                            show_label: true
                            show_state: false
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px; 
                            border-radius: 50px !important;
                          }          
                        cards:
                          - type: custom:button-card
                            entity: binary_sensor.porte_garage
                            name: null
                            template:
                              - ball_card
                              - security_card_state
                              - last_changed
                            show_label: true
                            show_state: false
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        box-shadow: none;
                        background-color: var(--card-background-color);        
                      }          
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;  
                            border-radius: 50px !important;
                          }          
                        cards:
                          - type: custom:button-card
                            entity: lock.garage
                            name: null
                            template:
                              - ball_card
                              - security_card_state
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin: 2px;  
                            border-radius: 50px !important;
                          }          
                        cards:
                          - type: custom:button-card
                            entity: input_select.lave_linge
                            name: null
                            template:
                              - ball_card
                              - custom_state
                              - card_state
                  - type: divider
                    style:
                      height: 0.5px
                      width: 100%
                      margin-left: auto
                      margin-right: auto
                      margin-top: 15px
                      margin-bottom: 15px
                      background: rgba(255,255,255,0.3)
                  - type: custom:button-card
                    template:
                      - title_card
                    name: |
                      [[[ return "Lumières" ]]]       
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        box-shadow: none;
                        background-color: var(--card-background-color);
                        
                      }          
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 
                            margin-bottom: 10px;
                            border-radius: 50px;
                          } 
                        cards:
                          - type: custom:button-card
                            entity: light.cagibi
                            name: null
                            template:
                              - ball_light_card
                              - light_card_state
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:cog
                        layout: icon|name
                        name: Réglages
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        padding: 2px;
                        box-shadow: none;

                      }   
                    cards:
                      - type: custom:vertical-stack-in-card
                        style: |
                          ha-card { 

                            border-radius: 50px !important;
                          }         
                        cards:
                          - entity: automation.cagibi_eclairage_off
                            type: custom:button-card
                            name: Cagibi extinction auto
                            icon: mdi:lightbulb-off
                            template:
                              - ball_card
                              - card_state
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:music
                        layout: icon|name
                        name: Médias
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        padding: 2px;
                        box-shadow: none;
                      }   
                    cards:
                      - type: custom:vertical-stack-in-card
                        cards:
                          - type: custom:mini-media-player
                            entity: media_player.le_garage
                            artwork: material
                            icon: mdi:speaker
                            hide:
                              source: true
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:cctv
                        layout: icon|name
                        name: Caméra
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        padding: 2px;
                        box-shadow: none;
                      }   
                    cards:
                      - type: custom:vertical-stack-in-card
                        cards:
                          - camera_view: live
                            type: picture-glance
                            title: Garage
                            entities:
                              - entity: alarm_control_panel.camera_g2hpro
                              - entity: binary_sensor.mouv_camera_g2hpro
                            camera_image: camera.camera_g2hpro
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:chart-line
                    layout: icon|name
                    name: Relevés
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                  }
                cards:
                  - type: custom:apexcharts-card
                    style: |
                      ha-card {
                         font-family: Avenir;
                         margin: 0px -10px -5px -10px;
                       }      
                    header:
                      show: true
                      title: ''
                      show_states: true
                      colorize_states: true
                    experimental:
                      brush: false
                      color_threshold: true
                    graph_span: 50h
                    now:
                      show: false
                      color: red
                      label: Maintenant
                    apex_config:
                      grid:
                        show: false
                      legend:
                        show: false
                        fontSize: 12px
                        height: 40
                      dataLabels:
                        enabled: false
                      fill:
                        type: gradient
                        gradient:
                          type: vertical
                          shadeIntensity: 0.8
                          inverseColors: false
                          opacityFrom: 0.5
                          opacityTo: 0
                          stops:
                            - - 0
                              - 50
                              - 100
                    yaxis:
                      - id: first
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: second
                        opposite: true
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: third
                        min: 0
                        max: 1
                        show: false
                    series:
                      - entity: sensor.night_state
                        yaxis_id: third
                        name: ''
                        color: grey
                        type: area
                        curve: stepline
                        stroke_width: 1
                        color_threshold:
                          - value: 0
                            color: darkgrey
                          - value: 1
                            color: darkgrey
                      - entity: sensor.sonde_garage_temperature
                        name: Température
                        yaxis_id: first
                        unit: °
                        color: tomato
                        type: area
                        curve: smooth
                        fill_raw: last
                        stroke_width: 1
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        float_precision: 1
                        group_by:
                          func: last
                        color_threshold:
                          - value: 0
                            color: rgb(0,191,255)
                          - value: 16
                            color: rgb(38, 75, 150)
                          - value: 18
                            color: rgb(39, 179, 118)
                          - value: 24
                            color: rgb(249, 167, 62)
                          - value: 28
                            color: rgb(191, 33, 47)
                      - entity: sensor.sonde_garage_humidite
                        name: humidité
                        unit: '%'
                        yaxis_id: second
                        color: dodgerblue
                        type: area
                        curve: smooth
                        fill_raw: last
                        stroke_width: 2
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        group_by:
                          func: last
  - theme: Backend-selected
    subview: true
    title: Système
    path: systeme
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:raspberry-pi
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:update
                    layout: icon|name
                    name: Mises à jour
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[
                    return "Démarrage il y a " + states['sensor.uptime_ha'].state 
                  ]]]
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    box-shadow: none;
                    background-color: var(--card-background-color);
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        variables:
                          entity: update.home_assistant_core_update
                          icon: mdi:home-assistant
                        name: Core
                        show_label: true
                        show_state: false
                        template:
                          - ball_card
                          - card_state
                        label: |
                          [[[
                            if (states['update.home_assistant_core_update'].state == "on")
                              return states['update.home_assistant_core_update'].attributes.installed_version+" > "+states['update.home_assistant_core_update'].attributes.latest_version
                            return states['update.home_assistant_core_update'].attributes.installed_version
                          ]]]
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    box-shadow: none;
                    background-color: var(--card-background-color);
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        entity: update.home_assistant_supervisor_update
                        variables:
                          entity: update.home_assistant_supervisor_update
                          icon: mdi:home-assistant
                        name: Supervisor
                        show_label: true
                        show_state: false
                        template:
                          - ball_card
                          - card_state
                        label: |
                          [[[
                            if (states['update.home_assistant_supervisor_update'].state == "on")
                              return states['update.home_assistant_supervisor_update'].attributes.installed_version+" > "+states['update.home_assistant_supervisor_update'].attributes.latest_version
                            return states['update.home_assistant_supervisor_update'].attributes.installed_version
                          ]]]              
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    box-shadow: none;
                    background-color: var(--card-background-color);
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        variables:
                          entity: update.home_assistant_operating_system_update
                          icon: mdi:home-assistant
                        name: HassOS
                        template:
                          - ball_card
                          - card_state
                        show_label: true
                        show_state: false
                        label: |
                          [[[
                            if (states['update.home_assistant_operating_system_update'].state == "on")
                              return states['sensor.home_assistant_operating_system_version'].state+" > "+states['sensor.home_assistant_operating_system_newest_version'].state
                            return states['sensor.home_assistant_operating_system_version'].state
                          ]]]                
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    box-shadow: none;
                    background-color: var(--card-background-color);

                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        border-radius: 50px !important;
                      }      
                    cards:
                      - type: custom:button-card
                        variables:
                          entity: sensor.hacs
                          name: Hacs
                          icon: mdi:package
                        show_label: true
                        show_state: false
                        template:
                          - ball_card
                        label: |
                          [[[
                            if (states['sensor.hacs'].state > 0)
                              return states['sensor.hacs'].state+" mises à jour"
                            return '0 mise à jour'
                          ]]]
                        styles:
                          card:
                            - background-color: |
                                [[[
                                  if (states['sensor.hacs'].state > 0)
                                    return "var(--color-card-blue)"
                                  return ""
                                ]]]                 
                          icon:
                            - color: |
                                [[[
                                  if (states['sensor.hacs'].state > 0)
                                    return 'var(--color-icon-blue)'
                                  return 'var(--icon-off)'
                                ]]]
                          img_cell:
                            - background-color: |
                                [[[
                                  if (states['sensor.hacs'].state > 0)
                                    return 'var(--color-img-cell-blue)'
                                  return 'var(--img-cell-off)'
                                ]]]
                        double_tap_action:
                          confirmation:
                            text: '[[[ return `Redirection vers hacs ?` ]]]'
                          action: navigate
                          navigation_path: /hacs/entry
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        box-shadow: none;
                      }
                    cards:
                      - type: conditional
                        conditions:
                          - entity: sensor.hacs
                            state_not: '0'
                        card:
                          type: custom:vertical-stack-in-card
                          style: |
                            ha-card { 
                              margin: -2px 17px 0px 17px;
                              border-radius: 30px;
                            }
                          cards:
                            - type: markdown
                              content: >-
                                <b>Mise à jour Hacs :</b><br>  {% if
                                states('sensor.hacs') | float < 1  -%}
                                 Aucune {%- else  %} {%
                                for repo in
                                states.sensor.hacs.attributes.repositories -%}-
                                {{ repo.display_name }} ({{
                                repo["available_version"] }})<br> {% endfor %} 
                                {%- endif -%}
                              style: |
                                ha-card {
                                  font-size: 90%;
                                  font-family: Avenir;
                                  background-color: 
                                    {% if states.sensor.hacs.state | float == 0 %}  
                                      "";
                                    {% else %} 
                                      var(--color-card-red)
                                    {% endif %}
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:home-assistant
                    layout: icon|name
                    name: Système
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 0px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:button-card
                    entity: sensor.cpu_temperature
                    name: RPI
                    template:
                      - mini_card
                    show_state: true
                    show_label: false
                    state:
                      - value: 85
                        operator: '>'
                        styles:
                          img_cell:
                            - background-color: var(--color-img-cell-red)
                          icon:
                            - color: var(--color-icon-red)
                      - value: 65
                        operator: '>'
                        styles:
                          img_cell:
                            - background-color: var(--color-img-cell-orange)
                          icon:
                            - color: var(--color-icon-orange)
                      - value: 30
                        operator: '>'
                        styles:
                          img_cell:
                            - background-color: var(--color-img-cell-green)
                          icon:
                            - color: var(--color-icon-green)
                      - value: 0
                        operator: '>'
                        styles:
                          img_cell:
                            - background-color: var(--color-img-cell-blue)
                          icon:
                            - color: var(--color-icon-blue)
                  - type: custom:button-card
                    entity: sensor.processor_use_percent
                    name: CPU
                    template:
                      - mini_card
                    show_state: true
                    show_label: false
                    state:
                      - value: 85
                        operator: '>'
                        styles:
                          img_cell:
                            - background-color: var(--color-img-cell-red)
                          icon:
                            - color: var(--color-icon-red)
                      - value: 65
                        operator: '>'
                        styles:
                          img_cell:
                            - background-color: var(--color-img-cell-orange)
                          icon:
                            - color: var(--color-icon-orange)
                      - value: 30
                        operator: '>'
                        styles:
                          img_cell:
                            - background-color: var(--color-img-cell-green)
                          icon:
                            - color: var(--color-icon-green)
                      - value: 0
                        operator: '>'
                        styles:
                          img_cell:
                            - background-color: var(--color-img-cell-blue)
                          icon:
                            - color: var(--color-icon-blue)
                  - type: custom:button-card
                    entity: sensor.memory_use_percent
                    name: RAM
                    template:
                      - mini_card
                    show_state: true
                    show_label: false
                    state:
                      - value: 85
                        operator: '>'
                        styles:
                          img_cell:
                            - background-color: var(--color-img-cell-red)
                          icon:
                            - color: var(--color-icon-red)
                      - value: 65
                        operator: '>'
                        styles:
                          img_cell:
                            - background-color: var(--color-img-cell-orange)
                          icon:
                            - color: var(--color-icon-orange)
                      - value: 30
                        operator: '>'
                        styles:
                          img_cell:
                            - background-color: var(--color-img-cell-green)
                          icon:
                            - color: var(--color-icon-green)
                      - value: 0
                        operator: '>'
                        styles:
                          img_cell:
                            - background-color: var(--color-img-cell-blue)
                          icon:
                            - color: var(--color-icon-blue)
                  - type: custom:button-card
                    entity: sensor.disk_use_percent_home
                    name: SSD
                    template:
                      - mini_card
                    show_state: true
                    show_label: false
                    state:
                      - value: 85
                        operator: '>'
                        styles:
                          img_cell:
                            - background-color: var(--color-img-cell-red)
                          icon:
                            - color: var(--color-icon-red)
                      - value: 65
                        operator: '>'
                        styles:
                          img_cell:
                            - background-color: var(--color-img-cell-orange)
                          icon:
                            - color: var(--color-icon-orange)
                      - value: 30
                        operator: '>'
                        styles:
                          img_cell:
                            - background-color: var(--color-img-cell-green)
                          icon:
                            - color: var(--color-icon-green)
                      - value: 0
                        operator: '>'
                        styles:
                          img_cell:
                            - background-color: var(--color-img-cell-blue)
                          icon:
                            - color: var(--color-icon-blue)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.rpi_power_status
                        name: Alim RPI
                        template:
                          - ball_card
                        styles:
                          card:
                            - background-color: |
                                [[[
                                  if (entity.state == 'off')
                                    return "var(--color-card-blue)"
                                ]]]                
                          img_cell:
                            - background-color: |
                                [[[
                                  if (entity.state == 'off')
                                    return "var(--color-img-cell-blue)"
                                ]]]
                          icon:
                            - color: |
                                [[[
                                  if (entity.state == 'off')
                                    return "var(--color-icon-blue)"
                                ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - type: custom:button-card
                        entity: binary_sensor.wan_status
                        name: Livebox
                        template:
                          - ball_card
                          - card_state
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - type: custom:button-card
                        entity: switch.tenda_naova
                        icon: mdi:power-socket-fr
                        name: Prise Tenda
                        template:
                          - ball_card
                          - card_state
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - type: custom:button-card
                        entity: device_tracker.tenda_nova_salon
                        icon: mdi:numeric-1-box-multiple
                        name: Salon
                        template:
                          - ball_card
                          - card_state
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - type: custom:button-card
                        entity: device_tracker.tenda_nova_parents
                        icon: mdi:numeric-2-box-multiple
                        name: Parents
                        template:
                          - ball_card
                          - card_state
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - type: custom:button-card
                        entity: device_tracker.tenda_nova_tom
                        icon: mdi:numeric-3-box-multiple
                        name: Tom
                        template:
                          - ball_card
                          - card_state
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - type: custom:button-card
                        entity: device_tracker.tenda_nova_leane
                        icon: mdi:numeric-4-box-multiple
                        name: Léane
                        template:
                          - ball_card
                          - card_state
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Maintenance" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - type: custom:button-card
                        entity: script.backup_full_ha
                        name: Sauvegarde
                        show_entity_picture: false
                        entity_picture: >-
                          /api/hassio/addons/cebe7a76_hassio_google_drive_backup/icon
                        template:
                          - ball_card
                          - card_state
                        styles:
                          entity_picture:
                            - width: 85%
                            - border-radius: 50%
                        tap_action:
                          confirmation:
                            text: '[[[ return `Sauvegarde HA ?` ]]]'
                          action: call-service
                          service: script.turn_on
                          service_data:
                            entity_id: script.backup_full_ha
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - type: custom:button-card
                        entity: script.restart_ha
                        name: Restart HA
                        icon: mdi:reload-alert
                        template:
                          - ball_card
                          - card_state
                        tap_action:
                          confirmation:
                            text: '[[[ return `Reboot HA ?` ]]]'
                          action: call-service
                          service: script.turn_on
                          service_data:
                            entity_id: script.restart_ha
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - type: custom:button-card
                        entity: script.redemarrer_le_pont_tenda_nova
                        name: Reboot Tenda
                        template:
                          - ball_card
                          - card_state
                        tap_action:
                          confirmation:
                            text: '[[[ return `Reboot le pont Tenda ?` ]]]'
                          action: call-service
                          service: script.turn_on
                          service_data:
                            entity_id: script.redemarrer_le_pont_tenda_nova
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;
                      }       
                    cards:
                      - type: custom:button-card
                        entity: script.rechargement_alexa_media_player
                        name: Reboot Alexa
                        template:
                          - ball_card
                          - card_state
                        tap_action:
                          confirmation:
                            text: '[[[ return `Reboot Alexa Media Player ?` ]]]'
                          action: call-service
                          service: script.turn_on
                          service_data:
                            entity_id: script.rechargement_alexa_media_player
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Surveillance" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                cards:
                  - type: custom:button-card
                    entity: sensor.systeme_avertissement
                    template:
                      - ball_card
                    show_label: true
                    show_name: false
                    show_state: false
                    show_icon: false
                    label: |
                      [[[
                        if (states['sensor.systeme_avertissement'].state == '')
                          return "Aucun avertissement"
                        return "AVERTISSEMENT <br><br>"+states['sensor.systeme_avertissement'].state
                      ]]]
                    styles:
                      card:
                        - padding: 15px 05px 05px 05px
                        - background-color: |
                            [[[
                              if (states['sensor.systeme_avertissement'].state == '')
                                return ""
                              return "var(--color-card-red)"
                            ]]]                          
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 300
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:chart-line
                    layout: icon|name
                    name: Relevés
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);

                    box-shadow: none;
                  }   
                cards:
                  - type: custom:apexcharts-card
                    style: |
                      ha-card {
                         font-family: Avenir;
                         margin: 0px -5px 0px -05px;
                       }      
                    header:
                      show: true
                      title: ''
                      show_states: true
                      colorize_states: true
                    graph_span: 3d
                    now:
                      show: false
                      color: red
                      label: Maintenant
                    apex_config:
                      grid:
                        show: false
                      legend:
                        show: false
                        fontSize: 12px
                        height: 40
                      dataLabels:
                        enabled: false
                      stroke:
                        width: 1
                        curve: smooth
                      fill:
                        type: gradient
                        gradient:
                          type: vertical
                          shadeIntensity: 0.8
                          inverseColors: false
                          opacityFrom: 0.5
                          opacityTo: 0
                          stops:
                            - - 0
                              - 50
                              - 100
                    yaxis:
                      - id: first
                        min: 0
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: second
                        min: 0
                        opposite: true
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                    all_series_config:
                      stroke_width: 2
                    series:
                      - entity: sensor.cpu_temperature
                        name: Température
                        yaxis_id: first
                        unit: °C
                        color: tomato
                        type: area
                        curve: smooth
                        fill_raw: last
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        float_precision: 1
                        group_by:
                          func: last
                      - entity: sensor.processor_use_percent
                        name: Processeur
                        yaxis_id: second
                        color: rgb(238,232,170)
                        type: area
                        curve: smooth
                        fill_raw: last
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        group_by:
                          func: last
                      - entity: sensor.memory_use_percent
                        name: Mémoire
                        yaxis_id: second
                        color: dodgerblue
                        type: area
                        curve: smooth
                        fill_raw: last
                        show:
                          extremas: true
                          in_brush: false
                          header_color_threshold: true
                          legend_value: false
                        float_precision: 1
                        group_by:
                          func: last
  - theme: Backend-selected
    subview: true
    title: Plantes
    path: Plantes
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    icon: mdi:flower
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:flower
                    layout: icon|name
                    name: Dracaena
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        padding: 2px;
                        box-shadow: none;
                      }           
                    cards:
                      - type: custom:bar-card
                        name: ''
                        entity_row: true
                        direction: up
                        unit_of_measurement: null
                        positions:
                          value: outside
                          name: 'off'
                          indicator: inside
                          icon: inside
                        max: 50
                        height: 92
                        width: 70px
                        icon: mdi:thermometer
                        severity:
                          - color: rgb(176, 196, 222)
                            from: 0
                            to: 8.9
                          - color: rgb(70, 130, 180)
                            from: 9
                            to: 36
                          - color: rgb(180, 70, 70)
                            from: 36.1
                            to: 50
                        style: |-
                          bar-card-background {
                            background-color: "#223548";
                          }
                          bar-card-value {
                            font-size: 15px;
                            font-weight: bold;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                          }
                          bar-card-name {
                            margin-top: 20px;
                            font-size: 14px;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                            font-weight: bold;
                          }
                          bar-card-iconbar {
                            color: rgb(225,225,225);
                          }
                          bar-card-indicator {
                            color: rgb(225,225,225);
                          }
                        entities:
                          - entity: sensor.plante_temp_dracaena
                      - type: custom:bar-card
                        name: ''
                        entity_row: true
                        direction: up
                        unit_of_measurement: null
                        positions:
                          value: outside
                          name: 'off'
                          indicator: inside
                          icon: inside
                        max: 100
                        height: 92
                        width: 70px
                        icon: mdi:water
                        severity:
                          - color: rgb(180, 70, 70)
                            from: 0
                            to: 8.9
                          - color: rgb(70, 130, 180)
                            from: 9
                            to: 41
                          - color: rgb(180, 70, 70)
                            from: 41.1
                            to: 100
                        style: |-
                          bar-card-background {
                            background-color: "#223548";
                          }
                          bar-card-value {
                            font-size: 15px;
                            font-weight: bold;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                          }
                          bar-card-name {
                            margin-top: 20px;
                            font-size: 14px;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                            font-weight: bold;
                          }
                          bar-card-iconbar {
                            color: rgb(225,225,225);
                          }
                          bar-card-indicator {
                            color: rgb(225,225,225);
                          }
                        entities:
                          - entity: sensor.plante_hum_dracaena
                      - type: custom:bar-card
                        name: ''
                        entity_row: true
                        direction: up
                        unit_of_measurement: null
                        positions:
                          value: outside
                          name: 'off'
                          indicator: inside
                          icon: inside
                        max: 5000
                        height: 92
                        width: 70px
                        icon: mdi:brightness-5
                        severity:
                          - color: rgb(180, 70, 70)
                            from: 0
                            to: 1999
                          - color: rrgb(70, 130, 180)
                            from: 2000
                            to: 5000
                          - color: rgb(180, 70, 70)
                            from: 5001
                            to: 20000
                        style: |-
                          bar-card-background {
                            background-color: "#223548";
                          }
                          bar-card-value {
                            font-size: 15px;
                            font-weight: bold;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                          }
                          bar-card-name {
                            margin-top: 20px;
                            font-size: 14px;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                            font-weight: bold;
                          }
                          bar-card-iconbar {
                            color: rgb(225,225,225);
                          }
                          bar-card-indicator {
                            color: rgb(225,225,225);
                          }
                        entities:
                          - entity: sensor.plante_lum_dracaena
                      - type: custom:bar-card
                        name: ''
                        entity_row: true
                        direction: up
                        unit_of_measurement: null
                        positions:
                          value: outside
                          name: 'off'
                          indicator: inside
                          icon: inside
                        max: 1500
                        height: 92
                        width: 70px
                        severity:
                          - color: rgb(180, 70, 70)
                            from: 0
                            to: 199
                          - color: rgb(70, 130, 180)
                            from: 200
                            to: 1500
                          - color: rgb(180, 70, 70)
                            from: 1501
                            to: 3000
                        style: |-
                          bar-card-background {
                            background-color: "#223548";
                          }
                          bar-card-value {
                            font-size: 15px;
                            font-weight: bold;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                          }
                          bar-card-name {
                            margin-top: 20px;
                            font-size: 14px;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                            font-weight: bold;
                          }
                          bar-card-iconbar {
                            color: rgb(225,225,225);
                          }
                          bar-card-indicator {
                            color: rgb(225,225,225);
                          }
                        entities:
                          - entity: sensor.plante_fertilite_dracaena
              - type: custom:apexcharts-card
                header:
                  show: true
                  show_states: true
                  colorize_states: true
                graph_span: 7d
                apex_config:
                  grid:
                    show: false
                  legend:
                    fontSize: 12px
                    height: 40
                  dataLabels:
                    enabled: false
                  stroke:
                    width: 1
                    curve: smooth
                  fill:
                    type: gradient
                    gradient:
                      type: vertical
                      shadeIntensity: 0.8
                      inverseColors: false
                      opacityFrom: 0.5
                      opacityTo: 0
                      stops:
                        - - 0
                          - 50
                          - 100
                yaxis:
                  - id: first
                    max: ~100
                    min: ~0
                    decimals: 1
                    apex_config:
                      tickAmount: 4
                  - id: second
                    opposite: true
                    min: ~0
                    decimals: 1
                    apex_config:
                      tickAmount: 4
                all_series_config:
                  stroke_width: 1
                series:
                  - entity: sensor.plante_hum_dracaena
                    name: humidité
                    yaxis_id: first
                    unit: '%'
                    color: rgb(70, 130, 180)
                    type: area
                    show:
                      extremas: true
                      in_brush: false
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: max
                  - entity: sensor.plante_fertilite_dracaena
                    name: fertilité du sol
                    yaxis_id: second
                    unit: µS/cm
                    color: rgb(70, 180, 103)
                    type: area
                    show:
                      extremas: true
                      in_brush: false
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: max
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:flower
                    layout: icon|name
                    name: Pied d'Elephant
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        padding: 2px;
                        box-shadow: none;
                      }           
                    cards:
                      - type: custom:bar-card
                        name: ''
                        entity_row: true
                        direction: up
                        unit_of_measurement: null
                        positions:
                          value: outside
                          name: 'off'
                          indicator: inside
                          icon: inside
                        max: 50
                        height: 92
                        width: 70px
                        icon: mdi:thermometer
                        severity:
                          - color: rgb(180, 70, 70)
                            from: 0
                            to: 6.9
                          - color: rgb(70, 130, 180)
                            from: 7
                            to: 32
                          - color: rgb(180, 70, 70)
                            from: 32.1
                            to: 50
                        style: |-
                          bar-card-background {
                            background-color: "#223548";
                          }
                          bar-card-value {
                            font-size: 15px;
                            font-weight: bold;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                          }
                          bar-card-name {
                            margin-top: 20px;
                            font-size: 14px;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                            font-weight: bold;
                          }
                          bar-card-iconbar {
                            color: rgb(225,225,225);
                          }
                          bar-card-indicator {
                            color: rgb(225,225,225);
                          }
                        entities:
                          - entity: sensor.plante_temp_pied_elephant
                      - type: custom:bar-card
                        name: ''
                        entity_row: true
                        direction: up
                        unit_of_measurement: null
                        positions:
                          value: outside
                          name: 'off'
                          indicator: inside
                          icon: inside
                        max: 100
                        height: 92
                        width: 70px
                        icon: mdi:water
                        severity:
                          - color: rgb(180, 70, 70)
                            from: 0
                            to: 8.9
                          - color: rgb(70, 130, 180)
                            from: 9
                            to: 40
                          - color: rgb(180, 70, 70)
                            from: 41.1
                            to: 100
                        style: |-
                          bar-card-background {
                            background-color: "#223548";
                          }
                          bar-card-value {
                            font-size: 15px;
                            font-weight: bold;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                          }
                          bar-card-name {
                            margin-top: 20px;
                            font-size: 14px;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                            font-weight: bold;
                          }
                          bar-card-iconbar {
                            color: rgb(225,225,225);
                          }
                          bar-card-indicator {
                            color: rgb(225,225,225);
                          }
                        entities:
                          - entity: sensor.plante_hum_pied_elephant
                      - type: custom:bar-card
                        name: ''
                        entity_row: true
                        direction: up
                        unit_of_measurement: null
                        positions:
                          value: outside
                          name: 'off'
                          indicator: inside
                          icon: inside
                        max: 5000
                        height: 92
                        width: 70px
                        icon: mdi:brightness-5
                        severity:
                          - color: rgb(180, 70, 70)
                            from: 0
                            to: 2999
                          - color: rgb(70, 130, 180)
                            from: 3000
                            to: 10000
                          - color: rgb(180, 70, 70)
                            from: 10001
                            to: 20000
                        style: |-
                          bar-card-background {
                            background-color: "#223548";
                          }
                          bar-card-value {
                            font-size: 15px;
                            font-weight: bold;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                          }
                          bar-card-name {
                            margin-top: 20px;
                            font-size: 14px;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                            font-weight: bold;
                          }
                          bar-card-iconbar {
                            color: rgb(225,225,225);
                          }
                          bar-card-indicator {
                            color: rgb(225,225,225);
                          }
                        entities:
                          - entity: sensor.plante_lum_pied_elephant
                      - type: custom:bar-card
                        name: ''
                        entity_row: true
                        direction: up
                        unit_of_measurement: null
                        positions:
                          value: outside
                          name: 'off'
                          indicator: inside
                          icon: inside
                        max: 2000
                        height: 92
                        width: 70px
                        severity:
                          - color: rgb(180, 70, 70)
                            from: 0
                            to: 349
                          - color: rgb(70, 130, 180)
                            from: 350
                            to: 2000
                          - color: rgb(180, 70, 70)
                            from: 2001
                            to: 3000
                        style: |-
                          bar-card-background {
                            background-color: "#223548";
                          }
                          bar-card-value {
                            font-size: 15px;
                            font-weight: bold;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                          }
                          bar-card-name {
                            margin-top: 20px;
                            font-size: 14px;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                            font-weight: bold;
                          }
                          bar-card-iconbar {
                            color: rgb(225,225,225);
                          }
                          bar-card-indicator {
                            color: rgb(225,225,225);
                          }
                        entities:
                          - entity: sensor.plante_fertilite_pied_elephant
              - type: custom:apexcharts-card
                header:
                  show: true
                  show_states: true
                  colorize_states: true
                graph_span: 7d
                apex_config:
                  grid:
                    show: false
                  legend:
                    fontSize: 12px
                    height: 40
                  dataLabels:
                    enabled: false
                  stroke:
                    width: 1
                    curve: smooth
                  fill:
                    type: gradient
                    gradient:
                      type: vertical
                      shadeIntensity: 0.8
                      inverseColors: false
                      opacityFrom: 0.5
                      opacityTo: 0
                      stops:
                        - - 0
                          - 50
                          - 100
                yaxis:
                  - id: first
                    max: ~100
                    min: ~0
                    decimals: 1
                    apex_config:
                      tickAmount: 4
                  - id: second
                    opposite: true
                    min: ~0
                    decimals: 1
                    apex_config:
                      tickAmount: 4
                all_series_config:
                  stroke_width: 1
                series:
                  - entity: sensor.plante_hum_pied_elephant
                    name: humidité
                    yaxis_id: first
                    unit: '%'
                    color: rgb(70, 130, 180)
                    type: area
                    show:
                      extremas: true
                      in_brush: false
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: max
                  - entity: sensor.plante_fertilite_pied_elephant
                    name: fertilité du sol
                    yaxis_id: second
                    unit: µS/cm
                    color: rgb(70, 180, 103)
                    type: area
                    show:
                      extremas: true
                      in_brush: false
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: max
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:flower
                    layout: icon|name
                    name: Citronnier
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        background-color: var(--card-background-color);
                        padding: 2px;
                        box-shadow: none;
                      }           
                    cards:
                      - type: custom:bar-card
                        name: ''
                        entity_row: true
                        direction: up
                        unit_of_measurement: null
                        positions:
                          value: outside
                          name: 'off'
                          indicator: inside
                          icon: inside
                        max: 50
                        height: 92
                        width: 70px
                        icon: mdi:thermometer
                        severity:
                          - color: rgb(180, 70, 70)
                            from: 0
                            to: 4.9
                          - color: rgb(70, 130, 180)
                            from: 5
                            to: 36
                          - color: rgb(180, 70, 70)
                            from: 36.1
                            to: 50
                        style: |-
                          bar-card-background {
                            background-color: "#223548";
                          }
                          bar-card-value {
                            font-size: 15px;
                            font-weight: bold;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                          }
                          bar-card-name {
                            margin-top: 20px;
                            font-size: 14px;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                            font-weight: bold;
                          }
                          bar-card-iconbar {
                            color: rgb(225,225,225);
                          }
                          bar-card-indicator {
                            color: rgb(225,225,225);
                          }
                        entities:
                          - entity: sensor.plante_citro_temp
                      - type: custom:bar-card
                        name: ''
                        entity_row: true
                        direction: up
                        unit_of_measurement: null
                        positions:
                          value: outside
                          name: 'off'
                          indicator: inside
                          icon: inside
                        max: 100
                        height: 92
                        width: 70px
                        icon: mdi:water
                        severity:
                          - color: rgb(180, 70, 70)
                            from: 0
                            to: 13.9
                          - color: rgb(70, 130, 180)
                            from: 14
                            to: 61
                          - color: rgb(180, 70, 70)
                            from: 61.1
                            to: 100
                        style: |-
                          bar-card-background {
                            background-color: "#223548";
                          }
                          bar-card-value {
                            font-size: 15px;
                            font-weight: bold;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                          }
                          bar-card-name {
                            margin-top: 20px;
                            font-size: 14px;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                            font-weight: bold;
                          }
                          bar-card-iconbar {
                            color: rgb(225,225,225);
                          }
                          bar-card-indicator {
                            color: rgb(225,225,225);
                          }
                        entities:
                          - entity: sensor.plante_citro_humidite
                      - type: custom:bar-card
                        name: ''
                        entity_row: true
                        direction: up
                        unit_of_measurement: null
                        positions:
                          value: outside
                          name: 'off'
                          indicator: inside
                          icon: inside
                        max: 5000
                        height: 92
                        width: 70px
                        icon: mdi:brightness-5
                        severity:
                          - color: rgb(180, 70, 70)
                            from: 0
                            to: 3699
                          - color: rgb(70, 130, 180)
                            from: 3700
                            to: 70000
                          - color: rgb(180, 70, 70)
                            from: 70001
                            to: 10000
                        style: |-
                          bar-card-background {
                            background-color: "#223548";
                          }
                          bar-card-value {
                            font-size: 15px;
                            font-weight: bold;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                          }
                          bar-card-name {
                            margin-top: 20px;
                            font-size: 14px;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                            font-weight: bold;
                          }
                          bar-card-iconbar {
                            color: rgb(225,225,225);
                          }
                          bar-card-indicator {
                            color: rgb(225,225,225);
                          }
                        entities:
                          - entity: sensor.plante_citro_lum
                      - type: custom:bar-card
                        name: ''
                        entity_row: true
                        direction: up
                        unit_of_measurement: null
                        positions:
                          value: outside
                          name: 'off'
                          indicator: inside
                          icon: inside
                        max: 1500
                        height: 92
                        width: 70px
                        severity:
                          - color: rgb(180, 70, 70)
                            from: 0
                            to: 199
                          - color: rgb(70, 130, 180)
                            from: 200
                            to: 1500
                          - color: rgb(180, 70, 70)
                            from: 1501
                            to: 2000
                        style: |-
                          bar-card-background {
                            background-color: "#223548";
                          }
                          bar-card-value {
                            font-size: 15px;
                            font-weight: bold;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                          }
                          bar-card-name {
                            margin-top: 20px;
                            font-size: 14px;
                            color: rgb(225,225,225);
                            text-shadow: 1px 1px #0005;
                            font-weight: bold;
                          }
                          bar-card-iconbar {
                            color: rgb(225,225,225);
                          }
                          bar-card-indicator {
                            color: rgb(225,225,225);
                          }
                        entities:
                          - entity: sensor.plante_citro_fertilite
              - type: custom:apexcharts-card
                header:
                  show: true
                  show_states: true
                  colorize_states: true
                graph_span: 7d
                apex_config:
                  grid:
                    show: false
                  legend:
                    fontSize: 12px
                    height: 40
                  dataLabels:
                    enabled: false
                  stroke:
                    width: 1
                    curve: smooth
                  fill:
                    type: gradient
                    gradient:
                      type: vertical
                      shadeIntensity: 0.8
                      inverseColors: false
                      opacityFrom: 0.5
                      opacityTo: 0
                      stops:
                        - - 0
                          - 50
                          - 100
                yaxis:
                  - id: first
                    max: ~100
                    min: ~0
                    decimals: 1
                    apex_config:
                      tickAmount: 4
                  - id: second
                    opposite: true
                    min: ~0
                    decimals: 1
                    apex_config:
                      tickAmount: 4
                all_series_config:
                  stroke_width: 1
                series:
                  - entity: sensor.plante_citro_humidite
                    name: humidité
                    yaxis_id: first
                    unit: '%'
                    color: rgb(70, 130, 180)
                    type: area
                    show:
                      extremas: true
                      in_brush: false
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: max
                  - entity: sensor.plante_citro_fertilite
                    name: fertilité du sol
                    yaxis_id: second
                    unit: µS/cm
                    color: rgb(70, 180, 103)
                    type: area
                    show:
                      extremas: true
                      in_brush: false
                    float_precision: 1
                    group_by:
                      duration: 10min
                      func: max
  - theme: Backend-selected
    subview: true
    title: Calendrier
    path: Calendrier
    icon: mdi:weather-partly-cloudy
    type: custom:horizontal-layout
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:calendar-badge_card
                    layout: icon|name
                    name: >-
                      Météo du {{ states('sensor.date_jour') }} {{
                      states('sensor.date_numero') }} {{
                      states('sensor.date_mois_court') }}
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    border-radius: var(--ha-card-border-radius) !important;
                  }
                cards:
                  - type: custom:meteofrance-weather-card
                    entity: weather.ta_ville
                    rainForecastEntity: sensor.ta_ville_next_rain_2
                    current: true
                    one_hour_forecast: false
                    forecast: false
                    details: false
                    alert_forecast: false
                    style: |
                      ha-card {
                        font-size: 90%;
                        font-weight: 500;
                        font-family: Avenir;
                        color: var(--text-off);
                    number_of_forecasts: '5'
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;

                      }       
                    cards:
                      - type: custom:button-card
                        entity: sun.sun
                        show_name: true
                        show_state: false
                        show_label: true
                        label: |
                          [[[ return states['sensor.weather_soleil'].state]]]
                        name: Soleil
                        template:
                          - ball_card
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 2px;
                        border-radius: 50px !important;

                      }       
                    cards:
                      - type: custom:button-card
                        entity: sensor.moon_phase
                        show_name: true
                        show_label: false
                        name: Lune
                        template:
                          - ball_card
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    horizontal: true
                    style: |
                      ha-card { 
                        padding: 0px 0px 10px 0px;
                        background-color: var(--ha-card-background);
                        border-radius: 0px;
                        box-shadow: none;
                      }
                    cards:
                      - type: custom:button-card
                        entity: sensor.weather_temp_max
                        icon: mdi:thermometer-chevron-up
                        show_name: false
                        show_label: true
                        label: >
                          [[[ return states['sensor.weather_temp_max'].state + "
                          °C" ]]]
                        template:
                          - mini_card
                          - outside_temperature_state
                      - type: custom:button-card
                        entity: sensor.weather_conditions_vent
                        icon: mdi:weather-windy-variant
                        show_name: false
                        show_label: true
                        label: >
                          [[[ return
                          states['sensor.weather_conditions_vent'].state + "
                          km/h" ]]]
                        template:
                          - mini_card
                        state:
                          - value: 40
                            operator: '>'
                            styles:
                              img_cell:
                                - background-color: var(--color-img-cell-red)
                              icon:
                                - color: var(--color-icon-red)
                      - type: custom:button-card
                        entity: sensor.weather_conditions_ciel
                        icon: mdi:weather-cloudy
                        show_name: false
                        show_label: true
                        label: >
                          [[[ return
                          states['sensor.weather_conditions_ciel'].state + " %"
                          ]]]
                        template:
                          - mini_card
                        state:
                          - value: 60
                            operator: ''
                            styles:
                              img_cell:
                                - background-color: var(--color-img-cell-red)
                              icon:
                                - color: var(--color-icon-red)
                      - type: custom:button-card
                        entity: sensor.weather_conditions_pluie
                        icon: mdi:weather-pouring
                        show_name: false
                        show_label: true
                        label: >
                          [[[ return
                          states['sensor.weather_conditions_pluie'].state + " %"
                          ]]]
                        template:
                          - mini_card
                        state:
                          - value: 30
                            operator: '>'
                            styles:
                              img_cell:
                                - background-color: var(--color-img-cell-red)
                              icon:
                                - color: var(--color-icon-red)
                      - type: custom:button-card
                        entity: sensor.weather_conditions_uv
                        icon: mdi:weather-sunny-alert
                        show_name: false
                        show_label: true
                        label: >
                          [[[ return
                          states['sensor.weather_conditions_uv'].state + "
                          UV"]]]
                        template:
                          - mini_card
                        state:
                          - value: 6
                            operator: '>'
                            styles:
                              img_cell:
                                - background-color: var(--color-img-cell-red)
                              icon:
                                - color: var(--color-icon-red)
                      - type: custom:button-card
                        entity: sensor.weather_conditions_neige
                        icon: mdi:weather-snowy-heavy
                        show_name: false
                        show_label: true
                        label: >
                          [[[ return
                          states['sensor.weather_conditions_neige'].state + " %"
                          ]]]
                        template:
                          - mini_card
                        state:
                          - value: 0
                            operator: '>'
                            styles:
                              img_cell:
                                - background-color: var(--color-img-cell-red)
                              icon:
                                - color: var(--color-icon-red)
                  - type: custom:meteofrance-weather-card
                    entity: weather.ta_ville
                    rainForecastEntity: sensor.ta_ville_next_rain_2
                    current: false
                    one_hour_forecast: true
                    forecast: false
                    details: false
                    alert_forecast: false
                    style: |
                      ha-card {
                        font-size: 85%;
                        font-family: Avenir;
                        color: var(--text-off);
                    number_of_forecasts: '5'
                  - type: custom:meteofrance-weather-card
                    entity: weather.ta_ville
                    number_of_forecasts: '5'
                    current: false
                    details: false
                    one_hour_forecast: true
                    alert_forecast: true
                    rainChanceEntity: sensor.ta_ville_daily_precipitation
                    uvEntity: sensor.ta_ville_uv_2
                    cloudCoverEntity: sensor.ta_ville_cloud_cover
                    freezeChanceEntity: sensor.ta_ville_freeze_chance_2
                    snowChanceEntity: sensor.ta_ville_snow_chance_2
                    alertEntity: sensor.49_weather_alert
                    style: |
                      ha-card {
                        font-size: 85%;
                        font-family: Avenir;
                        color: var(--text-off);
                  - type: custom:apexcharts-card
                    experimental:
                      color_threshold: true
                    header:
                      title: ''
                      show: false
                      show_states: true
                      colorize_states: true
                    now:
                      show: false
                      color: var(--color-dark-blue)
                      label: Maintenant
                    graph_span: 3d
                    apex_config:
                      chart:
                        height: 150px
                      tooltip:
                        enabled: true
                      yaxis:
                        labels:
                          style:
                            fontSize: 12px
                            fontFamily: Avenir
                      xaxis:
                        axisBorder:
                          show: false
                        labels:
                          style:
                            fontSize: 12px
                            fontFamily: Avenir
                      legend:
                        show: false
                      grid:
                        show: false
                        strokeDashArray: 3
                        position: back
                      dataLabels:
                        enabled: true
                      stroke:
                        width: 1
                      fill:
                        type: gradient
                        gradient:
                          type: vertical
                          shadeIntensity: 0.8
                          inverseColors: false
                          opacityFrom: 0.6
                          opacityTo: 0
                          stops:
                            - 0
                            - 50
                            - 100
                    yaxis:
                      - id: first
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                      - id: second
                        opposite: true
                        decimals: 1
                        apex_config:
                          tickAmount: 4
                    series:
                      - entity: sensor.weather_temperature
                        name: Temp
                        yaxis_id: first
                        color: tomato
                        unit: °C
                        type: area
                        curve: smooth
                        fill_raw: last
                        float_precision: 1
                        show:
                          extremas: true
                        group_by:
                          func: max
                        color_threshold:
                          - value: -30
                            color: '#ADD8E6'
                          - value: 10
                            color: rgb(0,191,255)
                          - value: 18
                            color: rgb(39, 179, 118)
                          - value: 25
                            color: rgb(249, 167, 62)
                          - value: 28
                            color: rgb(191, 33, 47)
                          - value: 35
                            color: rgb(191, 33, 47)
                      - entity: sensor.weather_conditions_pluie
                        name: Pluie
                        yaxis_id: second
                        color: dodgerblue
                        unit: '%'
                        type: area
                        curve: smooth
                        fill_raw: last
                        float_precision: 1
                        show:
                          extremas: true
                        group_by:
                          func: max
                        color_threshold:
                          - value: 1
                            color: rgb(173, 216, 230)
                          - value: 60
                            color: rgb(0,191,255)
                    style: |
                      ha-card {
                         padding: 5px;
                         margin-top: -10px;
                         font-family: Avenir;
                       }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    border-radius: var(--ha-card-border-radius) !important;
                  }
                cards:
                  - type: custom:clock-weather-card
                    entity: weather.ta_ville
                    title: ''
                    sun_entity: sun.sun
                    weather_icon_type: fill
                    animated_icon: true
                    forecast_days: 7
                    locale: fr
                    time_format: 24
                    date_pattern: d MMMM y
                    hide_today_section: true
                    hide_forecast_section: false
                    style: |
                      ha-card {
                        font-size: 90%;
                        font-family: Avenir;
                        color: var(--text-off),
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 320
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:calendar-badge_card
                    layout: icon|name
                    name: >-
                      {{ states('sensor.date_jour') }} {{
                      states('sensor.date_numero') }} {{
                      states('sensor.date_mois') }} {{
                      states('sensor.date_annee') }}
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    padding: 2px;
                    box-shadow: none;
                  }   
                cards:
                  - type: custom:vertical-stack-in-card
                    cards:
                      - type: custom:button-card
                        template:
                          - police
                        show_name: false
                        show_label: true
                        name: |
                          [[[return "Au programme"]]]
                        label: |
                          [[[
                            if (states['sensor.calendar_famille'].state == "Aucun évènement" && states['sensor.calendar_poubelles'].state == "Aucun évènement" )
                              return "Aucun";
                            return states['sensor.calendar_famille'].state + "<br>" + states['sensor.calendar_poubelles'].state;
                          ]]]
                        styles:
                          name:
                            - font-size: 12px
                            - font-weight: 600
                            - padding: 5px
                            - color: var(--text-off)
                          label:
                            - font-size: 14px
                            - color: var(--text-off)
                          card:
                            - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                            - padding: 03%
                            - background: none
              - type: custom:vertical-stack-in-card
                cards:
                  - initial_view: dayGridMonth
                    type: calendar
                    entities:
                      - calendar.famille_famille
                      - calendar.calendrier_calendrier
                      - calendar.poubelles_poubelles
  - theme: Backend-selected
    title: Air
    path: air
    type: custom:horizontal-layout
    layout:
      width: 350
    subview: true
    icon: mdi:air-filter
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 280
        cards:
          - type: vertical-stack
            cards:
              - type: entities
                entities:
                  - type: custom:paper-buttons-row
                    buttons:
                      - icon: mdi:virus
                        layout: icon|name
                        name: Moniteur qualité de l'air
                        style:
                          name:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            margin-left: 18px
                            font-size: 15px
                            font-weight: 600
                            color: var(--title)
                          icon:
                            filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                            '--mdc-icon-size': 20px
                            color: var(--title)
                      - icon: mdi:close
                        layout: icon
                        tap_action:
                          action: navigate
                          navigation_path: /
                        style:
                          icon:
                            '--mdc-icon-size': 15px
                    style: |
                      div.flex-box {
                        margin-top: -6px;
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                      }
              - type: custom:vertical-stack-in-card
                style: |
                  ha-card { 
                    margin-top: -3px !important;
                    margin-bottom: 5px !important;
                    margin-left: 25px;
                    margin-right: 25px;
                    padding: 10px;
                    border-radius: 30px !important;

                  }
                cards:
                  - type: custom:button-card
                    entity: sensor.moniteur_qualite_air
                    template:
                      - police
                    show_name: true
                    show_label: false
                    show_icon: false
                    show_last_changed: true
                    name: |
                      [[[
                        if (states['sensor.qualite_air_pourcentage'].state >= 98.8  )
                          return states['sensor.moniteur_qualite_air'].state + " ppb : " + 'Excellent'
                        if (states['sensor.qualite_air_pourcentage'].state < 98.8 && states['sensor.qualite_air_pourcentage'].state > 96 )
                          return states['sensor.moniteur_qualite_air'].state + " ppb : " + 'Correct'
                        if (states['sensor.qualite_air_pourcentage'].state <= 96 && states['sensor.qualite_air_pourcentage'].state > 88 )
                          return states['sensor.moniteur_qualite_air'].state + " ppb : " + 'Moyen, aération recommandée'
                        if (states['sensor.qualite_air_pourcentage'].state <= 88 && states['sensor.qualite_air_pourcentage'].state > 60 )
                          return states['sensor.moniteur_qualite_air'].state + " ppb : " + 'Mauvais, Moyen, aération nécessaire '
                        if (states['sensor.qualite_air_pourcentage'].state <= 60  )
                          return states['sensor.moniteur_qualite_air'].state + " ppb : " + 'Danger !'
                        return ''
                      ]]]
                    styles:
                      name:
                        - font-size: 15px
                        - font-weight: 600
                        - white-space: normal
                        - color: |
                            [[[
                              if (states['sensor.qualite_air_pourcentage'].state >= 98.8  )
                                return 'var(--text-on)'
                              if (states['sensor.qualite_air_pourcentage'].state < 98.8 && states['sensor.qualite_air_pourcentage'].state > 96 )
                                return 'var(--color-green)'
                              if (states['sensor.qualite_air_pourcentage'].state <= 96 && states['sensor.qualite_air_pourcentage'].state > 88 )
                                return 'var(--color-orange)'
                              if (states['sensor.qualite_air_pourcentage'].state <= 88 && states['sensor.qualite_air_pourcentage'].state > 60 )
                                return 'var(--color-red)'
                              if (states['sensor.qualite_air_pourcentage'].state <= 60  )
                                return 'var(--color-red)'
                              return ''
                            ]]]            
                      label:
                        - font-size: 12px
                        - white-space: normal
                      card:
                        - filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.3))
                        - padding: 0px
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    margin-top: -110px !important;
                    margin-bottom: -150px !important;
                    background: none;
                    box-shadow: none;
                    padding: 0%
                  }
                cards:
                  - type: grid
                    columns: 1
                    cards:
                      - type: custom:apexcharts-card
                        style: |
                          ha-card { 
                            background: none;
                            margin: 50px;
                          }
                        header:
                          show: false
                          title: test
                          show_states: true
                          colorize_states: true
                        chart_type: radialBar
                        experimental:
                          color_threshold: true
                        apex_config:
                          legend:
                            onItemHover:
                              highlightDataSeries: false
                            show: false
                          plotOptions:
                            radialBar:
                              startAngle: -180
                              endAngle: 180
                              dataLabels:
                                name:
                                  offsetY: -5
                                value:
                                  offsetY: -1
                          stroke:
                            dashArray: 2
                            lineCap: butt
                        series:
                          - entity: sensor.qualite_air_pourcentage
                            name: qualité
                            group_by:
                              duration: 10min
                              func: last
                            color_threshold:
                              - value: 60
                                color: var(--color-red)
                              - value: 88
                                color: var(--color-orange)
                              - value: 96
                                color: var(--color-green)
                              - value: 98.7
                                color: var(--color-dark-blue)
              - type: custom:apexcharts-card
                header:
                  show: false
                  title: ''
                  show_states: true
                  colorize_states: true
                experimental:
                  brush: false
                  color_threshold: true
                graph_span: 4d
                now:
                  show: false
                  color: red
                  label: Maintenant
                apex_config:
                  grid:
                    show: false
                  legend:
                    show: false
                    fontSize: 12px
                    height: 40
                  dataLabels:
                    enabled: false
                  fill:
                    type: gradient
                    gradient:
                      type: vertical
                      shadeIntensity: 0.8
                      inverseColors: false
                      opacityFrom: 0.5
                      opacityTo: 0
                      stops:
                        - - 0
                          - 50
                          - 100
                yaxis:
                  - id: first
                    decimals: 1
                    apex_config:
                      tickAmount: 4
                  - id: second
                    min: 0
                    max: 1
                    show: false
                series:
                  - entity: sensor.night_state
                    yaxis_id: second
                    name: ''
                    color: grey
                    type: area
                    curve: stepline
                    stroke_width: 1
                    color_threshold:
                      - value: 0
                        color: darkgrey
                      - value: 1
                        color: darkgrey
                  - entity: sensor.moniteur_qualite_air
                    name: Air
                    yaxis_id: first
                    type: area
                    curve: smooth
                    fill_raw: last
                    stroke_width: 1
                    show:
                      extremas: true
                      in_brush: false
                      header_color_threshold: true
                      legend_value: false
                    float_precision: 1
                    group_by:
                      func: last
                    color_threshold:
                      - value: 0
                        color: '#ADD8E6'
                      - value: 65
                        color: rgb(38, 75, 150)
                      - value: 220
                        color: rgb(39, 179, 118)
                      - value: 660
                        color: rgb(249, 167, 62)
                      - value: 2200
                        color: rgb(191, 33, 47)
                style: |
                  ha-card {
                     margin-top: -32px;

                     font-family: Avenir;
                   }
  - theme: Backend-selected
    title: reglages
    path: reglages
    icon: mdi:cog
    subview: true
    type: custom:horizontal-layout
    layout:
      width: 350
    badge_cards: []
    cards:
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 350
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:order-bool-descending-variant
                    layout: icon|name
                    name: Modes
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: input_boolean.nilemato
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: group.enfants_au_lit
                        name: Enfants au lit
                        icon: mdi:bed-clock
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: schedule.week_end
                        icon: mdi:calendar-check
                        tap_action:
                          action: more-info
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: input_boolean.belle_saison
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: input_boolean.vacances
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: input_boolean.noel
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: input_boolean.halloween
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: automation.annonce_ecole
                        name: Annonce École
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 350
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:card-bulleted
                    layout: icon|name
                    name: Infos carte activité
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Sécurité" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: input_boolean.header_show_lumiere
                        name: Lumières
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        name: Serrures
                        template:
                          - ball_card
                          - card_state
                        entity: input_boolean.header_show_serrures
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: input_boolean.header_show_porte
                        name: Portes
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: input_boolean.header_show_mouvement
                        name: Mouvements
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Appareils" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: input_boolean.header_show_appareils
                        name: Appareils
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: input_boolean.header_show_connecte
                        name: Connectés
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: input_boolean.header_show_appareils_charges
                        name: Chargés
              - type: divider
                style:
                  height: 0.5px
                  width: 100%
                  margin-left: auto
                  margin-right: auto
                  margin-top: 15px
                  margin-bottom: 15px
                  background: rgba(255,255,255,0.3)
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Infos" ]]]
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: input_boolean.header_show_mode
                        name: Modes
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: input_boolean.header_show_maj
                        name: MàJ
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: input_boolean.header_show_courrier
                        name: Courrier
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: input_boolean.header_show_info
                        name: Savoir
      - type: custom:layout-card
        layout_type: masonry
        layout:
          width: 350
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:draw-pen
                    layout: icon|name
                    name: Thèmes
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: script.theme_reload
                        name: Recharger les thèmes
                        tap_action:
                          action: toggle
              - type: custom:vertical-stack-in-card
                horizontal: true
                style: |
                  ha-card { 
                    background-color: var(--card-background-color);
                    box-shadow: none;
                  }
                cards:
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: script.theme_jour
                        name: Geek Light
                        tap_action:
                          action: toggle
                  - type: custom:vertical-stack-in-card
                    style: |
                      ha-card { 
                        margin: 0 3px 0 3px;
                        border-radius: 50px !important;
                      }
                    cards:
                      - type: custom:button-card
                        template:
                          - ball_card
                          - card_state
                        entity: script.theme_nuit
                        name: Geek Dark
                        tap_action:
                          action: toggle
  - theme: Backend-selected
    title: Invités
    path: invités
    subview: true
    icon: mdi:qrcode-scan
    badge_cards: []
    cards:
      - type: vertical-stack
        cards:
          - type: entities
            entities:
              - type: custom:paper-buttons-row
                buttons:
                  - icon: mdi:home-account
                    layout: icon|name
                    name: Invités
                    style:
                      name:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        margin-left: 18px
                        font-size: 15px
                        font-weight: 600
                        color: var(--title)
                      icon:
                        filter: drop-shadow(0px 2px 2px rgba(0,0,0,0.5))
                        '--mdc-icon-size': 20px
                        color: var(--title)
                  - icon: mdi:close
                    layout: icon
                    tap_action:
                      action: navigate
                      navigation_path: /
                    style:
                      icon:
                        '--mdc-icon-size': 15px
                style: |
                  div.flex-box {
                    margin-top: -6px;
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                  }
              - type: custom:button-card
                template:
                  - title_card
                name: |
                  [[[ return "Wifi" ]]]
              - type: custom:vertical-stack-in-card
                cards:
                  - type: picture
                    image: /local/qr code wifi.PNG
                    tap_action:
                      action: navigate
                      navigation_path: /
                    hold_action:
                      action: none
  - theme: Backend-selected
    title: test
    path: test
    icon: mdi:test-tube
    layout:
      width: 350
      max_cols: 4
    type: custom:horizontal-layout
    visible:
      - user: 76afcf1927a948b19530bcbf1074ac59
    badge_cards: []
    cards:
      - type: custom:button-card
        template:
          - ball_card
        show_label: true
        name: MadGeek par Aurel RV
        label: Bon courage à tous !
        icon: mdi:home-assistant
